{"version":3,"sources":["global.js","theme.js","pages/Home/home.css.js","styles/Middlepane.css.js","axios-config.js","state/auth/authActions.js","state/cart/cartActions.js","components/AppBar/AppBar.js","components/AdsCarousel/adsCarousel.css.js","components/AdsCarousel/AdsCarousel.js","components/ProtectedRoute/ProtectedRoute.js","components/ProductsGrid/productGrid.css.js","components/ProductsGrid/productItem.css.js","components/ProductsGrid/ProductItem.js","components/ProductsGrid/ProductGrid.js","components/Comments/commentItem.css.js","components/Comments/CommentItem.js","state/comments/commentsActions.js","components/Comments/CommentForm.js","components/Comments/comments.css.js","components/Comments/Comments.js","components/Cart/cart.css.js","components/Cart/ControllQuantity.js","components/Cart/Cart.js","components/ShippingForm/shippingForm.css.js","components/ShippingForm/ShippingForm.js","components/PaymentForm/paymentForm.css.js","components/PaymentForm/PaymentForm.js","components/OrderList/OrderListRow.js","components/OrderList/OrderList.js","state/promo/promoActions.js","components/PromoList/PromoListRow.js","components/PromoList/PromoList.js","components/PromoForm/AddPromoForm.js","components/PromoForm/EditPromoForm.js","components/PromoForm/PromoForm.js","state/products/productActions.js","components/ProductList/ProductListRow.js","components/ProductList/ProductList.js","components/ProductForm/AddProductForm.js","components/ProductForm/EditProductDetailsForm.js","components/ProductForm/ReduceStorageForm.js","components/ProductForm/ProductForm.js","state/orders/ordersActions.js","components/PaymentStatus/paymentStatus.css.js","components/PaymentStatus/PaymentStatus.js","components/OrderAddressDetails/orderAddressDetails.css.js","components/OrderAddressDetails/OrderAddressDetails.js","components/OrderProductList/orderProductList.css.js","state/productsService/productsServiceActions.js","components/OrderProductList/OrderProductListRow.js","components/OrderProductList/OrderProductList.js","components/ProductsInServiceList/ProductsInServiceRow.js","components/ProductsInServiceList/ProductsInServiceList.js","components/ProductInServiceForm/ProductInServiceForm.js","pages/Home/Home.js","pages/Offer/Offer.js","pages/Promo/Promo.js","pages/ProductDetails/productDetails.css.js","pages/ProductDetails/ProductDetails.js","pages/Login/login.css.js","pages/Login/Login.js","pages/Account/account.css.js","pages/Account/Account.js","pages/Orders/Orders.js","pages/Register/register.css.js","pages/Register/Register.js","pages/PlaceOrder/PlaceOrder.js","state/categories/categoriesActions.js","pages/ProductManagement/ProductManagement.js","pages/PromoManagement/PromoManagement.js","pages/OrderDetails/orderDetails.css.js","pages/OrderDetails/OrderDetails.js","pages/ServiceManagement/ServiceManagement.js","pages/Finances/Finances.js","App.js","serviceWorker.js","state/products/productReducer.js","state/auth/authReducer.js","state/promo/promoReducer.js","state/cart/cartReducer.js","state/comments/commentsReducer.js","state/orders/ordersReducer.js","state/categories/categoriesReducer.js","state/productsService/productsServiceReducer.js","state/rootReducer.js","state/store.js","font/Cyberpunk.ttf","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","primaryDark","primaryLight","primaryHover","mobile","Paragraph","styled","p","Middlepane","div","MiddlepaneOffer","instance","axios","create","baseURL","LOGIN_SUCCESS","LOGIN_FAILURE","USER_ACCOUNT_UPDATE_SUCCESS","LOGOUT_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","CLEAR_NOTIFICATION","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_FROM_CART","REDUCE_PRODUCT_QUANTITY_FROM_CART","ADD_ADDRESS","ADD_PAYMENT_METHOD","GET_USER_ADDRESSES_SUCCESS","CLEAR_CART","PLACE_ORDER_SUCCESS","addProductToCart","productId","productName","price","type","payload","useStyles","makeStyles","grow","flexGrow","root","background","color","menuButton","marginLeft","spacing","marginRight","title","fontFamily","fontSize","fontWeight","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","sectionDesktop","maxWidth","categories","categoriesTitle","join","withRouter","props","history","classes","React","useState","anchorEl","setAnchorEl","isMenuOpen","Boolean","state","useSelector","count","cart","productList","auth","dispatch","useDispatch","handleProfileMenuClick","e","pageRoute","preventDefault","push","handleLogout","alert","menuId","menuUserLoggedIn","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","style","isAdmin","MenuItem","onClick","menuUserLoggedOut","className","AppBar","Toolbar","IconButton","edge","Typography","variant","noWrap","aria-label","Badge","badgeContent","length","aria-controls","aria-haspopup","event","currentTarget","align","isLoggedIn","Box","CarouselWrapper","CarouselLink","Link","Carousel","items","promos","promosList","map","promo","to","onDragStart","animationType","animationDuration","disableButtonsControls","infinite","mouseTracking","autoPlay","autoPlayInterval","ProtectedRoute","Component","component","rest","render","GridContainer","GridElement","CustomLink","Btn","ProductItem","productInfo","category","getProductIcon","category_id","name","promo_id","promo_price","mb","borderColor","Rating","value","parseFloat","rating","readOnly","precision","ProductGrid","productsInfo","item","Span","span","CommentItem","commentData","nick","parseInt","stars","description","CREATE_COMMENT_SUCCES","GET_COMMENTS_SUCCES","GET_COMMENTS_FAILURE","CommentForm","userId","setNick","commentText","setCommentText","rate","setRate","class","onSubmit","authorId","a","put","then","res","data","catch","err","console","log","message","createCommentToProduct","placeholder","required","onChange","target","newValue","CommentsWrapper","Comments","useEffect","get","getCommentsToProduct","comments","status","sort","b","commentsList","comment","user","button","ControllBtn","ControllQuantity","quantity","setCount","reduceProductQuantityFromCart","columns","minWidth","label","container","head","Cart","cartItems","cartValue","handleCellType","product","removeProductFromCart","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","colSpan","toFixed","ShippingWrapper","Container","paper","marginTop","flexDirection","marginBottom","avatar","margin","secondary","main","form","shippingMethods","ShippingForm","handleNext","handleBack","addressId","setAddressId","country","setCountry","city","setCity","postcode","setPostcode","street","setStreet","building","setBuilding","apartment","setApartment","shippingMethod","setShippingMethod","shippingValue","setShippingValue","currentAddressState","address","userAddresses","getUserAddresses","validateCountry","test","validatePostCode","validateStreet","validate","addAdress","Grid","xs","InputLabel","Select","labelId","fullWidth","filter","ad","handleExistingAddressSelect","sm","TextField","autoComplete","autoFocus","helperText","error","method","record","handleShippingChange","Button","PaymentWrapper","PaymentForm","paymentMethod","setPaymentMethod","currentPaymentState","payment","addPaymentMethod","useRowStyles","borderBottom","Row","rowData","setOpen","datePlaced","split","Fragment","hover","size","scope","email","productsCost","address_id","isPaid","orderStatus","order_id","paddingBottom","paddingTop","Collapse","in","timeout","unmountOnExit","gutterBottom","pricePerItem","OrderList","orders","order","GET_PROMO_SUCCESS","GET_PROMO_FAILURE","CREATE_PROMO_SUCCESS","SET_TO_EDIT_PROMO","EDIT_PROMO_SUCCESS","DELETE_PROMO_SUCCESS","promoData","discount","table","PromoList","AddPromoForm","setTitle","setDescription","discountValue","setDiscountValue","createPromo","EditPromoForm","promoEdit","currentlyEdited","handleEdit","post","editPromo","handleDelete","delete","deletePromo","PromoForm","isEditFormOpen","setIsEditFormOpen","ButtonGroup","disableElevation","CREATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_SUCCESS","UPDATE_STORAGE_SUCCESS","GET_ALL_PRODUCTS_SUCCESS","GET_PRODUCT_SUCCESS","GET_RECOMMENDED_PRODUCTS_SUCCESS","GET_PROMO_PRODUCTS_SUCCESS","GET_PROMO_PRODUCTS_FAILURE","GET_CATEGORY_PRODUCTS_SUCCESS","SET_TO_EDIT_PRODUCT","getAllProducts","productData","inStock","category_group","ProductList","products","allProducts","AddProductForm","setName","setPrice","profitMargin","setProfitMargin","producer","setProducer","warranty","setWarranty","setPromo_id","setCategory_id","categoriesList","cat","category_name","EditProductDetailsForm","productEdit","profit_margin","ReduceStorageForm","setQuantity","updateData","shippmentPrice","ProductForm","isDetailsFormOpen","setIsDetailsFormOpen","GET_ORDERS_DETAILS_SUCCES","GET_ALL_ORDERS_DETAILS_SUCCES","UPDATE_PAYMENT_STATUS_SUCCESS","UPDATE_ORDER_STATUS_SUCCESS","EditBtn","PaymentStatusWrapper","orderStatusList","key","PaymentStatus","orderId","setIsPaid","setOrderStatus","currentlyWatched","find","orderStatusKeyToValue","k","stat","v","handlePaymentSubmit","updatePaymentStatus","handleStatus","updateOrderStatus","disabled","DetailsWrapper","OrderAddressDetails","orderData","userName","userSurname","phoneNumber","postCode","dateFulfillment","clientComments","ProductListWrapper","SET_TO_EDIT_PRODUCT_IN_SERVICE","GET_PRODUCTS_IN_SERVICE_SUCCESS","ADD_PRODUCT_TO_SERVICE_SUCCESS","PRODUCT_IN_SERVICE_STATUS_UPDATE_SUCCESS","fulfilmentDate","orderLineId","addProductToService","OrderProductList","orderTitle","setToEditProductInService","ProductsInServiceList","productsInService","ProductInServiceForm","setStatus","serviceEdit","currentlyEdit","serviceId","updateProductStatusInService","Home","recommendedProducts","recommended","AdsCarousel","categoriesEnum","1","2","3","Offer","categoryId","useParams","categoryProducts","getProductsByCategoryId","prod","Promo","promoId","promoProducts","getPromoProducts","promoDetails","ProductDetails","productDetails","getProductDetails","SignInWrapper","submit","setEmail","password","setPassword","Avatar","login","AccountDataWrapper","Account","surname","setSurname","setPhoneNumber","userData","validateName","validateSurname","validatePhoneNumber","CssBaseline","updateAccountData","Orders","getUserOrders","RegisterWrapper","Register","validateEmail","validatePassword","submitRegister","instructions","PlaceOrder","activeStep","setActiveStep","steps","prevActiveStep","submitPlaceOrder","body","shippmentMethod","placeOrder","Stepper","index","Step","StepLabel","step","getStepContent","GET_ALL_CATEGORIES_SUCCESS","getAllCategories","ProductManagement","PromoManagement","ContentWrapper","MidContentWrapper","ContentLeft","ContentMid","ContentRight","OrderDetails","ServiceManagement","IncomeBox","OutcomeBox","BalanceeBox","Finances","balance","setBalance","income","incomeCount","outcome","outcomeCount","App","basename","process","path","exact","Login","window","location","hostname","match","initialState","productReducer","action","updatedProduct","forEach","reducedPromoList","JSON","parse","localStorage","getItem","notification","authReducer","setItem","stringify","clear","promosReducer","updatedPromo","cartReducer","removeItem","cartProduct","updatedProductList","reduce","val","commentsReducer","ordersReducer","currentState","updated","categoriesReducer","productsInServiceReducer","added","reducedState","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76d6c0fb.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  html, body {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  \r\n  *, *::after, *::before {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    background: ${({ theme }) => theme.primaryDark};\r\n    color: ${({ theme }) => theme.primaryLight};\r\n    scroll-behavior: smooth;\r\n    \r\n    color: rgba(255,255,255,.75);\r\n    font-family: Lato, sans-serif;\r\n\r\n  }    \r\n`","export const theme = {\r\n    primaryDark: 'rgb(0, 0, 9)',\r\n    primaryLight: '#EFFFFA',\r\n    primaryHover: '#343078',\r\n    mobile: '576px',\r\n  }","import styled from 'styled-components';\r\n\r\nexport const Paragraph = styled.p`\r\n    color: rgba(255,255,255,.75);\r\n    font-size: 200%;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    font-family: 'Anonymous Pro', monospace;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Middlepane = styled.div`\r\n\toverflow: auto;\r\n\twidth: 65vw;\r\n\tbackground-color: rgb(32, 32, 32);\r\n\theight: 100%;\r\n\tmin-height: auto;\r\n\ttext-align: center;\r\n\talign-items: center;\r\n\tmargin: 0 auto;\r\n\tpadding: 30px;\r\n\r\n\tbox-shadow: 0 20px 50px 0 rgba(2, 216, 243, 0.35);\r\n\tbackdrop-filter: blur( 13.5px );\r\n\t-webkit-backdrop-filter: blur(  10.0px );\r\n\r\n\tfont-family: BlenderProBold,sans-serif;\r\n    font-weight: 700;\r\n`;\r\n\r\nexport const MiddlepaneOffer = styled(Middlepane)`\r\n\tbackground-color: rgb(32, 32, 32);\r\n`","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://cyber-shop-db.herokuapp.com/'\r\n});\r\n\r\nexport default instance;","import axios from '../../axios-config.js';\r\n\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\n\r\nexport const USER_ACCOUNT_UPDATE_SUCCESS = 'USER_ACCOUNT_UPDATE_SUCCESS';\r\nexport const USER_ACCOUNT_UPDATE_FAILURE = 'USER_ACCOUNT_UPDATE_FAILURE';\r\n\r\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\r\n\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAILURE = 'REGISTER_FAILURE';\r\n\r\nexport const CLEAR_NOTIFICATION = 'CLEAR_NOTIFICATION'; \r\n\r\nexport const clearNotification = () => {\r\n  return {\r\n    type: CLEAR_NOTIFICATION,\r\n    payload: null,\r\n  }\r\n}\r\n\r\nexport const submitRegister = ( { name, surname, phoneNumber, email, password } ) => async dispatch => {\r\n  axios.post('/auth/register', { name, surname, phoneNumber, email, password })\r\n    .then(res => {\r\n      alert(`Witaj w serwisie ${name}!`);\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data\r\n      })\r\n    })\r\n    .catch(err => {\r\n      alert(\"Użytkownik o podanym adresie już istnieje\");\r\n      dispatch({\r\n        type: REGISTER_FAILURE,\r\n        payload: err.message\r\n      })\r\n  });\r\n}\r\n\r\nexport const login = ( { email, password } ) => async dispatch => {\r\n    axios.post('/auth/login', {email, password})\r\n      .then(res => {\r\n        alert('Witaj ponownie!');\r\n        dispatch({\r\n          type: LOGIN_SUCCESS,\r\n          payload: res.data\r\n        })\r\n      })\r\n      .catch(err => {\r\n        alert(\"Wpisz poprawne dane\");\r\n        dispatch({\r\n          type: LOGIN_FAILURE,\r\n          payload: err.message\r\n        })\r\n    });\r\n}\r\n\r\nexport const updateAccountData = ( { name, surname, phoneNumber, userId } ) => async dispatch => {\r\n  axios.post(`/users/update/${userId}`, { name, surname, phoneNumber })\r\n    .then(res => {\r\n      alert(\"Zaktualizowano\");\r\n      dispatch({\r\n        type: USER_ACCOUNT_UPDATE_SUCCESS,\r\n        payload: { id:userId, name, surname, phoneNumber }\r\n      })\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: USER_ACCOUNT_UPDATE_FAILURE,\r\n        payload: err.message\r\n      })\r\n  });\r\n}\r\n\r\nexport const logout = () => {\r\n  alert(\"Okazje czekają ;) Wróć jak najszybciej.\");\r\n  return {\r\n      type: LOGOUT_REQUEST,\r\n      payload: \"wylogowano\",\r\n    }\r\n}","import axios from '../../axios-config.js';\r\n\r\nexport const ADD_PRODUCT_TO_CART = 'ADD_PRODUCT_TO_CART';\r\nexport const REMOVE_PRODUCT_FROM_CART = 'REMOVE_PRODUCT_FROM_CART';\r\nexport const REDUCE_PRODUCT_QUANTITY_FROM_CART = 'REDUCE_PRODUCT_QUANTITY_FROM_CART';\r\nexport const ADD_ADDRESS = 'ADD_ADDRESS';\r\nexport const ADD_PAYMENT_METHOD = 'ADD_PAYMENT_METHOD';\r\nexport const GET_USER_ADDRESSES_SUCCESS = 'GET_USER_ADDRESSES_SUCCESS';\r\nexport const GET_USER_ADDRESSES_FAILURE = 'GET_USER_ADDRESSES_FAILURE';\r\n\r\n\r\nexport const CLEAR_CART = 'CLEAR_CART';\r\n\r\nexport const PLACE_ORDER_REQUEST = 'PLACE_ORDER_REQUEST';\r\nexport const PLACE_ORDER_SUCCESS = 'PLACE_ORDER_SUCCESS';\r\nexport const PLACE_ORDER_FAILURE = 'PLACE_ORDER_FAILURE';\r\n\r\nexport const getUserAddresses = ({userId}) => async dispatch => {\r\n    axios.get(`/addresses/user/${userId}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_USER_ADDRESSES_SUCCESS,\r\n                payload: res.data\r\n              })\r\n            } \r\n        )\r\n        .catch(err => {\r\n            dispatch({\r\n                type: GET_USER_ADDRESSES_FAILURE,\r\n                payload: err.message\r\n            })\r\n        })\r\n}\r\n\r\n\r\nexport const placeOrder = ({ userId, cart, clientComments }) => async dispatch => {\r\n    const body = { \r\n        userId,\r\n        shippmentMethod: cart.address.shippingMethod,\r\n        shippmentPrice: cart.address.shippingValue,\r\n        addressId: (cart.address.addressId === -1 \r\n            ? null \r\n            : cart.address.addressId),\r\n        country: cart.address.country,\r\n        postcode: cart.address.postcode, \r\n        city: cart.address.city, \r\n        street: cart.address.street, \r\n        building: cart.address.building, \r\n        apartment: cart.address.apartment,\r\n        productsCost: cart.value, \r\n        clientComments,\r\n        paymentMethod : cart.payment,\r\n        productList: cart.productList,\r\n     }\r\n\r\n    axios.post('/orders', body)\r\n      .then(res => {\r\n        alert(\"Zamówienie przyjęte do realizacji.\");\r\n        dispatch({\r\n          type: PLACE_ORDER_SUCCESS,\r\n          payload: res.data\r\n        })\r\n      })\r\n      .catch(err => {\r\n        dispatch({\r\n          type: PLACE_ORDER_FAILURE,\r\n          payload: err.message\r\n        })\r\n    });\r\n  }\r\n\r\nexport const addPaymentMethod = ({paymentMethod}) => {\r\n    return {\r\n        type: ADD_PAYMENT_METHOD,\r\n        payload: paymentMethod,\r\n    }\r\n}\r\n\r\nexport const addAdress = ({ addressId, country, postcode, city, street, building, apartment, shippingMethod, shippingValue }) => {\r\n    return {\r\n        type: ADD_ADDRESS,\r\n        payload: { \r\n            addressId,\r\n            country,\r\n            postcode, \r\n            city, \r\n            street, \r\n            building, \r\n            apartment,\r\n            shippingMethod, \r\n            shippingValue,\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearCart = () => {\r\n    return {\r\n        type: CLEAR_CART,\r\n    }\r\n}\r\n\r\nexport const addProductToCart = ({ productId, productName, price }) => {\r\n    return {\r\n        type: ADD_PRODUCT_TO_CART,\r\n        payload: {\r\n            productId,\r\n            productName,\r\n            price,\r\n        }\r\n      }\r\n}\r\nexport const removeProductFromCart = ({ productId }) => {\r\n    return {\r\n        type: REMOVE_PRODUCT_FROM_CART,\r\n        payload: {\r\n            productId,\r\n        }\r\n    }\r\n}\r\n\r\nexport const reduceProductQuantityFromCart = ({ productId }) => {\r\n    return {\r\n        type: REDUCE_PRODUCT_QUANTITY_FROM_CART,\r\n        payload: {\r\n            productId,\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { logout } from 'state/auth/authActions';\r\nimport { clearCart } from 'state/cart/cartActions';\r\nimport { useDispatch } from 'react-redux';\r\nimport SmartphoneIcon from '@material-ui/icons/Smartphone';\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\nimport MemoryIcon from '@material-ui/icons/Memory';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  root: {\r\n    background: 'rgb(252, 238, 9)',\r\n    color: 'black',\r\n  },\r\n  menuButton: {\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    fontFamily: 'CyberSans',\r\n    fontSize: 40,\r\n    fontWeight: 100,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(10),\r\n      marginRight: theme.spacing(10),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    maxWidth: '1200px',\r\n  },\r\n  categories : {\r\n    justifyContent: 'center',\r\n  },\r\n  categoriesTitle : {\r\n    fontSize: 17,\r\n\t  fontFamily: ['BlenderProBold','sans-serif'].join(','),\r\n  }\r\n}));\r\n\r\n\r\nconst MenuAppBar = (props) => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const isMenuOpen = Boolean(anchorEl);\r\n\r\n  const state = useSelector(state => state); \r\n  const count = state.cart.productList;\r\n  const auth = state.auth;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleProfileMenuClick = (e, pageRoute) => {\r\n    e.preventDefault();\r\n    history.push(pageRoute);\r\n  };\r\n\r\n  const handleLogout = (e) => {\r\n    e.preventDefault();\r\n    dispatch(logout());\r\n    dispatch(clearCart());\r\n    setAnchorEl(null);\r\n    history.push('/');\r\n  }\r\n  \r\n  const menuId = 'primary-search-account-menu';  \r\n  const menuUserLoggedIn = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={() => setAnchorEl(null)}\r\n      style={{\r\n        color: 'black',}}\r\n    >\r\n      { auth.isAdmin ? <MenuItem onClick={(e) => handleProfileMenuClick(e, '/finaces')}>Finanse</MenuItem> : null }\r\n      { auth.isAdmin ? <MenuItem onClick={(e) => handleProfileMenuClick(e, '/products')}>Zarządzaj produkatami</MenuItem> : null }\r\n      { auth.isAdmin ? <MenuItem onClick={(e) => handleProfileMenuClick(e, '/management/promo')}>Zarządzaj promocjami</MenuItem> : null }\r\n      { auth.isAdmin ? <MenuItem onClick={(e) => handleProfileMenuClick(e, '/service')}>Zarządzaj serwisem</MenuItem> : null }\r\n      <MenuItem onClick={(e) => handleProfileMenuClick(e, '/orders')}>Zamówienia</MenuItem>\r\n      <MenuItem onClick={(e) => handleProfileMenuClick(e, '/account')}>Konto</MenuItem>\r\n      <MenuItem onClick={(e) => handleLogout(e)}>Wyloguj</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const menuUserLoggedOut = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={() => setAnchorEl(null)}\r\n    >\r\n      <MenuItem onClick={(e) => handleProfileMenuClick(e, '/login')}>Zaloguj</MenuItem>\r\n      <MenuItem onClick={(e) => handleProfileMenuClick(e, '/register')}>Zarejestruj się</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\" className={classes.root}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            onClick={(e) => handleProfileMenuClick(e, '/')}\r\n          >\r\n            <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            CyberShop\r\n          </Typography>\r\n          </IconButton>\r\n          \r\n          {/* Search bar has to be posponed */}\r\n          \r\n          {/* <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div> */}\r\n\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"cart\" \r\n                        color=\"inherit\">\r\n              <Badge badgeContent={count.length} color=\"secondary\">\r\n                <ShoppingCartIcon \r\n                onClick={(e) => handleProfileMenuClick(e, '/cart')}/>\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n              className={classes.menuButton}\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n\r\n        <Toolbar align=\"center\" className={classes.categories}>\r\n          <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={(e) => handleProfileMenuClick(e, '/offer/1')}\r\n          >\r\n              <ComputerIcon/> \r\n              <Typography className={classes.categoriesTitle}>\r\n                Laptopy i komputery\r\n              </Typography> \r\n          </IconButton>\r\n          \r\n          <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={(e) => handleProfileMenuClick(e, '/offer/2')}\r\n            >\r\n              <SmartphoneIcon/>  \r\n              <Typography className={classes.categoriesTitle}>\r\n                Smartfony i smartwatche\r\n              </Typography> \r\n          </IconButton>\r\n          \r\n          <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={(e) => handleProfileMenuClick(e, '/offer/3')}\r\n            >\r\n              <MemoryIcon/> \r\n              <Typography className={classes.categoriesTitle}>\r\n                Podzespoły komputerowe \r\n              </Typography> \r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      { auth.isLoggedIn ? menuUserLoggedIn : menuUserLoggedOut }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(MenuAppBar);","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Box = styled.div`\r\n    height: 300px;\r\n    text-align: center;\r\n    color: black;\r\n    background: rgb(0, 240, 255);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-decoration: none;\r\n            \r\n    &:before {\r\n    \tcontent: '';\r\n\t\tposition: absolute;\r\n\t\tbottom: 0; left: 0;\r\n\t\tborder-bottom: 80px solid rgb(32, 32, 32);\r\n\t\tborder-right: 80px solid rgb(0, 240, 255);\r\n\t\twidth: 0;\r\n    }\r\n\r\n    &:after {\r\n    \tcontent: '';\r\n\t\tposition: absolute;\r\n\t\ttop: 0; right: 0;\r\n\t\tborder-right: 80px solid rgb(32, 32, 32);\r\n\t\tborder-bottom: 80px solid rgb(0, 240, 255);\r\n\t\twidth: 0;\r\n    }\r\n`;\r\n\r\nexport const CarouselWrapper = styled.div`\r\n    width: 100%;\r\n\r\n    font-size: 3em;\r\n    li.alice-carousel__stage-item :not(.__cloned) {\r\n        width: auto !important;\r\n  }\r\n`;\r\n\r\nexport const CarouselLink = styled(Link)`\r\n    text-decoration: none;\r\n`;","import React from 'react';\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport 'react-alice-carousel/lib/alice-carousel.css';\r\n\r\nimport { Box, CarouselWrapper, CarouselLink } from './adsCarousel.css';\r\n\r\nimport {  useSelector } from 'react-redux';\r\n\r\n\r\nconst Carousel = () => {\r\n    const promos = useSelector(state => state.promos.promosList);\r\n    \r\n    const items = promos.map(promo => ( \r\n        <CarouselLink to={`/promo/${promo.id}`} onDragStart={e => e.preventDefault()}>\r\n            <Box key={promo.id}>\r\n                {promo.title}\r\n            </Box>\r\n        </CarouselLink>\r\n    ));\r\n    \r\n    return (\r\n    <CarouselWrapper>\r\n        <AliceCarousel\r\n            animationType=\"fadeout\" \r\n            animationDuration={800}\r\n            disableButtonsControls\r\n            infinite\r\n            items={items}\r\n            mouseTracking\r\n            autoPlay\r\n            autoPlayInterval={4000}\r\n        />\r\n    </CarouselWrapper>\r\n    )\r\n};\r\n\r\nexport default Carousel;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nconst ProtectedRoute = ({component: Component, auth, ...rest}) => {\r\n    return (\r\n        <Route \r\n            {...rest} \r\n            render={props => {\r\n            return auth \r\n                ? <Component {...props} /> \r\n                : <Redirect to='/login' />\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ProtectedRoute;","import styled from 'styled-components';\r\n\r\nexport const GridContainer = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n\tgrid-gap: 50px;\r\n`;\r\n\r\n","import styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const GridElement = styled.div`\r\n\tmin-height: 300px;\r\n\tbackground-color: rgba( 255, 255, 255, 0.1 );\r\n\tposition: relative;\r\n\r\n\t&:before {\r\n    \tcontent: '';\r\n\t\tposition: absolute;\r\n\t\tbottom: 0; left: 0;\r\n\t\tborder-bottom: 40px solid rgb(32, 32, 32);\r\n\t\tborder-right: 40px solid transparent;\r\n\t\twidth: 0;\r\n    }\r\n`;\r\n\r\nexport const CustomLink = styled(Link)`\r\n    text-decoration: none;\r\n\tcolor: rgba(255,255,255,.75);\r\n\tfont-size: 1.1em;\r\n`;\r\n\r\nexport const Btn = styled.div`\r\n\tbackground-color: #33C333;\r\n\tdisplay:inline-block;\r\n\tfont-size:18px;\r\n\tpadding: 8px 20px;\r\n\ttext-decoration:none;\r\n\tposition: relative;\r\n\tcursor: pointer;   \r\n\t\r\n    &:hover {\r\n        background-color:#269126;\r\n    }\r\n    \r\n    &:active {\r\n        position:relative;\r\n        top:2px;\r\n    }\r\n` ","import { useDispatch } from 'react-redux';\r\nimport { addProductToCart } from '../../state/cart/cartActions';\r\n\r\nimport { GridElement, CustomLink, Btn } from './productItem.css';\r\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport WatchIcon from '@material-ui/icons/Watch';\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\n\r\nimport React from 'react';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\n\r\nconst ProductItem = ({ productInfo }) => {\r\n    const dispatch = useDispatch();\r\n    const getProductIcon = (category) => {\r\n        switch (category) {\r\n            case 1:{\r\n                return  <PhoneAndroidIcon fontSize=\"large\"/>;\r\n            }case 2:{\r\n                return  <WatchIcon fontSize=\"large\"/>;\r\n            }case 3:{\r\n                return  <CategoryIcon fontSize=\"large\"/>;\r\n            }case 4:{\r\n                return  <ComputerIcon fontSize=\"large\"/>;\r\n            }default: {\r\n                return <CategoryIcon/>;\r\n            }\r\n        }\r\n    } \r\n\r\n    const handleAddToCart = () => {\r\n        dispatch(addProductToCart({\r\n            productId : productInfo.id,\r\n            productName : productInfo.name,\r\n            price : productInfo.promo_id ? productInfo.promo_price : productInfo.price,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <GridElement key={productInfo.id}>\r\n            <br/>\r\n            <CustomLink to={`/product/${productInfo.id}`}>\r\n                {getProductIcon(productInfo.category_id)}\r\n                <br/><br/>\r\n                {productInfo.name}\r\n                <br/><br/>\r\n                {productInfo.promo_id \r\n                ? productInfo.promo_price + \" zł\" \r\n                : productInfo.price + \" zł\"}\r\n            </CustomLink>\r\n            <br/><br/>\r\n            <Box component=\"fieldset\" mb={1} borderColor=\"transparent\">\r\n                <Rating name=\"read-only\" \r\n                        value={parseFloat(productInfo.rating)}\r\n                        readOnly\r\n                        precision={0.5} />\r\n                <hr/>\r\n            </Box>\r\n\r\n            <Btn onClick={ handleAddToCart }>\r\n                <ShoppingCartIcon/>\r\n            </Btn>\r\n        </GridElement>\r\n        \r\n    );\r\n}\r\n\r\nexport default ProductItem;","import React from 'react';\r\nimport { GridContainer } from './productGrid.css';\r\nimport ProductItem from './ProductItem';\r\n\r\nconst ProductGrid = ({ productsInfo }) => {\r\n\r\n    const items = productsInfo.map(item => (\r\n        <ProductItem productInfo={item} />\r\n    ));\r\n\r\n\r\n    return (\r\n        <GridContainer>\r\n            {items}\r\n        </GridContainer>\r\n    );\r\n}\r\n\r\nexport default ProductGrid;","import styled from 'styled-components';\r\n\r\nexport const Span = styled.span`\r\n    font-size: 150%;\r\n`;","import Rating from '@material-ui/lab/Rating';\r\nimport { Span } from './commentItem.css';\r\n\r\nconst CommentItem = ({commentData}) => {\r\n    \r\n    return (\r\n        <article>            \r\n            <hr/>\r\n            <br/>\r\n            <header>\r\n                <Span>{commentData.nick}</Span>\r\n                <Rating name=\"read-only\" \r\n                        value={parseInt(commentData.stars)}\r\n                        readOnly />\r\n            </header>\r\n            <p>\r\n                {commentData.description}\r\n            </p>\r\n            <br/>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default CommentItem;","import axios from '../../axios-config.js';\r\n\r\nexport const CREATE_COMMENT_SUCCES = 'CREATE_COMMENT_SUCCES';\r\nexport const CREATE_COMMENT_FAILURE = 'CREATE_COMMENT_FAILURE';\r\n\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\n\r\nexport const GET_COMMENTS_SUCCES = 'GET_COMMENTS_SUCCES';\r\nexport const GET_COMMENTS_FAILURE = 'GET_COMMENTS_FAILURE';\r\n\r\nexport const getCommentsToProduct = (productId) => async dispatch => {\r\n    if(productId){\r\n      axios.get(`/comments/${productId}`)\r\n        .then(res => {\r\n          dispatch({\r\n            type: GET_COMMENTS_SUCCES,\r\n            payload: res.data,\r\n          })\r\n        })\r\n        .catch(err => {\r\n          dispatch({\r\n            type: GET_COMMENTS_FAILURE,\r\n            payload: {\r\n              message: err.message\r\n            },\r\n          })\r\n        });\r\n      }\r\n}\r\n\r\nexport const createCommentToProduct = ({ nick, stars, description, productId, authorId }) => async dispatch => {\r\n  axios.put(\"/comments/create\", { nick, stars, description, productId, authorId })\r\n    .then(res => {\r\n      dispatch({\r\n        type: CREATE_COMMENT_SUCCES,\r\n        payload: res.data,\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: GET_COMMENTS_FAILURE,\r\n        payload: {\r\n          message: err.message\r\n        },\r\n      })\r\n    });\r\n}","import './commentForm.css'\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { createCommentToProduct } from 'state/comments/commentsActions';\r\n\r\n\r\nconst CommentForm = ({ userId, productId}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [nick, setNick] = useState('');\r\n    const [commentText, setCommentText] = useState('');\r\n    const [rate, setRate] = useState(2);\r\n\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch(createCommentToProduct({\r\n            nick,\r\n            stars: parseInt(rate),\r\n            description: commentText,\r\n            productId,\r\n            authorId:userId \r\n        }));\r\n    } \r\n    \r\n\r\n    return (\r\n        <>\r\n            <form id=\"comment\" class=\"form\" onSubmit={handleSubmit}>\r\n\r\n                <input type=\"text\" name=\"nick\" id=\"nick\" placeholder=\"Nick\" required \r\n                onChange={(event) => setNick(event.target.value)}/>\r\n                <Box component=\"fieldset\" width={300}>\r\n                    <Typography component=\"legend\">Twoja ocena</Typography>\r\n                    <Rating\r\n                        name=\"rating\"\r\n                        value={rate}\r\n                        onChange={(event, newValue) => {\r\n                        setRate(newValue);\r\n                    }}\r\n                    />\r\n                </Box>\r\n                <br/>\r\n                <textarea name=\"commentText\" id=\"commentText\" placeholder=\"Twój komentarz\"\r\n                onChange={(event) => setCommentText(event.target.value)}></textarea>\r\n                <br/>\r\n                <button type=\"submit\" id=\"addCommBtn\">Dodaj komentarz</button>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CommentForm;","import styled from 'styled-components';\r\n\r\nexport const CommentsWrapper = styled.div`\r\n    text-align: left;\r\n`;\r\n","import CommentItem from './CommentItem';\r\nimport CommentForm from './CommentForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport React, { useEffect } from 'react';\r\nimport { getCommentsToProduct } from 'state/comments/commentsActions';\r\nimport { CommentsWrapper } from './comments.css';\r\n\r\n\r\nconst Comments = ({ productId }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect( () => {\r\n        dispatch(getCommentsToProduct(productId));\r\n    }, [dispatch, productId]);\r\n\r\n    const comments = useSelector(status => status.comments);\r\n    const auth = useSelector(status => status.auth);\r\n\r\n    comments.sort((a, b) => b.id - a.id);\r\n    const commentsList = comments.map( \r\n        comment => <CommentItem commentData={comment}/>\r\n    );\r\n    \r\n    return (\r\n        <CommentsWrapper>\r\n            {auth.isLoggedIn \r\n            ? <CommentForm userId={auth.user.id}\r\n                            productId={productId}/> \r\n            : null}\r\n            {commentsList}\r\n        </CommentsWrapper>\r\n    );\r\n}\r\n\r\n\r\nexport default Comments;","import styled from 'styled-components';\r\n\r\nexport const Btn = styled.button`\r\n    background-color: Transparent;\r\n    background-repeat:no-repeat;\r\n    border: none;\r\n    cursor:pointer;\r\n    overflow: hidden;\r\n    outline:none;\r\n    color: darkgray;\r\n    font-size: large;\r\n    margin: 0 8px;\r\n    width: 40px;\r\n    height: 40px;\r\n\r\n    &:hover{\r\n        background-color: red;\r\n    }\r\n`\r\n\r\nexport const ControllBtn = styled(Btn)`\r\n    &:hover{\r\n        background-color: green;\r\n    }\r\n`   ","import { useState } from 'react';\r\nimport { addProductToCart,\r\n         reduceProductQuantityFromCart} from 'state/cart/cartActions';\r\n    \r\nimport { useDispatch } from 'react-redux';\r\nimport { Btn, ControllBtn } from './cart.css';\r\n\r\nconst ControllQuantity = ({productId, quantity}) => {\r\n    const dispatch = useDispatch();\r\n    const [count, setCount] = useState(quantity);\r\n\r\n    return (\r\n          <>\r\n              <Btn type=\"button\" \r\n                    value=\"-\" \r\n                    className=\"minus\"\r\n                    onClick={ e => {\r\n                        dispatch(reduceProductQuantityFromCart({\r\n                            productId\r\n                        }));\r\n                        setCount(count-1);\r\n                    }\r\n                }\r\n                >-</Btn>\r\n                    \r\n                {count}\r\n                    \r\n              <ControllBtn type=\"button\" \r\n                    className=\"plus\"\r\n                    onClick={ e => {\r\n                        dispatch(addProductToCart({\r\n                            productId\r\n                        }));\r\n                        setCount(count+1);\r\n                    }\r\n                }\r\n                >+</ControllBtn>\r\n          </>\r\n      )\r\n}\r\n\r\nexport default ControllQuantity;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { removeProductFromCart } from 'state/cart/cartActions';\r\nimport ControllQuantity from './ControllQuantity';\r\nimport { Btn } from './cart.css'\r\n\r\nconst columns = [\r\n  {\r\n    id: 'spanLeft',\r\n    minWidth: 30\r\n  },\r\n  {\r\n    id: 'name',\r\n    label: 'Produkt',\r\n    minWidth: 300\r\n  },\r\n  {\r\n    id: 'price',\r\n    label: 'Cena',\r\n    minWidth: 100,\r\n    align: 'right',\r\n  },\r\n  {\r\n    id: 'quantity',\r\n    label: 'Ilość',\r\n    minWidth: 70,\r\n    align: 'center',\r\n  },\r\n  {\r\n    id: 'delete',\r\n    minWidth: 70,\r\n    align: 'right',\r\n  },\r\n  {\r\n    id: 'spanRight',\r\n    minWidth: 30\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    backgroundColor: 'gray',\r\n  },\r\n  head: {\r\n    backgroundColor: 'gray',\r\n  },\r\n});\r\n\r\nconst Cart = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const cartItems = useSelector(state => state.cart.productList);\r\n  const cartValue = useSelector(state => state.cart.value);\r\n  cartItems.sort((a, b) => a.id - b.id);\r\n\r\n  const handleCellType = (type, product) => {\r\n    switch (type) {\r\n      case 'quantity': {\r\n        return <ControllQuantity\r\n          productId={product.id}\r\n          quantity={product.quantity}\r\n        />\r\n      } case 'delete': {\r\n        return <Btn onClick={e => dispatch(removeProductFromCart({\r\n          productId: product.id\r\n        }))}><DeleteIcon /></Btn>\r\n      } case 'price': {\r\n        return product.price + \" zł\";\r\n      }\r\n      default:\r\n        return product[type];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Paper>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader >\r\n          <TableHead  className={classes.head}>\r\n            <TableRow key=\"main\">\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  <h4>{column.label}</h4>\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {cartItems.map((product) => {\r\n              return (\r\n                <TableRow key={product.id}>\r\n                  {columns.map((column) => {\r\n                    return (\r\n                      <TableCell align={column.align}>\r\n                        {handleCellType(column.id, product)}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n            <TableRow key=\"summary\">\r\n              <TableCell colSpan={4} align={'right'}>\r\n                Suma\r\n                </TableCell>\r\n              <TableCell align={'center'}\r\n                colSpan={2}>\r\n                {parseFloat(cartValue).toFixed(2) + \" zł\"}\r\n              </TableCell>\r\n            </TableRow>\r\n\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Cart;","import styled from 'styled-components';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nexport const ShippingWrapper = styled(Container)`\r\n    background-color: rgba(255,255,255, 0.35);\r\n    color: rgb(239, 255, 250, 0.8);\r\n    font-size: 180%;\r\n    border-radius: 15px;\r\n    padding: 10px;\r\n`","import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Select from '@material-ui/core/Select';\r\nimport { ShippingWrapper } from './shippingForm.css';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addAdress, getUserAddresses } from 'state/cart/cartActions';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nconst shippingMethods = [\r\n  {\r\n    price : 5,\r\n    name : 'Gołąb [5 zł]'\r\n  },\r\n  {\r\n    price : 10,\r\n    name : 'Sowa [10 zł]'\r\n  },  \r\n  {\r\n    price : 15,\r\n    name : 'Jastrząb ekspres [15 zł]'\r\n  }\r\n]\r\n\r\n\r\nconst ShippingForm = ({handleNext, handleBack}) => {\r\n    const [addressId, setAddressId] = useState(-1);\r\n    const [country, setCountry] = useState('');\r\n    const [city, setCity] = useState('');\r\n    const [postcode, setPostcode] = useState('');\r\n    const [street, setStreet] = useState('');\r\n    const [building, setBuilding] = useState('');\r\n    const [apartment, setApartment] = useState('');\r\n    const [shippingMethod, setShippingMethod] = useState(shippingMethods[0].name);\r\n    const [shippingValue, setShippingValue] = useState(shippingMethods[0].price);\r\n\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n  \r\n    const userId = useSelector(state => state.auth.user.id);\r\n    const currentAddressState = useSelector(state => state.cart.address);\r\n    const userAddresses = useSelector(state => state.cart.userAddresses);\r\n\r\n    useEffect( () => {\r\n        dispatch(getUserAddresses({userId}));\r\n        setAddressId(currentAddressState.addressId || -1);\r\n        setCountry(currentAddressState.country || '');\r\n        setCity(currentAddressState.city || '');\r\n        setPostcode(currentAddressState.postcode || '');\r\n        setStreet(currentAddressState.street || '');\r\n        setBuilding(currentAddressState.building || '');\r\n        setApartment(currentAddressState.apartment || '');\r\n        setShippingMethod(currentAddressState.shippingMethod || shippingMethods[0].name);\r\n        setShippingValue(currentAddressState.shippingValue || shippingMethods[0].price);\r\n    },[currentAddressState, dispatch, userId]);\r\n\r\n\r\n    const validateCountry = () => {\r\n      const regName = /[0-9]+/g;\r\n      return ( !regName.test(country) && country.length > 2 )\r\n    }\r\n\r\n    const validatePostCode = () => {\r\n      const regPhoneNumber = /[0-9]{2}-[0-9]{3}/;\r\n      return (regPhoneNumber.test(postcode) && postcode.length === 6);\r\n    }\r\n\r\n    const validateCity = () => {\r\n      const regName = /[0-9]+/g;\r\n      return ( !regName.test(city) && city.length > 2 )\r\n    }\r\n\r\n    const validateStreet = () => {\r\n      const regName = /[0-9]+/g;\r\n      return ( !regName.test(street) && street.length > 2 )\r\n    }\r\n\r\n    const validate = () => {\r\n      let isValid = validateCountry()\r\n              && validatePostCode()\r\n              && validateCity()\r\n              && validateStreet();\r\n\r\n      return isValid;\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      if(validate()){\r\n        dispatch(addAdress({ addressId, country, postcode, city, street, building, apartment, shippingMethod, shippingValue }))\r\n      }else{\r\n        alert(\"wpisz poprawny adres\");\r\n      }\r\n      \r\n      handleNext();\r\n    } \r\n\r\n    const handleExistingAddressSelect = ({addressId}) => {\r\n      setAddressId(addressId);\r\n      if(addressId !== -1){\r\n        const address = userAddresses.filter(ad => ad.id === addressId)[0];\r\n        setCountry(address.country || '');\r\n        setCity(address.city || '');\r\n        setPostcode(address.postcode || '');\r\n        setStreet(address.street || '');\r\n        setBuilding(address.building || '');\r\n        setApartment(address.apartment || '');\r\n      }else{\r\n        setCountry('');\r\n        setCity('');\r\n        setPostcode('');\r\n        setStreet('');\r\n        setBuilding('');\r\n        setApartment('');\r\n      }\r\n    } \r\n\r\n    const handleShippingChange = ({value}) => {\r\n      const method = shippingMethods.filter(record => record.price === value);\r\n      setShippingValue(value);\r\n      setShippingMethod(method[0].name);\r\n    }\r\n  \r\n    return (\r\n      <ShippingWrapper component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n            <LocalShippingIcon fontSize=\"large\"/>\r\n          <form \r\n            className={classes.form} \r\n            onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                  <hr/>\r\n                  <InputLabel id=\"shipping-label\">Twoje adresy:</InputLabel>\r\n                  <Select\r\n                  labelId=\"shipping-label\"\r\n                  id=\"shipping\"\r\n                  fullWidth\r\n                  value={addressId}\r\n                  onChange={e => {\r\n                    handleExistingAddressSelect({addressId:e.target.value});\r\n                  }}\r\n                  >\r\n                    <MenuItem value={-1} key={-1}>{\"Nowy Adres\"}</MenuItem>\r\n                    {userAddresses.map(address => (\r\n                      <MenuItem value={address.id} key={address.id}>{address.city + \", \" + address.street}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                  <hr/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                    value={country}\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    variant=\"filled\"\r\n                    id=\"country\"\r\n                    label=\"Państwo\"\r\n                    name=\"country\"\r\n                    autoComplete=\"country\"\r\n                    autoFocus\r\n                    helperText={validateCountry() ? null : \"Państwo musi mieć co najmnije 3 znaki i nie powinno zawierać cyfr\"}\r\n                    error={!validateCountry()}\r\n                    onChange={(event) => setCountry(event.target.value)}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                    value={postcode}\r\n                    variant=\"filled\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"postcode\"\r\n                    label=\"Kod pocztowy\"\r\n                    id=\"postcode\"\r\n                    autoComplete=\"postcode\"\r\n                    helperText={validatePostCode() ? null :\"format: 12-123\"}\r\n                    error={!validatePostCode()}\r\n                    onChange={(event) => setPostcode(event.target.value)}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                    value={city}\r\n                    variant=\"filled\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"post_town\"\r\n                    label=\"Miasto\"\r\n                    id=\"post_town\"\r\n                    autoComplete=\"post_town\"\r\n                    helperText={validateCountry() ? null : \"Miasto musi mieć co najmnije 3 znaki i nie powinno zawierać cyfr\"}\r\n                    error={!validateCountry()}\r\n                    onChange={(event) => setCity(event.target.value)}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                    value={street}\r\n                    variant=\"filled\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"street\"\r\n                    label=\"Ulica\"\r\n                    id=\"street\"\r\n                    autoComplete=\"street\"\r\n                    helperText={validateStreet() ? null : \"Ulica musi mieć co najmnije 3 znaki i nie powinno zawierać cyfr\"}\r\n                    error={!validateStreet()}\r\n                    onChange={(event) => setStreet(event.target.value)}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                    value={building}\r\n                    variant=\"filled\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"building\"\r\n                    label=\"Nr budynku\"\r\n                    name=\"building\"\r\n                    autoComplete=\"building\"\r\n                    autoFocus\r\n                    onChange={(event) => setBuilding(event.target.value)}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                    value={apartment}\r\n                    variant=\"filled\"                    \r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    name=\"apartment\"\r\n                    label=\"Nr mieszkania\"\r\n                    id=\"apartment\"\r\n                    autoComplete=\"apartment\"\r\n                    onChange={(event) => setApartment(event.target.value)}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <hr/>\r\n                    <InputLabel id=\"shipping-label\">Metoda dostawy</InputLabel>\r\n                    <Select\r\n                    labelId=\"shipping-label\"\r\n                    id=\"shipping\"\r\n                    fullWidth\r\n                    value={shippingValue}\r\n                    onChange={e => handleShippingChange({value:e.target.value})}\r\n                    >\r\n                      {shippingMethods.map(method => (\r\n                        <MenuItem value={method.price}>{method.name}</MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                    <hr/>\r\n                </Grid>\r\n            </Grid>\r\n          <div>\r\n              <br/>\r\n            <Button onClick={handleBack} \r\n                    className={classes.button}>\r\n                Back\r\n            </Button>\r\n\r\n            <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n            >\r\n                {'Next'}\r\n            </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </ShippingWrapper>\r\n    );\r\n}\r\n\r\nexport default ShippingForm;","import styled from 'styled-components';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nexport const PaymentWrapper = styled(Container)`\r\n    background-color: rgba(255,255,255, 0.35);\r\n    color: rgb(239, 255, 250, 0.8);\r\n    font-size: 180%;\r\n    border-radius: 15px;\r\n    padding: 10px;\r\n`","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PaymentWrapper } from './paymentForm.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { addPaymentMethod } from 'state/cart/cartActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(2),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\nconst PaymentForm = ({handleNext, handleBack}) => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState(\"Blik\");\r\n\r\n    const currentPaymentState = useSelector(state => state.cart.payment);\r\n\r\n    useEffect( () => {\r\n        setPaymentMethod(currentPaymentState ? \"Blik\" : currentPaymentState);\r\n    },[currentPaymentState]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addPaymentMethod({ paymentMethod }));\r\n        handleNext();\r\n    } \r\n\r\n    return (\r\n        <PaymentWrapper component=\"main\" maxWidth=\"xs\">\r\n          <div className={classes.paper}>\r\n              <MonetizationOnIcon fontSize=\"large\"/>\r\n            <form \r\n              className={classes.form} \r\n              onSubmit={handleSubmit}>\r\n              <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                      <hr/>\r\n                      <InputLabel id=\"payment-label\">Metoda płatności</InputLabel>\r\n                      <Select\r\n                      labelId=\"payment-label\"\r\n                      id=\"payment\"\r\n                      fullWidth\r\n                      value={paymentMethod}\r\n                      onChange={e => setPaymentMethod(e.target.value)}\r\n                      >\r\n                      <MenuItem value={\"Karta\"}>Karta</MenuItem>\r\n                      <MenuItem value={\"Gotówka przy odbiorze\"}>Gotówka przy odbiorze</MenuItem>\r\n                      <MenuItem value={\"Blik\"}>Blik</MenuItem>\r\n                      </Select>\r\n                      <hr/>\r\n                  </Grid>\r\n              </Grid>\r\n            <div>\r\n                <br/>\r\n              <Button onClick={handleBack} \r\n                      className={classes.button}>\r\n                  Back\r\n              </Button>\r\n  \r\n              <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n              >\r\n                  {'Next'}\r\n              </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </PaymentWrapper>\r\n      );\r\n}\r\n\r\nexport default PaymentForm;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport InfoRoundedIcon from '@material-ui/icons/InfoRounded';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n        '& > *': {\r\n            borderBottom: 'unset',\r\n        },\r\n    },\r\n});\r\n\r\nconst Row = ({ rowData }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useRowStyles();\r\n    const datePlaced = rowData.datePlaced.split('T')[0];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow  className={classes.root} hover>\r\n                <TableCell>\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    {rowData.title}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{datePlaced}</TableCell>\r\n                <TableCell align=\"right\">{rowData.email}</TableCell>\r\n                <TableCell align=\"right\">{rowData.productsCost + \" zł\"}</TableCell>\r\n                \r\n                {rowData.address_id !== null \r\n                    ? <>\r\n                        <TableCell align=\"right\">\r\n                            { rowData.isPaid\r\n                                ? <CheckCircleOutlineIcon />\r\n                                : <HighlightOffIcon />\r\n                            }\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{rowData.orderStatus}</TableCell>\r\n\r\n                        <TableCell align=\"right\">\r\n                            <IconButton aria-label=\"info\">\r\n                                <Link to={`/order/details/${rowData.order_id}`}>               \r\n                                    <InfoRoundedIcon />\r\n                                </Link>         \r\n                            </IconButton>    \r\n                        </TableCell>\r\n                        </>\r\n                    : <><TableCell/><TableCell/><TableCell/></>\r\n                }\r\n\r\n            </TableRow>\r\n\r\n            <TableRow >\r\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={8}>\r\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                        <Box margin={1}>\r\n                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                Zamówione produkty\r\n                            </Typography>\r\n                            <Table size=\"small\" aria-label=\"purchases\">\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        <TableCell>Nazwa</TableCell>\r\n                                        <TableCell>Cena</TableCell>\r\n                                        <TableCell align=\"right\">Ilość</TableCell>\r\n                                        <TableCell align=\"right\">Suma</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {rowData.productList.map((product) => (\r\n                                        <TableRow >\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {product.name}\r\n                                            </TableCell>\r\n                                            <TableCell>{product.pricePerItem + \" zł\"}</TableCell>\r\n                                            <TableCell align=\"right\">{product.quantity}</TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {parseFloat(product.quantity * product.pricePerItem).toFixed(2) + \" zł\"}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Box>\r\n                        <br/>\r\n                        <br/>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Row;","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport Row from './OrderListRow';\r\n\r\nconst OrderList = () => {\r\n    const orders = useSelector(state => state.orders); \r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table aria-label=\"collapsible table\">\r\n                <TableHead>\r\n                    <TableRow key=\"title\">\r\n                        <TableCell />\r\n                        <TableCell>Tytuł</TableCell>\r\n                        <TableCell align=\"right\">Data złożenia</TableCell>\r\n                        <TableCell align=\"right\">Email</TableCell>\r\n                        <TableCell align=\"right\">Wartość</TableCell>\r\n                        <TableCell align=\"right\">Opłacone</TableCell>\r\n                        <TableCell align=\"right\">Status</TableCell>\r\n                        <TableCell />\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {orders.map((order) => (\r\n                        <Row rowData={order} />\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nexport default OrderList;","import axios from '../../axios-config.js';\r\n\r\nexport const GET_PROMO_SUCCESS = 'GET_PROMO_SUCCESS';\r\nexport const GET_PROMO_FAILURE = 'GET_PROMO_FAILURE';\r\nexport const GET_PROMO_REQUEST = 'GET_PROMO_REQUEST';\r\n\r\nexport const CREATE_PROMO_SUCCESS = 'CREATE_PROMO_SUCCESS';\r\nexport const CREATE_PROMO_FAILURE = 'CREATE_PROMO_FAILURE';\r\n\r\nexport const SET_TO_EDIT_PROMO = 'SET_TO_EDIT_PROMO';\r\n\r\nexport const EDIT_PROMO_SUCCESS = 'EDIT_PROMO_SUCCESS';\r\nexport const EDIT_PROMO_FAILURE = 'EDIT_PROMO_FAILURE';\r\n\r\nexport const DELETE_PROMO_SUCCESS = 'DELETE_PROMO_SUCCESS';\r\nexport const DELETE_PROMO_FAILURE = 'DELETE_PROMO_FAILURE';\r\n\r\n\r\nexport const deletePromo = ({id}) => async dispatch => {\r\n  axios.delete(`/promos/delete/${id}`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: DELETE_PROMO_SUCCESS,\r\n        payload : id,\r\n      })\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: DELETE_PROMO_FAILURE,\r\n        payload: {\r\n          message: err.message\r\n        },\r\n      })\r\n    })\r\n} \r\n\r\nexport const editPromo = ({ id, title, description, discountValue }) => async dispatch => {\r\n  axios.post(`/promos/update/${id}`, { title, description, discount:discountValue })\r\n    .then(res => {\r\n      dispatch({\r\n        type : EDIT_PROMO_SUCCESS,\r\n        payload : res.data,\r\n      })\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: EDIT_PROMO_FAILURE,\r\n        payload: {\r\n          message: err.message\r\n        },\r\n      })\r\n    });\r\n}\r\n\r\nexport const setToEditionPromo = (promo) => {\r\n  return {\r\n    type : SET_TO_EDIT_PROMO,\r\n    payload : promo\r\n  }\r\n}\r\n\r\nexport const createPromo = ({title, description, discountValue}) => async dispatch => {\r\n  axios.put('/promos/create', { title, description, discount:discountValue })\r\n    .then(res => {\r\n      dispatch({\r\n        type : CREATE_PROMO_SUCCESS,\r\n        payload : res.data,\r\n      })\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: CREATE_PROMO_FAILURE,\r\n        payload: {\r\n          message: err.message\r\n        },\r\n      })\r\n    });\r\n}\r\n\r\nexport const getPromos = () => async dispatch => {\r\n    dispatch({\r\n        type: GET_PROMO_REQUEST,\r\n        payload: {},\r\n      })\r\n    \r\n      axios.get('/promos')\r\n        .then(res => {\r\n          dispatch({\r\n            type: GET_PROMO_SUCCESS,\r\n            payload: {\r\n              promos: res.data\r\n            },\r\n          })\r\n        })\r\n        .catch(err => {\r\n          dispatch({\r\n            type: GET_PROMO_FAILURE,\r\n            payload: {\r\n              message: err.message\r\n            },\r\n          })\r\n        });\r\n}","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport InfoRoundedIcon from '@material-ui/icons/InfoRounded';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { setToEditionPromo } from 'state/promo/promoActions';\r\n\r\nconst Row = ({promoData}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleInfoBtn = () => {\r\n        dispatch(setToEditionPromo(promoData));\r\n    }\r\n\r\n    return (\r\n        <TableRow hover key={promoData.title}>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n            {promoData.title}\r\n            </TableCell>\r\n            <TableCell align=\"right\">{parseFloat(promoData.discount * 100) + \"%\"}</TableCell>\r\n            <TableCell align=\"right\">\r\n                <IconButton aria-label=\"info\"\r\n                            onClick={handleInfoBtn}>\r\n                    <InfoRoundedIcon />\r\n                </IconButton>    \r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n}\r\n\r\nexport default Row;\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Row from './PromoListRow';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\n\r\nconst PromoList = () => {\r\n    const classes = useStyles();\r\n    const promos = useSelector(state => state.promos.promosList)\r\n    promos.sort((a, b) => a.id - b.id);\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Nazwa promocji</TableCell>\r\n                        <TableCell align=\"right\">Wartość zniżki</TableCell>\r\n                        <TableCell align=\"right\">Kliknij by edytować</TableCell>\r\n                        \r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    { promos.map(promo => <Row promoData={promo}/>)}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nexport default PromoList;","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { createPromo } from 'state/promo/promoActions';\r\nimport './addPromoForm.css';\r\n\r\nconst AddPromoForm = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [discountValue, setDiscountValue] = useState(1);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch(createPromo({\r\n            title,\r\n            description,\r\n            discountValue : parseFloat(discountValue / 100)\r\n        }));\r\n    } \r\n    \r\n\r\n    return (\r\n        <>\r\n            <br/>\r\n            <form id=\"addPromo\" class=\"addPromoForm\" onSubmit={handleSubmit}>\r\n\r\n                <input type=\"text\" name=\"title\" id=\"title\" placeholder=\"Nazwa promocji\" required \r\n                onChange={(event) => setTitle(event.target.value)}/>\r\n                {\"Wartość zniżki: \"}\r\n                <input type=\"number\" name=\"discountValue\" id=\"discountValue\" placeholder={1} required \r\n                onChange={(event) => setDiscountValue(event.target.value)}/> {\"(%)\"}\r\n\r\n                <textarea name=\"description\" id=\"description\" placeholder=\"Opis\"\r\n                onChange={(event) => setDescription(event.target.value)}></textarea>\r\n\r\n                <button type=\"submit\" id=\"addPromoBtn\">Dodaj Promocję</button>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddPromoForm;","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { editPromo, deletePromo } from 'state/promo/promoActions';\r\nimport './addPromoForm.css';\r\n\r\nconst EditPromoForm = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [discountValue, setDiscountValue] = useState(1);\r\n\r\n    const promoEdit = useSelector(state => state.promos.currentlyEdited);\r\n\r\n    useEffect(() => {\r\n        setTitle(promoEdit.title || '');\r\n        setDescription(promoEdit.description || '');\r\n        setDiscountValue(parseFloat(promoEdit.discount * 100) || 1);\r\n    },[promoEdit]);\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch(editPromo({\r\n            id : promoEdit.id,\r\n            title,\r\n            description,\r\n            discountValue : parseFloat(discountValue / 100)\r\n        }));\r\n    } \r\n\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch(deletePromo({\r\n            id : promoEdit.id,\r\n        }));\r\n    } \r\n    \r\n    const showBtns = () => {\r\n        return (\r\n            <> \r\n                <button id=\"updatePromoBtn\" onClick={handleEdit}>Edytuj</button>\r\n                {\" \"}\r\n                <button id=\"deletePromoBtn\" onClick={handleDelete}>Usuń</button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div id=\"addPromo\">\r\n            <br/>\r\n\r\n            <input type=\"text\" name=\"title\" id=\"title\" value={title} required \r\n            onChange={(event) => setTitle(event.target.value)}/>\r\n            \r\n            {\"Wartość zniżki: \"}\r\n\r\n            <input type=\"number\" name=\"discountValue\" id=\"discountValue\" value={discountValue} required \r\n            onChange={(event) => setDiscountValue(event.target.value)}/> {\"(%)\"}\r\n\r\n            <textarea name=\"description\" id=\"description\" value={description}\r\n            onChange={(event) => setDescription(event.target.value)}></textarea>\r\n\r\n            {promoEdit.id ? showBtns() : null}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditPromoForm;","import ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport React, { useState } from 'react';\r\nimport AddPromoForm from './AddPromoForm';\r\nimport EditPromoForm from './EditPromoForm';\r\n\r\nconst PromoForm = () => {\r\n    const [isEditFormOpen, setIsEditFormOpen] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\r\n                <Button style={isEditFormOpen ? {background:'rgb(60, 78, 177)'} : {background:'rgba(60, 78, 177, 0.3)'}}\r\n                        onClick={() => setIsEditFormOpen(false)}>\r\n                            Dodaj nową promocję\r\n                </Button>\r\n                <Button style={!isEditFormOpen ? {background:'rgb(60, 78, 177)'} : {background:'rgba(60, 78, 177, 0.3)'}}\r\n                        onClick={() => setIsEditFormOpen(true)}\r\n                        >\r\n                            Edytuj istniejącą\r\n                </Button>\r\n            </ButtonGroup>\r\n\r\n            <hr/>\r\n            {isEditFormOpen ? <EditPromoForm/> : <AddPromoForm/>}\r\n            <hr/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PromoForm;","import axios from '../../axios-config.js';\r\n\r\nexport const CREATE_PRODUCT_SUCCESS = 'CREATE_PRODUCT_SUCCESS';\r\nexport const CREATE_PRODUCT_FAILURE = 'CREATE_PRODUCT_FAILURE';\r\n\r\nexport const UPDATE_PRODUCT_SUCCESS = 'UPDATE_PRODUCT_SUCCESS';\r\nexport const UPDATE_PRODUCT_FAILURE = 'UPDATE_PRODUCT_FAILURE';\r\n\r\nexport const UPDATE_STORAGE_SUCCESS = 'UPDATE_STORAGE_SUCCESS';\r\nexport const UPDATE_STORAGE_FAILURE = 'UPDATE_STORAGE_FAILURE';\r\n\r\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\r\n\r\nexport const GET_ALL_PRODUCTS_SUCCESS = 'GET_ALL_PRODUCTS_SUCCESS';\r\nexport const GET_ALL_PRODUCTS_FAILURE = 'GET_ALL_PRODUCTS_FAILURE';\r\n\r\nexport const GET_PRODUCT_SUCCESS = 'GET_PRODUCT_SUCCESS';\r\nexport const GET_PRODUCT_FAILURE = 'GET_PRODUCT_FAILURE';\r\nexport const GET_PRODUCT_REQUEST = 'GET_PRODUCT_REQUEST';\r\n\r\nexport const GET_RECOMMENDED_PRODUCTS_SUCCESS = 'GET_RECOMMENDED_PRODUCTS_SUCCESS';\r\nexport const GET_RECOMMENDED_PRODUCTS_FAILURE = 'GET_RECOMMENDED_PRODUCTS_FAILURE';\r\nexport const GET_RECOMMENDED_PRODUCTS_REQUEST = 'GET_RECOMMENDED_PRODUCTS_REQUEST';\r\n\r\nexport const GET_PROMO_PRODUCTS_SUCCESS = 'GET_PROMO_PRODUCTS_SUCCESS';\r\nexport const GET_PROMO_PRODUCTS_FAILURE = 'GET_PROMO_PRODUCTS_FAILURE';\r\nexport const GET_PROMO_PRODUCTS_REQUEST = 'GET_PROMO_PRODUCTS_REQUEST';\r\n\r\nexport const GET_CATEGORY_PRODUCTS_REQUEST = 'GET_CATEGORY_PRODUCTS_REQUEST';\r\nexport const GET_CATEGORY_PRODUCTS_SUCCESS = 'GET_CATEGORY_PRODUCTS_SUCCESS';\r\nexport const GET_CATEGORY_PRODUCTS_FAILURE = 'GET_CATEGORY_PRODUCTS_FAILURE';\r\n\r\nexport const SET_TO_EDIT_PRODUCT = 'SET_TO_EDIT_PRODUCT'; \r\n\r\n\r\n\r\nexport const setToEditProduct = (product) => {\r\n  return {\r\n    type : SET_TO_EDIT_PRODUCT,\r\n    payload : product,\r\n  }\r\n}\r\n\r\nexport const updateStorage = ( updateData ) => async dispatch => {\r\n  axios.put('/orders/storage', {\r\n    userId : updateData.userId,\r\n    title : updateData.title,\r\n    productsCost : updateData.productsCost,\r\n    shippmentPrice : updateData.shippmentPrice,\r\n    id : updateData.id,\r\n    quantity : updateData.quantity,\r\n    price : updateData.price,\r\n  })\r\n  .then(res => {\r\n    dispatch({\r\n        type: UPDATE_STORAGE_SUCCESS,\r\n        payload: {\r\n          quantity: updateData.quantity,\r\n          id : updateData.id,\r\n        }\r\n      })\r\n    })\r\n    .catch(err => {\r\n      dispatch ({\r\n        type: UPDATE_STORAGE_FAILURE,\r\n        payload: err.message,\r\n      })\r\n    })\r\n}\r\n\r\nexport const updateProduct = ( productData ) => async dispatch => {\r\n  axios.post(`/products/update/${productData.id}`, {\r\n    name : productData.name, \r\n    description : productData.description, \r\n    price : productData.price,\r\n    profitMargin : productData.profitMargin,  \r\n    producer : productData.producer, \r\n    warranty : productData.warranty, \r\n    promo_id : productData.promo_id, \r\n    category_id : productData.category_id\r\n  })\r\n  .then(res => {\r\n    dispatch({\r\n        type: UPDATE_PRODUCT_SUCCESS,\r\n        payload: res.data\r\n      })\r\n    })\r\n    .catch(err => {\r\n      dispatch ({\r\n        type: UPDATE_PRODUCT_FAILURE,\r\n        payload: err.message,\r\n      })\r\n    })\r\n}\r\n\r\nexport const createProduct = ( productData ) => async dispatch => {\r\n  axios.put('/products/create', {\r\n    name : productData.name, \r\n    description : productData.description, \r\n    price : productData.price,\r\n    profitMargin : productData.profitMargin,  \r\n    producer : productData.producer, \r\n    warranty : productData.warranty, \r\n    promo_id : productData.promo_id, \r\n    category_id : productData.category_id\r\n  })\r\n  .then(res => {\r\n    dispatch({\r\n        type: CREATE_PRODUCT_SUCCESS,\r\n        payload: res.data\r\n      })\r\n    })\r\n    .catch(err => {\r\n      dispatch ({\r\n        type: CREATE_PRODUCT_FAILURE,\r\n        payload: err.message,\r\n      })\r\n    })\r\n}\r\n\r\nexport const deleteProduct = (productId) => {\r\n  return {\r\n    type: DELETE_PRODUCT,\r\n    payload: {\r\n      productId,\r\n    }\r\n  }\r\n}\r\n\r\nexport const getProductDetails = (productId) => async dispatch => {\r\n  axios.get(`/products/details/${productId}`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_PRODUCT_SUCCESS,\r\n        payload: {\r\n          productDetails: res.data\r\n        },\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: GET_PRODUCT_FAILURE,\r\n        payload: {\r\n          message: err.message\r\n        },\r\n      })\r\n    });\r\n}\r\n\r\n\r\nexport const getAllProducts = () => async dispatch => {\r\n  axios.get('/products/all')\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_ALL_PRODUCTS_SUCCESS,\r\n        payload: res.data\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: GET_ALL_PRODUCTS_FAILURE,\r\n        payload: {\r\n          message: err.message\r\n        },\r\n      })\r\n    });\r\n}\r\n\r\n\r\nexport const getPromoProducts = (promoId) => async dispatch => {\r\n  dispatch({\r\n    type: GET_PROMO_PRODUCTS_REQUEST,\r\n    payload: {},\r\n  })\r\n\r\n  axios.get(`/products/promo/${promoId}`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_PROMO_PRODUCTS_SUCCESS,\r\n        payload: {\r\n          promoProducts: res.data\r\n        },\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: GET_PROMO_PRODUCTS_FAILURE,\r\n        payload: {\r\n          message: err.message\r\n        },\r\n      })\r\n    });\r\n}\r\n\r\nexport const getRecommendedProducts = () => async dispatch => {\r\n  dispatch({\r\n    type: GET_RECOMMENDED_PRODUCTS_REQUEST,\r\n    payload: {},\r\n  })\r\n\r\n  axios.get('/products/recommended')\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_RECOMMENDED_PRODUCTS_SUCCESS,\r\n        payload: {\r\n          recommended: res.data\r\n        },\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: GET_RECOMMENDED_PRODUCTS_FAILURE,\r\n        payload: {\r\n          message: err.message\r\n        },\r\n      })\r\n    });\r\n}\r\n\r\nexport const getProductsByCategoryId = (categoryId) => async dispatch => {\r\n  dispatch({\r\n    type: GET_CATEGORY_PRODUCTS_REQUEST,\r\n    payload: {},\r\n  })\r\n\r\n  axios.get(`/products/category/${categoryId}`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_CATEGORY_PRODUCTS_SUCCESS,\r\n        payload: {\r\n          categoryProducts: res.data\r\n        },\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: GET_CATEGORY_PRODUCTS_FAILURE,\r\n        payload: {\r\n          message: err.message\r\n        },\r\n      })\r\n    });\r\n}","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport InfoRoundedIcon from '@material-ui/icons/InfoRounded';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { setToEditProduct } from 'state/products/productActions';\r\n\r\nconst Row = ({productData}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleInfoBtn = () => {\r\n        dispatch(setToEditProduct(productData))\r\n    }\r\n\r\n    return (\r\n        <TableRow hover key={productData.id}>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n            {productData.id}\r\n            </TableCell>\r\n            <TableCell align=\"left\">{productData.name}</TableCell>\r\n            <TableCell align=\"right\">{productData.promo_id}</TableCell>\r\n            <TableCell align=\"right\">{productData.inStock}</TableCell>\r\n            <TableCell align=\"right\">{productData.category_group}</TableCell>\r\n            <TableCell align=\"right\">\r\n                <IconButton aria-label=\"info\"\r\n                            onClick={handleInfoBtn}>\r\n                    <InfoRoundedIcon />\r\n                </IconButton>    \r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n}\r\n\r\nexport default Row;\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Row from './ProductListRow';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\n\r\nconst ProductList = () => {\r\n    const classes = useStyles();\r\n    const products = useSelector(state => state.products.allProducts);\r\n\r\n    products.sort((a, b) => a.id - b.id);\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell align=\"left\">Nazwa</TableCell>\r\n                        <TableCell align=\"right\">ID promocji</TableCell>\r\n                        <TableCell align=\"right\">Stan magazynowy</TableCell>\r\n                        <TableCell align=\"center\">Typ</TableCell>\r\n                        <TableCell align=\"right\">Kliknij by edytować</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    { products.map(product => <Row productData={product}/>)}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nexport default ProductList;","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { createProduct } from 'state/products/productActions';\r\nimport './addProductForm.css';\r\n\r\nconst AddProductForm = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [price, setPrice] = useState(0.0);\r\n    const [profitMargin, setProfitMargin] = useState(1)\r\n    const [producer, setProducer] = useState('');\r\n    const [warranty, setWarranty] = useState(1);\r\n    const [promo_id, setPromo_id] = useState(-1);\r\n    const [category_id, setCategory_id] = useState(1);\r\n\r\n    const categories = useSelector(state => state.categories.categoriesList);\r\n    const promos = useSelector(state => state.promos.promosList);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch(createProduct({\r\n            name,\r\n            description, \r\n            price,\r\n            profitMargin :  parseFloat(profitMargin / 100),  \r\n            producer, \r\n            warranty, \r\n            promo_id : (promo_id === -1 ? null : promo_id), \r\n            category_id\r\n        }));\r\n    } \r\n\r\n    return (\r\n        <>\r\n            <br/>\r\n            <h2><span class=\"productFormSpan\">Szczegóły nowego produktu:</span></h2>\r\n            <form id=\"addProductForm\" class=\"addProductForm\" onSubmit={handleSubmit}>\r\n\r\n                <input type=\"text\" name=\"name-form\" id=\"name-form\" placeholder=\"Nazwa produktu\" required \r\n                onChange={(event) => setName(event.target.value)}/>\r\n                \r\n                <input type=\"text\" name=\"producer\" id=\"producer\" placeholder=\"Producent\" required \r\n                onChange={(event) => setProducer(event.target.value)}/>\r\n\r\n                <span class=\"productFormSpan\">Cena:</span>\r\n                <input type=\"text\" name=\"price\" id=\"price\" placeholder={1} required \r\n                onChange={(event) => setPrice(event.target.value)}/> \r\n                <span class=\"productFormSpan\">[zł]</span>\r\n\r\n                <span class=\"productFormSpan\">Marża:</span>\r\n                <input type=\"number\" name=\"profitMargin\" id=\"profitMargin\" placeholder={1} required \r\n                onChange={(event) => setProfitMargin(event.target.value)}/> \r\n                <span class=\"productFormSpan\">[%]</span>\r\n\r\n                <textarea name=\"description\" id=\"description\" placeholder=\"Opis\"\r\n                onChange={(event) => setDescription(event.target.value)}></textarea>\r\n\r\n                <span class=\"productFormSpan\">Długość gwarancji:</span>\r\n                <input type=\"number\" name=\"warranty\" id=\"warranty\" placeholder={1} required \r\n                onChange={(event) => setWarranty(event.target.value)}/>\r\n                <span class=\"productFormSpan\">[w miesiącach]</span> \r\n\r\n\r\n                <br/><br/>\r\n                Promocja:\r\n                <Grid container id=\"promoId\">\r\n                    <Grid item xs={12}>\r\n                        <Select\r\n                        style={{background:'rgb(60, 78, 177)'}}\r\n                        labelId=\"promoId-label\"\r\n                        fullWidth\r\n                        value={promo_id}\r\n                        onChange={e => setPromo_id(e.target.value)}\r\n                        >\r\n                            <MenuItem value={-1}>Brak</MenuItem>\r\n                            {promos.map(promo => <MenuItem value={promo.id}>{promo.title}</MenuItem>)}\r\n                        </Select>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                <br/>\r\n                Kategoria:\r\n                <Grid container id=\"categoryId\">\r\n                    <Grid item xs={12}>\r\n                        <Select\r\n                        style={{background:'rgb(60, 78, 177)'}}\r\n                        labelId=\"categoryId-label\"\r\n                        fullWidth\r\n                        value={category_id}\r\n                        onChange={e => setCategory_id(e.target.value)}\r\n                        >\r\n                            {categories.map(cat => <MenuItem value={cat.id}>{cat.category_name + \", \" + cat.category_group}</MenuItem>)}\r\n                        </Select>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <button type=\"submit\" id=\"addProductBtn\">Dodaj Produkt</button>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddProductForm;","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { updateProduct } from 'state/products/productActions';\r\nimport './addProductForm.css';\r\n\r\nconst EditProductDetailsForm = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [price, setPrice] = useState(0.0);\r\n    const [profitMargin, setProfitMargin] = useState(1)\r\n    const [producer, setProducer] = useState('');\r\n    const [warranty, setWarranty] = useState(1);\r\n    const [promo_id, setPromo_id] = useState(-1);\r\n    const [category_id, setCategory_id] = useState(1);\r\n\r\n    \r\n    const productEdit = useSelector(state => state.products.currentlyEdited)\r\n    const categories = useSelector(state => state.categories.categoriesList);\r\n    const promos = useSelector(state => state.promos.promosList);\r\n\r\n\r\n    useEffect(() => {\r\n        setName(productEdit.name || '');\r\n        setDescription(productEdit.description || '');\r\n        setPrice(productEdit.price || 1);\r\n        setProfitMargin(parseFloat(productEdit.profit_margin * 100) || 1);\r\n        setProducer(productEdit.producer || '');\r\n        setWarranty(productEdit.warranty || 1);\r\n        setPromo_id(productEdit.promo_id || -1);\r\n        setCategory_id(productEdit.category_id || 1);\r\n    },[productEdit]);\r\n\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch(updateProduct({\r\n            id : productEdit.id,\r\n            name,\r\n            description, \r\n            price,\r\n            profitMargin :  parseFloat(profitMargin / 100),  \r\n            producer, \r\n            warranty, \r\n            promo_id : (promo_id === -1 ? null : promo_id), \r\n            category_id\r\n        }));\r\n    } \r\n\r\n    return (\r\n        <>\r\n            <br/>\r\n            <h2><span class=\"productFormSpan\">Aktualizacja danych produktu:</span></h2>\r\n            <form id=\"addProductForm\" class=\"addProductForm\" onSubmit={handleSubmit}>\r\n                \r\n                <h4 id=\"productName\"><span class=\"productFormSpan\">{name}</span></h4>\r\n                <h4 id=\"productName\"><span class=\"productFormSpan\">{producer}</span></h4>\r\n                \r\n\r\n                <span class=\"productFormSpan\">Cena:</span>\r\n                <input type=\"text\" name=\"price\" id=\"price\" value={price} required \r\n                onChange={(event) => setPrice(event.target.value)}/> \r\n                <span class=\"productFormSpan\">[zł]</span>\r\n\r\n                <br/>\r\n                <span class=\"productFormSpan\">Marża:</span>\r\n                <input type=\"number\" name=\"profitMargin\" id=\"profitMargin\" value={profitMargin} required \r\n                onChange={(event) => setProfitMargin(event.target.value)}/> \r\n                <span class=\"productFormSpan\">[%]</span>\r\n\r\n                <textarea name=\"description\" id=\"description\" value={description}\r\n                onChange={(event) => setDescription(event.target.value)}></textarea>\r\n\r\n                <span class=\"productFormSpan\">Długość gwarancji:</span>\r\n                <input type=\"number\" name=\"warranty\" id=\"warranty\" value={warranty} required \r\n                onChange={(event) => setWarranty(event.target.value)}/>\r\n                <span class=\"productFormSpan\">[w miesiącach]</span> \r\n\r\n                <br/><br/>\r\n                Promocja:\r\n                <Grid container id=\"promoId\">\r\n                    <Grid item xs={12}>\r\n                        <Select\r\n                        style={{background:'rgb(60, 78, 177)'}}\r\n                        labelId=\"promoId-label\"\r\n                        fullWidth\r\n                        value={promo_id}\r\n                        onChange={e => setPromo_id(e.target.value)}\r\n                        >\r\n                            <MenuItem value={-1}>Brak</MenuItem>\r\n                            {promos.map(promo => <MenuItem value={promo.id}>{promo.title}</MenuItem>)}\r\n                        </Select>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                <br/>\r\n                Kategoria:\r\n                <Grid container id=\"categoryId\">\r\n                    <Grid item xs={12}>\r\n                        <Select\r\n                        style={{background:'rgb(60, 78, 177)'}}\r\n                        labelId=\"categoryId-label\"\r\n                        fullWidth\r\n                        value={category_id}\r\n                        onChange={e => setCategory_id(e.target.value)}\r\n                        >\r\n                            {categories.map(cat => <MenuItem value={cat.id}>{cat.category_name + \", \" + cat.category_group}</MenuItem>)}\r\n                        </Select>\r\n                    </Grid>\r\n                </Grid>\r\n                <br/>\r\n                {productEdit.id ? <button type=\"submit\" id=\"updateProductBtn\">Edytuj</button> : null}\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EditProductDetailsForm;","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { updateStorage, getAllProducts } from 'state/products/productActions';\r\nimport './addProductForm.css';\r\n\r\nconst ReduceStorageForm = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0.0);\r\n    const [quantity, setQuantity] = useState(0);\r\n    \r\n    const productEdit = useSelector(state => state.products.currentlyEdited);\r\n    const auth = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        setName(productEdit.name || '');\r\n        setPrice(productEdit.price || 1);\r\n    },[productEdit]);\r\n\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const title = quantity > 0 \r\n                      ? `Kupno produktu: ${name}`\r\n                      : `Sprzedaż produktu: ${name}`\r\n\r\n        const productsCost = -quantity * price;\r\n\r\n        dispatch(updateStorage({\r\n            id : productEdit.id,\r\n            userId : auth.user.id,\r\n            title,\r\n            price,\r\n            productsCost,\r\n            shippmentPrice : 0,\r\n            quantity : -quantity\r\n        }));\r\n        \r\n        dispatch(getAllProducts());\r\n    } \r\n\r\n    return (\r\n        <>\r\n            <br/>\r\n            <h2><span class=\"productFormSpan\">Aktualizacja stanu magazynowego produktu:</span></h2><br/>\r\n            <form id=\"reduceStorageForm\" class=\"reduceStorageForm\" onSubmit={handleSubmit}>\r\n\r\n                <h4 id=\"productName\"><span class=\"productFormSpan\">{name}</span></h4>\r\n            \r\n                <span class=\"productFormSpan\">Dodaj/usuń z magazynu:</span>\r\n                <input type=\"number\" class=\"quantity\" id=\"quantity\" value={quantity} required onChange={(e) => setQuantity(e.target.value)}/>\r\n\r\n                <br/>\r\n                <span class=\"productFormSpan\">Po cenie:</span>\r\n                <input type=\"text\" name=\"price\" id=\"price\" value={price} required \r\n                onChange={(event) => setPrice(event.target.value)}/> \r\n                <span class=\"productFormSpan\">[zł]</span>\r\n                <br/>\r\n                <br/>\r\n                {productEdit.id ? <button type=\"submit\" id=\"updateStorageBtn\">Aktualizuj</button> : null}\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ReduceStorageForm;","import ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport React, { useState } from 'react';\r\nimport AddProductForm from './AddProductForm';\r\nimport EditProductDetailsForm from './EditProductDetailsForm';\r\nimport ReduceStorageForm from './ReduceStorageForm';\r\n\r\nconst ProductForm = () => {\r\n    const [isDetailsFormOpen, setIsDetailsFormOpen] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\r\n            \r\n                <Button style={isDetailsFormOpen ? {background:'rgb(60, 78, 177)'} : {background:'rgba(60, 78, 177, 0.3)'}}\r\n                        onClick={() => setIsDetailsFormOpen(false)}>\r\n                            Dodaj nowy produkt\r\n                </Button>\r\n                <Button style={!isDetailsFormOpen ? {background:'rgb(60, 78, 177)'} : {background:'rgba(60, 78, 177, 0.3)'}}\r\n                        onClick={() => setIsDetailsFormOpen(true)}\r\n                        >Edytuj produkt\r\n                </Button>\r\n            \r\n            </ButtonGroup>\r\n\r\n            \r\n            <hr/>\r\n            {\r\n                isDetailsFormOpen \r\n                ? <><EditProductDetailsForm/><hr/><ReduceStorageForm/></> \r\n                : <AddProductForm/>\r\n            }\r\n            <hr/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductForm;","import axios from '../../axios-config.js';\r\n\r\n\r\nexport const GET_ORDERS_DETAILS_SUCCES = 'GET_ORDERS_DETAILS_SUCCES';\r\nexport const GET_ORDERS_DETAILS_FAILURE = 'GET_ORDERS_DETAILS_FAILURE';\r\n\r\nexport const GET_ALL_ORDERS_DETAILS_SUCCES = 'GET_ALL_ORDERS_DETAILS_SUCCES';\r\nexport const GET_ALL_ORDERS_DETAILS_FAILURE = 'GET_ALL_ORDERS_DETAILS_FAILURE';\r\n\r\nexport const UPDATE_PAYMENT_STATUS_SUCCESS = 'UPDATE_PAYMENT_STATUS_SUCCESS';\r\nexport const UPDATE_PAYMENT_STATUS_FAILURE = 'UPDATE_PAYMENT_STATUS_FAILURE'; \r\n\r\nexport const UPDATE_ORDER_STATUS_SUCCESS = 'UPDATE_ORDER_STATUS_SUCCESS';\r\nexport const UPDATE_ORDER_STATUS_FAILURE = 'UPDATE_ORDER_STATUS_FAILURE'; \r\n\r\n\r\nexport const updateOrderStatus = ({status, orderId}) =>  async dispatch => {\r\n    axios.put(`/orders/status/${orderId}`, { status })\r\n        .then(res => {\r\n            dispatch({\r\n                type: UPDATE_ORDER_STATUS_SUCCESS,\r\n                payload: {status, orderId},\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            dispatch({\r\n                type: UPDATE_ORDER_STATUS_FAILURE, \r\n            })\r\n        })\r\n}\r\n\r\nexport const updatePaymentStatus = ({isPaid, orderId}) => async dispatch => {\r\n    axios.put(`/orders/payment/${orderId}`, { isPaid })\r\n        .then(res => {\r\n            dispatch({\r\n                type: UPDATE_PAYMENT_STATUS_SUCCESS,\r\n                payload: {isPaid, orderId},\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: UPDATE_PAYMENT_STATUS_FAILURE, \r\n            })\r\n        })\r\n}\r\n\r\n\r\nexport const getAllOrders = () => async dispatch => {\r\n    axios.get(\"/orders\")\r\n        .then(res => {\r\n            dispatch({\r\n                type : GET_ALL_ORDERS_DETAILS_SUCCES,\r\n                payload: res.data,\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            dispatch({\r\n                type : GET_ALL_ORDERS_DETAILS_FAILURE,\r\n                message: err.message\r\n            })\r\n        });\r\n}\r\n\r\nexport const getUserOrders = ({userId}) => async dispatch => {\r\n    axios.get(`/orders/${userId}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type : GET_ORDERS_DETAILS_SUCCES,\r\n                payload: res.data,\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            dispatch({\r\n                type : GET_ORDERS_DETAILS_FAILURE,\r\n                message: err.message\r\n            })\r\n        });\r\n}","import styled from 'styled-components';\r\n\r\nexport const EditBtn = styled.button`\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    padding: 12px 20px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const PaymentStatusWrapper = styled.div`\r\n    padding: 10px;\r\n    background-color: rgba(255,255,255,0.2);\r\n`;","import { useState, useEffect } from 'react'; \r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport { updatePaymentStatus, updateOrderStatus } from 'state/orders/ordersActions';\r\nimport { EditBtn, PaymentStatusWrapper } from './paymentStatus.css';\r\n\r\n\r\n\r\n\r\nconst orderStatusList = [\r\n    {\r\n        key : 1,\r\n        value : \"nowe\"\r\n    },\r\n    {\r\n        key : 2,\r\n        value : \"przyjete\"\r\n    },\r\n    {\r\n        key : 3,\r\n        value : \"pakowane\"\r\n    },\r\n    {\r\n        key : 4,\r\n        value : \"wyslane\"\r\n    },\r\n    {\r\n        key : 5,\r\n        value : \"zrealizowane\"\r\n    },\r\n    {\r\n        key : 6,\r\n        value : \"anulowane\"\r\n    }\r\n]\r\n\r\nconst PaymentStatus = ({orderId, auth}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [isPaid, setIsPaid] = useState(false);\r\n    const [paymentMethod, setPaymentMethod] = useState('');\r\n    const [orderStatus, setOrderStatus] = useState(orderStatusList[0].key);\r\n\r\n    const currentlyWatched = useSelector(state => \r\n        state.orders.find(order => \r\n            parseInt(order.order_id) === parseInt(orderId)\r\n        )\r\n    ); \r\n\r\n\r\n    const orderStatusKeyToValue = (k) => {\r\n        const res = orderStatusList.find(stat => stat.key === k);\r\n        return res.value;\r\n    }\r\n\r\n    const orderStatusValueToKey = (v) => {\r\n        const res = orderStatusList.find(stat => stat.value === v);\r\n        return res.key;\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setIsPaid(currentlyWatched.isPaid || false);\r\n        setPaymentMethod(currentlyWatched.paymentMethod || '');\r\n        setOrderStatus( orderStatusValueToKey(currentlyWatched.orderStatus) || orderStatusList[0].key)\r\n    }, [currentlyWatched]);\r\n\r\n    const handlePaymentSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(currentlyWatched.isPaid !== isPaid){\r\n            dispatch(updatePaymentStatus({isPaid, orderId}));\r\n        }\r\n    } \r\n\r\n    const handleStatus = (e) => {\r\n        e.preventDefault();\r\n\r\n        const status = orderStatusKeyToValue(orderStatus);\r\n\r\n        if(currentlyWatched.orderStatus !== status){\r\n            dispatch(updateOrderStatus({status, orderId}));\r\n        }\r\n    } \r\n\r\n    // admin features\r\n    const handlePayment = () => {\r\n        return (\r\n        <>\r\n            <br/>\r\n            <hr/>\r\n            <h4>Czy zapłacone:</h4>\r\n            <form onSubmit={handlePaymentSubmit}>\r\n                <Select\r\n                labelId=\"payment-label\"\r\n                id=\"payment\"\r\n                fullWidth\r\n                value={isPaid}\r\n                onChange={e => setIsPaid(e.target.value)}\r\n                >\r\n                <MenuItem value={true}>Zapłacono</MenuItem>\r\n                <MenuItem value={false}>Nie zapłacono</MenuItem>\r\n                </Select>\r\n                <br/><br/>\r\n                <EditBtn type=\"submit\">\r\n                    Zmień\r\n                </EditBtn>\r\n            </form>\r\n        </>)\r\n    }\r\n\r\n    const handleOrderStatus = () => {\r\n        return (\r\n        <>\r\n            <br/>\r\n            <hr/>\r\n            <h4>Status zamówienia:</h4>\r\n            <form onSubmit={handleStatus}>\r\n                <Select\r\n                labelId=\"orderStatus-label\"\r\n                id=\"orderStatus\"\r\n                fullWidth\r\n                value={orderStatus}\r\n                onChange={e => setOrderStatus(e.target.value)}\r\n                >\r\n                    {orderStatusList.map(status => <MenuItem value={status.key}>{status.value}</MenuItem>)}\r\n                </Select>\r\n                <br/><br/>\r\n                <EditBtn type=\"submit\">\r\n                    Zmień\r\n                </EditBtn>\r\n            </form>\r\n        </>)\r\n    }\r\n\r\n\r\n    // normal user features\r\n    const basicUserPayment = () => {\r\n        return ( \r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                <br/>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"isPaid\"\r\n                        label=\"Czy zapłacone?\"\r\n                        id=\"isPaid\"\r\n                        variant=\"outlined\"\r\n                        value={isPaid ? 'zapłacone' : 'nie zapłacone'}\r\n                    />\r\n                </Grid> \r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    const basicUserOrderStatus = () => {\r\n        return ( \r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                <br/>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"orderStatus\"\r\n                        label=\"Status zamówienia\"\r\n                        id=\"orderStatus\"\r\n                        variant=\"outlined\"\r\n                        value={orderStatusKeyToValue(orderStatus)}\r\n                    />\r\n                </Grid> \r\n            </Grid>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <PaymentStatusWrapper>\r\n            <h3>Status płatności</h3>\r\n            <hr/>\r\n            <br/>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"paymentMethod\"\r\n                        label=\"Metoda płatności\"\r\n                        id=\"paymentMethod\"\r\n                        variant=\"outlined\"\r\n                        value={paymentMethod}\r\n                    />\r\n                </Grid> \r\n            </Grid>\r\n            <br/>\r\n            {basicUserPayment()}\r\n            {basicUserOrderStatus()}\r\n            <br/>\r\n            <hr/>\r\n            <br/>\r\n            {auth ? <h3>Zarządzaj zamówieniem:</h3> : null}\r\n            {auth ? handlePayment() : null}\r\n            {auth ? handleOrderStatus() : null}\r\n\r\n        </PaymentStatusWrapper>\r\n    )\r\n}\r\n\r\nexport default PaymentStatus;","import styled from 'styled-components';\r\n\r\nexport const DetailsWrapper = styled.div`\r\n    padding: 10px;\r\n    background-color: rgba(255,255,255,0.2);\r\n`","import TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { DetailsWrapper } from './orderAddressDetails.css';\r\n\r\n\r\nconst OrderAddressDetails = ({orderData}) => {\r\n\r\n    return (\r\n        <DetailsWrapper>\r\n            <h3>Szczegóły</h3>\r\n            <hr/>\r\n            <br/>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        disabled\r\n                        name=\"name\"\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        label=\"Imię\"\r\n                        variant=\"outlined\"\r\n                        value={orderData.userName}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        id=\"lastName\"\r\n                        label=\"Nazwisko\"\r\n                        name=\"lastName\"\r\n                        variant=\"outlined\"\r\n                        value={orderData.userSurname}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        id=\"email\"\r\n                        variant=\"outlined\"\r\n                        value={orderData.email}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"phoneNumber\"\r\n                        label=\"Numer telefonu\"\r\n                        id=\"phoneNumber\"\r\n                        variant=\"outlined\"\r\n                        value={orderData.phoneNumber}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <br/>    \r\n            <hr/>\r\n            <br/>\r\n\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}  sm={6}>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"country\"\r\n                        label=\"Państwo\"\r\n                        id=\"country\"\r\n                        variant=\"outlined\"\r\n                        value={orderData.country}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}  sm={6}>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"postcode\"\r\n                        label=\"Kod pocztowy\"\r\n                        id=\"postcode\"\r\n                        variant=\"outlined\"\r\n                        value={orderData.postCode}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"city\"\r\n                        label=\"Miejscowość\"\r\n                        id=\"city\"\r\n                        variant=\"outlined\"\r\n                        value={orderData.city}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"street\"\r\n                        label=\"Ulica\"\r\n                        id=\"street\"\r\n                        variant=\"outlined\"\r\n                        value={orderData.street}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}  sm={6}>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"building\"\r\n                        label=\"Nr budynku\"\r\n                        id=\"building\"\r\n                        variant=\"outlined\"\r\n                        value={orderData.building}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}  sm={6}>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"apartment\"\r\n                        label=\"Nr lokalu\"\r\n                        id=\"apartment\"\r\n                        variant=\"outlined\"\r\n                        value={orderData.apartment}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <br/>    \r\n            <hr/>\r\n            <br/>\r\n\r\n            <Grid container spacing={2}>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"datePlaced\"\r\n                        label=\"Data złożenia\"\r\n                        id=\"datePlaced\"\r\n                        variant=\"outlined\"\r\n                        value={orderData.datePlaced.split('T')[0]}\r\n                    />\r\n                </Grid>\r\n\r\n                {\r\n                    orderData.dateFulfillment \r\n                    ? <Grid item xs={12}>\r\n                        <TextField\r\n                            disabled\r\n                            fullWidth\r\n                            name=\"dateFulfillment\"\r\n                            label=\"Data zrealizowania\"\r\n                            id=\"dateFulfillment\"\r\n                            variant=\"outlined\"\r\n                            value={orderData.dateFulfillment.split('T')[0]}\r\n                        />\r\n                    </Grid> \r\n                    : null\r\n                }\r\n\r\n            </Grid>\r\n            <br/>    \r\n            <hr/>\r\n            <br/>\r\n            <h3>Komentarz do zamówienia:</h3>\r\n            <h4>{orderData.clientComments}</h4>\r\n        </DetailsWrapper>\r\n    );\r\n}\r\n\r\nexport default OrderAddressDetails;","import styled from 'styled-components';\r\n\r\nexport const ProductListWrapper = styled.div`\r\n    padding: 0 10px 0 10px;\r\n`;\r\n\r\nexport const Btn = styled.button`\r\n    background-color: Transparent;\r\n    background-repeat:no-repeat;\r\n    border: none;\r\n    cursor:pointer;\r\n    overflow: hidden;\r\n    outline:none;\r\n    color: darkgray;\r\n    font-size: large;\r\n\r\n    &:hover{\r\n        background-color: red;\r\n    }\r\n`","import axios from '../../axios-config.js';\r\n\r\nexport const SET_TO_EDIT_PRODUCT_IN_SERVICE = 'SET_TO_EDIT_PRODUCT_IN_SERVICE'; \r\n\r\nexport const GET_PRODUCTS_IN_SERVICE_SUCCESS = 'GET_PRODUCTS_IN_SERVICE_SUCCESS';\r\nexport const GET_PRODUCTS_IN_SERVICE_FAILURE = 'GET_PRODUCTS_IN_SERVICE_FAILURE';\r\n\r\nexport const ADD_PRODUCT_TO_SERVICE_SUCCESS = 'ADD_PRODUCT_TO_SERVICE_SUCCESS';\r\nexport const ADD_PRODUCT_TO_SERVICE_FAILURE = 'ADD_PRODUCT_TO_SERVICE_FAILURE';\r\n\r\nexport const PRODUCT_IN_SERVICE_STATUS_UPDATE_SUCCESS = 'PRODUCT_IN_SERVICE_STATUS_UPDATE_SUCCESS';\r\nexport const PRODUCT_IN_SERVICE_STATUS_UPDATE_FAILURE = 'PRODUCT_IN_SERVICE_STATUS_UPDATE_FAILURE';\r\n\r\n\r\n\r\nexport const setToEditProductInService = ({product}) => {\r\n    return {\r\n        type : SET_TO_EDIT_PRODUCT_IN_SERVICE,\r\n        payload : product,\r\n    }\r\n}\r\n\r\nexport const getProductsInService = () => async dispatch => {\r\n    axios.get('/service')\r\n    .then(res => {\r\n        dispatch({\r\n            type : GET_PRODUCTS_IN_SERVICE_SUCCESS,\r\n            payload : res.data\r\n        })\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type : GET_PRODUCTS_IN_SERVICE_FAILURE \r\n        })\r\n    })\r\n}\r\n\r\nexport const addProductToService = ({ orderLineId, description, status }) => async dispatch => {\r\n    axios.put('/service/create', { orderLineId, description, status })\r\n        .then(res => {\r\n            dispatch({\r\n                type : ADD_PRODUCT_TO_SERVICE_SUCCESS,\r\n                payload : res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            alert(\"Produkt jest już w serwisie lub jego okres gwarancji wygasł.\");\r\n            dispatch({\r\n                type : ADD_PRODUCT_TO_SERVICE_FAILURE \r\n            })\r\n        })\r\n}\r\n\r\nexport const updateProductStatusInService = ({ serviceId, description, status }) => async dispatch => {\r\n    console.log({ serviceId, description, status });\r\n    axios.post(`/service/update/${serviceId}`, { description, status })\r\n        .then(res => {\r\n            dispatch({\r\n                type : PRODUCT_IN_SERVICE_STATUS_UPDATE_SUCCESS,\r\n                payload : res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : PRODUCT_IN_SERVICE_STATUS_UPDATE_FAILURE \r\n            })\r\n        })\r\n}\r\n\r\n","import { useDispatch } from 'react-redux';\r\n\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport OfflineBoltIcon from '@material-ui/icons/OfflineBolt';\r\n\r\nimport { Btn } from './orderProductList.css';\r\n\r\nimport { addProductToService } from 'state/productsService/productsServiceActions';\r\n\r\nconst Row = ({productData, auth, fulfilmentDate=null}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleBtnService = (e) => {\r\n        e.preventDefault();\r\n        if(fulfilmentDate){\r\n            dispatch(addProductToService({ \r\n                orderLineId : productData.orderLineId,\r\n                description : '',\r\n                status : 'nowe' }))\r\n        } else { \r\n            alert(\"Zamówienie musi być zrealizowane by dodać produkt do serwisu.\")\r\n        }\r\n\r\n\r\n    } \r\n\r\n    return (\r\n        <TableRow key={productData.id}>\r\n            {\r\n                auth \r\n                ? <TableCell align=\"center\">\r\n                        <Btn onClick={handleBtnService}>\r\n                            <OfflineBoltIcon/>\r\n                        </Btn>\r\n                  </TableCell>\r\n                : null\r\n            }\r\n                \r\n            <TableCell component=\"th\" scope=\"row\">\r\n                {productData.name}\r\n            </TableCell>\r\n            <TableCell align=\"right\">{productData.pricePerItem + \" zł\"}</TableCell>\r\n            <TableCell align=\"center\">{productData.quantity}</TableCell>\r\n            <TableCell align=\"right\">\r\n                {parseFloat(productData.quantity * productData.pricePerItem).toFixed(2) + \" zł\"}\r\n            </TableCell>\r\n        </TableRow>\r\n    )\r\n} \r\n\r\nexport default Row;","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Row from './OrderProductListRow';\r\nimport { ProductListWrapper } from './orderProductList.css';\r\n\r\nconst OrderProductList = ({productList, auth, fulfilmentDate=null}) => {\r\n\r\n    productList.sort((a, b) => a.id - b.id);\r\n\r\n    return (\r\n        <ProductListWrapper>\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow key=\"head\">\r\n                            {\r\n                                auth \r\n                                ? <TableCell>SERWIS</TableCell>\r\n                                : null\r\n                            }\r\n                            <TableCell align=\"left\">Nazwa</TableCell>\r\n                            <TableCell align=\"right\">Cena za sztuke</TableCell>\r\n                            <TableCell align=\"center\">Ilość</TableCell>\r\n                            <TableCell align=\"right\">Suma</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        { productList.map(product => <Row productData={product} auth={auth} fulfilmentDate={fulfilmentDate} />)}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </ProductListWrapper>\r\n    );\r\n}\r\n\r\nexport default OrderProductList;","import { useDispatch } from 'react-redux';\r\nimport { setToEditProductInService } from 'state/productsService/productsServiceActions';\r\n\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport styled from 'styled-components';\r\n\r\nconst Btn = styled.button`\r\n    background-color: Transparent;\r\n    background-repeat:no-repeat;\r\n    border: none;\r\n    cursor:pointer;\r\n    overflow: hidden;\r\n    outline:none;\r\n    color: darkgray;\r\n    font-size: large;\r\n\r\n    &:hover{\r\n        background-color: blue;\r\n    }\r\n`\r\n\r\nconst Row = ({productData}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleInfo = (e) => {\r\n        e.preventDefault();\r\n        dispatch(setToEditProductInService({product:productData}));\r\n    } \r\n\r\n    return (    \r\n        <TableRow key={productData.id}>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n            {productData.orderTitle}\r\n            </TableCell>\r\n            <TableCell align=\"left\">{productData.productName}</TableCell>\r\n            <TableCell align=\"center\">{productData.producer}</TableCell>\r\n            <TableCell align=\"center\">{productData.inStock}</TableCell>\r\n            <TableCell align=\"right\">{productData.status}</TableCell>\r\n            <TableCell align=\"right\">\r\n                <Btn onClick={handleInfo}>           \r\n                    <EditIcon /> \r\n                </Btn>\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n}\r\n\r\nexport default Row;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Row from './ProductsInServiceRow';\r\n\r\nconst ProductsInServiceList = () => {\r\n    const products = useSelector(state => state.productsInService.productList);\r\n    \r\n    products.sort((a, b) => a.id - b.id);\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow key=\"head\">\r\n                            <TableCell>Zamówienie</TableCell>\r\n                            <TableCell align=\"left\">Nazwa produktu</TableCell>\r\n                            <TableCell align=\"center\">Producent</TableCell>\r\n                            <TableCell align=\"center\">Stan magazynowy produktu</TableCell>\r\n                            <TableCell align=\"right\">Status</TableCell>\r\n                            <TableCell align=\"right\">Edytuj</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        { products.map(product => <Row productData={product}/>)}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default ProductsInServiceList;","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { updateProductStatusInService } from 'state/productsService/productsServiceActions';\r\nimport './productsInServiceForm.css';\r\n\r\n\r\nconst ProductInServiceForm = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [status, setStatus] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const serviceEdit = useSelector(state => state.productsInService.currentlyEdit);\r\n\r\n    useEffect(() => {\r\n        setStatus(serviceEdit.status || '');\r\n        setDescription(serviceEdit.description || '');\r\n    },[serviceEdit]);\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch(updateProductStatusInService({ \r\n            serviceId : serviceEdit.id,\r\n            description,\r\n            status \r\n        }));\r\n    } \r\n    \r\n    const showBtns = () => {\r\n        return (\r\n            <> \r\n                <button id=\"updateServiceBtn\" onClick={handleEdit}>Aktualizuj</button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div id=\"updateService\">\r\n            <br/>\r\n            <h4>Status: </h4>\r\n            <input type=\"text\" name=\"serviceStatus\" id=\"serviceStatus\" value={status} required \r\n            onChange={(event) => setStatus(event.target.value)}/>\r\n            \r\n            <h4>Opis usterki:</h4>\r\n            <textarea name=\"serviceDescription\" id=\"serviceDescription\" value={description}\r\n            onChange={(event) => setDescription(event.target.value)}></textarea>\r\n\r\n            {serviceEdit.id ? showBtns() : null}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductInServiceForm;","import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport { Paragraph } from './home.css';\r\nimport { MiddlepaneOffer } from 'styles/Middlepane.css';\r\nimport { AppBar, AdsCarousel, ProductGrid } from 'components';\r\n\r\n\r\n\r\nconst Home = () => {\r\n    const recommendedProducts = useSelector(state => state.products.recommended);\r\n\r\n    return (\r\n        <>\r\n            <AppBar></AppBar>\r\n            <MiddlepaneOffer>\r\n                <br/>\r\n                <br/>\r\n                <Paragraph>Welcome to CyberShop!</Paragraph>\r\n                <br/>\r\n                <br/>\r\n                <AdsCarousel/>\r\n                <br/><br/>\r\n                <Paragraph>Polecane</Paragraph>\r\n                <ProductGrid productsInfo={recommendedProducts}/>\r\n            </MiddlepaneOffer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProductsByCategoryId } from 'state/products/productActions';\r\nimport { AppBar, ProductGrid } from 'components';\r\nimport { Middlepane } from 'styles/Middlepane.css';\r\n\r\nconst categoriesEnum = {\r\n    1 : 'Laptopy i komputery',\r\n    2 : 'Smartfony i smartwatche',\r\n    3 : 'Podzespoły komputerowe'        \r\n}\r\n\r\nconst Offer = () => {\r\n    const dispatch = useDispatch();\r\n    const { categoryId } = useParams();\r\n    \r\n    useEffect( () => {\r\n        dispatch(getProductsByCategoryId(categoryId));\r\n    },[dispatch, categoryId]);\r\n\r\n    \r\n    const categoryProducts = useSelector(state => state.products.categoryProducts);\r\n    const categoriesList = useSelector(state => state.categories.categoriesList);\r\n    const currentCategories = categoriesList.filter(category => category.category_name === categoriesEnum[categoryId]);\r\n\r\n    const items = currentCategories.map(cat => (\r\n        <>\r\n            <hr/>\r\n            <br/>\r\n            <h2>{cat.category_group}</h2>\r\n            <br/>\r\n            <hr/>\r\n            <br/>\r\n            <ProductGrid productsInfo={categoryProducts.filter(prod => prod.category_id === cat.id)}/>\r\n            <br/>\r\n        </>)\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <AppBar></AppBar>\r\n            <Middlepane>\r\n                {items}\r\n            </Middlepane>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Offer;\r\n","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppBar, ProductGrid } from 'components';\r\nimport { getPromoProducts } from 'state/products/productActions';\r\nimport { Middlepane } from 'styles/Middlepane.css';\r\n\r\nconst Promo = () => {\r\n    const dispatch = useDispatch();\r\n    const { promoId } = useParams();\r\n\r\n    useEffect( () => {\r\n        dispatch(getPromoProducts(promoId));\r\n    }, [dispatch, promoId])\r\n \r\n    const promoProducts = useSelector(state => state.products.promoProducts);\r\n    const promoList = useSelector(state => state.promos.promosList);\r\n    const promo = promoList.filter(promo => promo.id === parseInt(promoId));\r\n\r\n    const promoDetails = promo.map(promo => (\r\n            <> \r\n                <h1>\r\n                    {promo.title}\r\n                </h1>\r\n                <h3>\r\n                    {promo.description}\r\n                </h3>\r\n                <h3>\r\n                    {\"ZNIŻKA NA WSZYSTKO: \" + parseFloat(promo.discount * 100) + \"%!\"}\r\n                </h3> \r\n            </> \r\n        ));\r\n\r\n    return (\r\n        <>\r\n            <AppBar></AppBar>\r\n            <Middlepane>\r\n                <hr/>\r\n                <br/>\r\n                {promoDetails}\r\n                <br/>\r\n                <hr/>\r\n                <br/>\r\n                <ProductGrid productsInfo={promoProducts}></ProductGrid>\r\n            </Middlepane>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Promo;\r\n","import styled from 'styled-components';\r\n\r\nexport const Paragraph = styled.p`\r\n    color: rgba(255,255,255,.75);\r\n    font-size: 180%;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    font-family: 'Anonymous Pro', monospace;\r\n`;\r\n \r\n\r\nexport const Btn = styled.div`\r\n\tbackground-color: #33C333;\r\n\tdisplay:inline-block;\r\n\tfont-size:18px;\r\n\tpadding: 8px 20px;\r\n\ttext-decoration:none;\r\n\tposition: relative;\r\n    cursor: pointer;   \r\n\r\n\r\n    &:hover {\r\n        background-color:#269126;\r\n    }\r\n    \r\n    &:active {\r\n        position:relative;\r\n        top:2px;\r\n    }\r\n` ","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppBar, Comments } from '../../components';\r\nimport { getProductDetails } from 'state/products/productActions';\r\nimport { addProductToCart } from '../../state/cart/cartActions';\r\nimport { Paragraph, Btn } from './productDetails.css';\r\nimport { Middlepane } from 'styles/Middlepane.css';\r\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport WatchIcon from '@material-ui/icons/Watch';\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\n\r\nconst ProductDetails = () => {\r\n    const dispatch = useDispatch();\r\n    const { productId } = useParams();\r\n\r\n    const getProductIcon = (category) => {\r\n        switch (category) {\r\n            case 1:{\r\n                return  <PhoneAndroidIcon style={{ fontSize: 200 }}/>;\r\n            }case 2:{\r\n                return  <WatchIcon style={{ fontSize: 200 }}/>;\r\n            }case 3:{\r\n                return  <CategoryIcon style={{ fontSize: 200 }}/>;\r\n            }case 4:{\r\n                return  <ComputerIcon style={{ fontSize: 200 }}/>;\r\n            }default: {\r\n                return <CategoryIcon style={{ fontSize: 200 }}/>;\r\n            }\r\n        }\r\n    } \r\n\r\n    useEffect( () => {\r\n        dispatch(getProductDetails(productId));\r\n    }, [dispatch, productId]);\r\n\r\n    const product = useSelector(status => status.products.productDetails);\r\n\r\n    const handleAddToCart = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(addProductToCart({\r\n            productId : product.id,\r\n            productName : product.name,\r\n            price : product.promo_id ? product.promo_price : product.price,\r\n        }))\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <AppBar></AppBar>\r\n\r\n            <Middlepane>\r\n                <br/>\r\n                <br/>\r\n                {getProductIcon(product.category_id)}\r\n                <br/>\r\n                <br/>\r\n                <hr/>\r\n                <Paragraph>\r\n                    {product.name}\r\n\r\n                </Paragraph>\r\n                <Rating \r\n                        value={parseFloat(product.rating)}\r\n                        readOnly\r\n                        precision={0.5}\r\n                        size=\"large\" />\r\n                <br/><br/>\r\n                <h2>\r\n                    {product.promo_id \r\n                    ? product.promo_price + \" zł\" \r\n                    : product.price + \" zł\"}\r\n                </h2>\r\n                <Btn onClick={handleAddToCart}>\r\n                    <AddShoppingCartIcon/>\r\n                    {\" \"}\r\n                    Dodaj do koszyka\r\n                </Btn>\r\n                <br/><br/>\r\n                <hr/>\r\n                <div className=\"description\">\r\n                    <br/>                        \r\n                    <Paragraph>Producent:</Paragraph>\r\n                        {product.producer}\r\n                        <Paragraph>Opis:</Paragraph>\r\n                        {product.description}\r\n                        <br/><br/>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit officia optio quibusdam animi, similique nemo, corrupti adipisci exercitationem quas eligendi magni earum? Exercitationem incidunt similique ullam eius sunt architecto modi commodi illum, cumque veniam sequi? Illo recusandae eos laudantium ipsum nihil natus. Non ipsum ad, libero ab similique commodi voluptatem repellendus eius asperiores quaerat nobis accusantium. Facere veniam itaque impedit doloribus, minima labore sint quod voluptatibus beatae eaque quae exercitationem? Debitis sint neque minus ut amet ab veritatis, cum dolorum inventore unde facilis alias odit at, hic obcaecati numquam ea ratione omnis quo excepturi, beatae laborum. Laudantium consequuntur est atque nulla voluptatum sunt commodi quo quia placeat reprehenderit. Voluptatum, eaque. Consequuntur impedit officiis ab est ad veniam nam, praesentium tempore possimus maxime reiciendis, ipsum, distinctio autem. Soluta, temporibus blanditiis alias officia quibusdam expedita eius in labore? Delectus minus eveniet enim odio atque sapiente veniam provident distinctio officia repudiandae non numquam neque accusantium eum culpa, ea at. Praesentium, adipisci deleniti similique distinctio minus nemo quisquam facilis dolorem aperiam quo iusto dolore sapiente quod soluta magnam alias ex laborum qui ad aliquid nihil amet repudiandae voluptatibus debitis. Quisquam animi nulla veniam! Debitis perferendis, officia ratione dolores reiciendis quibusdam delectus quam. Recusandae esse voluptatum eaque voluptate ducimus quaerat at illo odio. Mollitia explicabo dolorum exercitationem rem pariatur incidunt voluptates. Asperiores reiciendis veritatis libero natus iure eveniet voluptates sunt culpa ea sint, eaque maxime quo in quisquam magni delectus illo facilis accusantium est mollitia officiis, itaque, quas adipisci beatae! Dolorem expedita sequi amet velit voluptatibus provident dolore explicabo quibusdam ab delectus, eaque tenetur iste ipsam mollitia, ex suscipit, at autem. Dignissimos natus, recusandae veniam hic maxime, modi amet officia rerum alias porro quis aperiam maiores beatae. Reprehenderit soluta, eum quidem perferendis natus assumenda doloremque libero sunt eius voluptatum animi suscipit, consequatur dolorum officia totam.\r\n                    <br/><br/>\r\n                </div>\r\n                <hr/>\r\n                <br/><br/>\r\n                <Comments productId={productId}/> \r\n\r\n            </Middlepane> \r\n        </>\r\n    )   \r\n}\r\n\r\nexport default ProductDetails;","import styled from 'styled-components';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const CustomLink = styled(Link)`\r\n    font-size: 0.8em;\r\n    text-decoration: none;\r\n`;\r\nexport const SignInWrapper = styled(Container)`\r\n    background-color: rgba(255,255,255, 0.5);\r\n    color: rgb(239, 255, 250, 0.8);\r\n    font-size: 180%;\r\n    border-radius: 1em;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    margin-right: -50%;\r\n    transform: translate(-50%, -50%);\r\n\r\n`","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SignInWrapper, CustomLink } from './login.css';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../../state/auth/authActions';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(7),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginBottom: theme.spacing(7),\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    height: 60,\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n        // TO DO: client validation\r\n    dispatch(login({email, password}));\r\n  } \r\n\r\n  return (\r\n    <SignInWrapper component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Logowanie\r\n        </Typography>\r\n        <form \r\n          className={classes.form} \r\n          onSubmit={handleSubmit}>\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={(event) => setEmail(event.target.value)}\r\n          />\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Hasło\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(event) => setPassword(event.target.value)}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Zaloguj!\r\n          </Button>\r\n\r\n          <Grid container>\r\n            <Grid item>\r\n              <CustomLink to=\"/register\">\r\n                {\"Nie masz konta? Zarejestruj się!\"}\r\n              </CustomLink>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    { auth.isLoggedIn ? <Redirect to=\"/\" /> : null  }\r\n    </SignInWrapper>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);","import styled from 'styled-components';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nexport const AccountDataWrapper = styled(Container)`\r\n    background-color: rgba(255,255,255, 0.5);\r\n    color: rgb(239, 255, 250, 0.8);\r\n    font-size: 180%;\r\n    border-radius: 1em;\r\n    padding-top: 1px;\r\n    padding-bottom: 11px;\r\n`","import React, { useEffect, useState } from 'react';\r\nimport { AppBar } from 'components';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AccountDataWrapper } from './account.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateAccountData } from 'state/auth/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(10),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginBottom: theme.spacing(10),\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        height: 60,\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\n\r\nconst Account = () => {\r\n    const classes = useStyles();\r\n    \r\n    const [name, setName] = useState('');\r\n    const [surname, setSurname] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    \r\n    const userData = useSelector( state => state.auth.user);\r\n    const auth = useSelector(state => state.auth);\r\n    \r\n    useEffect( () => {\r\n        setName(userData.name);\r\n        setSurname(userData.surname);\r\n        setPhoneNumber(userData.phoneNumber);\r\n    },[userData])\r\n\r\n    const validateName = () => {\r\n        const regName = /[0-9]+/g;\r\n        return ( !regName.test(name) && name.length > 2 )\r\n    }\r\n\r\n    const validateSurname = () => {\r\n        const regName = /[0-9]+/g;\r\n        return ( !regName.test(surname) && surname.length > 2 )\r\n    }\r\n  \r\n    const validatePhoneNumber = () => {\r\n        const regPhoneNumber = /[0-9]{3}-[0-9]{3}-[0-9]{3}/;\r\n        return (regPhoneNumber.test(phoneNumber) && phoneNumber.length === 11);\r\n    }\r\n\r\n    const validate = () => {\r\n        let isValid = validateName()\r\n                        && validateSurname()\r\n                        && validatePhoneNumber();\r\n        return isValid; \r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    const handleSubmitRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        const userId = userData.id;\r\n\r\n        validate()\r\n        ? dispatch(updateAccountData({ userId, name, surname, phoneNumber }))\r\n        : alert(\"Popraw dane i spróbuj ponownie\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBar></AppBar>\r\n            <br/>\r\n            <AccountDataWrapper component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <AccountCircleIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Moje dane\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={handleSubmitRegister}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"given-name\"\r\n                                name=\"name\"\r\n                                fullWidth\r\n                                required\r\n                                id=\"name\"\r\n                                label=\"Imię\"\r\n                                variant=\"filled\"\r\n                                value={name}\r\n                                helperText={validateName() ? null : \"Imię powinno być dłuższe niż 2 znaki i nie powinno zawierać cyfr\"}\r\n                                error={!validateName()}\r\n                                onChange={(event) => setName(event.target.value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"family-name\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"lastName\"\r\n                                label=\"Nazwisko\"\r\n                                name=\"lastName\"\r\n                                variant=\"filled\"\r\n                                value={surname}\r\n                                helperText={validateSurname() ? null : \"Nazwisko powinno być dłuższe niż 2 znaki i nie powinno zawierać cyfr\"}\r\n                                error={!validateSurname()}\r\n                                onChange={(event) => setSurname(event.target.value)}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                type=\"tel\"\r\n                                name=\"phoneNumber\"\r\n                                label=\"Numer telefonu\"\r\n                                id=\"phoneNumber\"\r\n                                autoComplete=\"tel-national\"\r\n                                variant=\"filled\"\r\n                                value={phoneNumber}\r\n                                helperText={validatePhoneNumber() ? null :\"format: 123-123-123\"}\r\n                                error={!validatePhoneNumber()}\r\n                                onChange={(event) => setPhoneNumber(event.target.value)}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Zapisz zmiany\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n            { !auth.isLoggedIn ? <Redirect to=\"/\" /> : null  }\r\n        </AccountDataWrapper>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Account;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppBar, OrderList } from 'components';\r\nimport { Middlepane } from 'styles/Middlepane.css';\r\n\r\nimport { getAllOrders, getUserOrders } from 'state/orders/ordersActions';\r\n\r\nconst Orders = () => {\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector(state => state.auth);\r\n\r\n    useEffect( () => {\r\n        auth.isAdmin \r\n        ? dispatch(getAllOrders())\r\n        : dispatch(getUserOrders({userId : auth.user.id}))\r\n    \r\n    },[dispatch, auth]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <AppBar></AppBar>\r\n            <Middlepane>\r\n                <OrderList/>\r\n            </Middlepane>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Orders;\r\n","import styled from 'styled-components';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const CustomLink = styled(Link)`\r\n    font-size: 0.8em;\r\n    text-decoration: none;\r\n`;\r\n\r\nexport const RegisterWrapper = styled(Container)`\r\n    background-color: rgba(255,255,255, 0.4);\r\n    color: rgb(239, 255, 250, 0.8);\r\n    font-size: 180%;\r\n    border-radius: 1em;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    margin-right: -50%;\r\n    transform: translate(-50%, -50%);\r\n`","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PersonAddRoundedIcon from '@material-ui/icons/PersonAddRounded';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { RegisterWrapper, CustomLink } from './register.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { submitRegister } from 'state/auth/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(3),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        height: 60,\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst Register = () => {\r\n    const classes = useStyles();\r\n    \r\n    const [name, setName] = useState('');\r\n    const [surname, setSurname] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const validateName = () => {\r\n        const regName = /[0-9]+/g;\r\n        return ( !regName.test(name) && name.length > 2 )\r\n    }\r\n\r\n    const validateSurname = () => {\r\n        const regName = /[0-9]+/g;\r\n        return ( !regName.test(surname) && surname.length > 2 )\r\n    }\r\n  \r\n    const validateEmail = () => {\r\n        const regEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return (regEmail.test(email) && email.length > 1);\r\n    }\r\n\r\n    const validatePhoneNumber = () => {\r\n        const regPhoneNumber = /[0-9]{3}-[0-9]{3}-[0-9]{3}/;\r\n        return (regPhoneNumber.test(phoneNumber) && phoneNumber.length === 11);\r\n    }\r\n\r\n    const validatePassword = () => {\r\n        return password.length > 4 && password.length < 30;\r\n    }\r\n    \r\n    const validate = () => {\r\n        let isValid = validateName()\r\n                        && validateSurname()\r\n                        && validateEmail()\r\n                        && validatePhoneNumber()\r\n                        && validatePassword();\r\n        return isValid; \r\n    }\r\n\r\n\r\n    const auth = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmitRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        validate() \r\n        ? dispatch(submitRegister({ name, surname, phoneNumber, email, password }))\r\n        : alert(\"Popraw dane i spróbuj ponownie\")\r\n    }\r\n\r\n    return (\r\n        <RegisterWrapper component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <PersonAddRoundedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Rejestracja\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={handleSubmitRegister}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"given-name\"\r\n                                name=\"name\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"name\"\r\n                                label=\"Imię\"\r\n                                autoFocus\r\n                                helperText={validateName() ? null : \"Imię powinno być dłuższe niż 2 znaki i nie powinno zawierać cyfr\"}\r\n                                error={!validateName()}\r\n                                onChange={(event) => setName(event.target.value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"family-name\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"lastName\"\r\n                                label=\"Nazwisko\"\r\n                                name=\"lastName\"\r\n                                helperText={validateSurname() ? null : \"Nazwisko powinno być dłuższe niż 2 znaki i nie powinno zawierać cyfr\"}\r\n                                error={!validateSurname()}\r\n                                onChange={(event) => setSurname(event.target.value)}\r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                helperText={validateEmail() ? null : \"Wpisz poprawny email\"}\r\n                                error={!validateEmail()}\r\n                                onChange={(event) => setEmail(event.target.value)}\r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                type=\"tel\"\r\n                                name=\"phoneNumber\"\r\n                                label=\"Numer telefonu\"\r\n                                placeholder=\"format: 123-123-123\"\r\n                                helperText={validatePhoneNumber() ? null :\"format: 123-123-123\"}\r\n                                error={!validatePhoneNumber()}\r\n                                id=\"phoneNumber\"\r\n                                autoComplete=\"tel-national\"\r\n                                onChange={(event) => setPhoneNumber(event.target.value)}\r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Hasło\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                helperText={validatePassword() ? null :\"Hasło powinno zawierać co najmniej 4 znaki\"}\r\n                                error={!validatePassword()}\r\n                                onChange={(event) => setPassword(event.target.value)}\r\n                            />\r\n                        </Grid>\r\n                    </Grid> \r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Zarejestruj\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <CustomLink to=\"/login\" >\r\n                                Masz już konto? Zaloguj się!\r\n                            </CustomLink>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            { auth.isLoggedIn === true ? <Redirect to=\"/\" /> : null }\r\n\r\n        </RegisterWrapper>\r\n    );\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport { AppBar, Cart, ShippingForm, PaymentForm } from 'components';\r\nimport { Middlepane } from 'styles/Middlepane.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './placeOrder.css';\r\nimport { placeOrder } from 'state/cart/cartActions';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nconst PlaceOrder = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [commentText, setCommentText] = React.useState('');\r\n  const steps = ['Koszyk',\r\n    'Dostawa',\r\n    'Płatność',\r\n    'I gotowe!'];\r\n\r\n  const userId = useSelector(state => state.auth.user.id);\r\n  const cart = useSelector(state => state.cart);  \r\n\r\n  const handleNext = () => {\r\n    if(cart.productList.length > 0)\r\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const submitPlaceOrder = () => {\r\n    dispatch(placeOrder({\r\n      userId: userId,\r\n      cart: cart,\r\n      clientComments: commentText,\r\n    }));\r\n    handleNext();\r\n  }\r\n\r\n  const handleNextSuper = () => {\r\n    return (activeStep === 3\r\n      ? submitPlaceOrder()\r\n      : handleNext()\r\n    )\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n\r\n  const getStepContent = (step) => {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <>\r\n            <h3>Twój Koszyk</h3>\r\n            <ShoppingBasketIcon  fontSize=\"large\"/>\r\n            <br /><br />\r\n            <Cart />\r\n            <br /><br />\r\n          </>\r\n        )\r\n      case 1:\r\n        return (\r\n          <>\r\n            <h3>Dostawa</h3>\r\n            <ShippingForm handleNext={handleNext} handleBack={handleBack} />\r\n            <br /><br />\r\n          </>\r\n        );\r\n      case 2:\r\n        return (\r\n          <>\r\n            <h3>Płatność</h3>\r\n            <PaymentForm handleNext={handleNext} handleBack={handleBack} />\r\n            <br /><br />\r\n          </>\r\n        );\r\n      case 3:\r\n        return (\r\n          <>\r\n            <br />\r\n            <textarea name=\"commentText\" id=\"commentText\" placeholder=\"Komentarz do zamówienia\"\r\n              onChange={(event) => setCommentText(event.target.value)} />\r\n            <br />\r\n            <h2>\r\n              Do zapłaty:\r\n              {\" \" + (parseFloat(cart.value) + parseFloat(cart.address.shippingValue)).toFixed(2) + \" zł\"}\r\n            </h2>\r\n          </>\r\n        );\r\n      case 4:\r\n      default:\r\n        return (<Redirect to=\"/\" />);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar />\r\n      <Stepper activeStep={activeStep}\r\n        style={{ backgroundColor: \"gray\" }}>\r\n        {steps.map((label, index) => {\r\n          return (\r\n            <Step key={label} >\r\n              <StepLabel>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <Middlepane>\r\n        {getStepContent(activeStep)}\r\n        {activeStep === 1 || activeStep === 2\r\n          ? null\r\n          : (<div>\r\n            <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n              Back\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleNextSuper}\r\n              className={classes.button}\r\n            >\r\n              {activeStep === steps.length - 1 ? 'Złóż zamówienie' : 'Next'}\r\n            </Button>\r\n          </div>)\r\n        }\r\n      </Middlepane>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaceOrder;","import axios from '../../axios-config.js';\r\n\r\nexport const GET_ALL_CATEGORIES_SUCCESS = 'GET_ALL_CATEGORIES_SUCCESS';\r\nexport const GET_ALL_CATEGORIES_FAILURE = 'GET_ALL_CATEGORIES_FAILURE';\r\n\r\nexport const getAllCategories = () => async dispatch => {\r\n    axios.get('/categories')\r\n        .then(res => {\r\n            dispatch({\r\n                type : GET_ALL_CATEGORIES_SUCCESS,\r\n                payload : res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : GET_ALL_CATEGORIES_FAILURE,\r\n                payload : err.message\r\n            })\r\n        })\r\n}","import { AppBar, ProductList, ProductForm } from 'components';\r\nimport { Middlepane } from 'styles/Middlepane.css';\r\nimport 'styles/verticalBoxes.css';\r\nimport { getAllProducts } from 'state/products/productActions';\r\nimport { getAllCategories } from 'state/categories/categoriesActions';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\n\r\nconst ProductManagement = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect( () => {\r\n        dispatch(getAllProducts());\r\n        dispatch(getAllCategories());\r\n    },[dispatch] )\r\n\r\n    return (\r\n        <>\r\n            <AppBar></AppBar>\r\n            <Middlepane>\r\n                <div className=\"left\">\r\n                    <ProductList/>\r\n                </div>\r\n                <div className=\"right\">\r\n                    <ProductForm/>\r\n                </div>\r\n            </Middlepane>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductManagement;","import { AppBar, PromoList, PromoForm } from 'components'\r\nimport { Middlepane } from 'styles/Middlepane.css';\r\nimport 'styles/verticalBoxes.css';\r\n\r\nconst PromoManagement = () => {\r\n    return (\r\n        <>\r\n            <AppBar/> \r\n            <Middlepane>\r\n                <div className=\"left\">\r\n                    <PromoList/>\r\n                </div>\r\n                <div className=\"right\">\r\n                    <PromoForm/>\r\n                </div>\r\n            </Middlepane>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PromoManagement;","import styled from 'styled-components';\r\n\r\nexport const ContentWrapper = styled.div`\r\n    display: flex;\r\n    background-color: rgba(255,255,255,0.35);\r\n`\r\n\r\nexport const MidContentWrapper = styled.div`\r\n    padding: 10px;\r\n`;\r\n\r\nexport const ContentLeft = styled.div`\r\n    width: 28%;\r\n    float: left;\r\n    border-right: 2px solid darkgray;\r\n`\r\nexport const ContentMid = styled.div`\r\n    float: left;\r\n    width: 44%;\r\n`\r\n\r\nexport const ContentRight = styled.div`\r\n    float: left;\r\n    width: 28%;\r\n    flex-grow:1;\r\n    border-left: 2px solid darkgray;\r\n`\r\n\r\n\r\nexport const Paragraph = styled.p`\r\n    color: rgba(255,255,255,.75);\r\n    font-size: 200%;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    font-family: 'Anonymous Pro', monospace;\r\n`;","import React  from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppBar, PaymentStatus, OrderAddressDetails, OrderProductList } from 'components';\r\nimport { Middlepane } from 'styles/Middlepane.css';\r\nimport { ContentWrapper, ContentLeft, ContentMid, ContentRight, Paragraph, MidContentWrapper } from './orderDetails.css';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst OrderDetails = () => {\r\n    const { id } = useParams();\r\n    \r\n    const auth = useSelector(state => state.auth);\r\n    const order = useSelector(state => \r\n        state.orders.find(order => \r\n            parseInt(order.order_id) === parseInt(id)\r\n        )\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <AppBar></AppBar>\r\n            <Middlepane>\r\n\r\n                <Paragraph>{order.title}</Paragraph>\r\n                <hr/>\r\n                <br/>\r\n                <ContentWrapper>\r\n                    <ContentLeft>\r\n                        <OrderAddressDetails orderData={order}/>\r\n                    </ContentLeft>\r\n                    <ContentMid>\r\n                        <MidContentWrapper>\r\n                        <h3>Kupione produkty</h3>\r\n                        <hr/>\r\n                        <br/>\r\n                        <OrderProductList productList={order.productList} auth={auth.isAdmin} fulfilmentDate={order.dateFulfillment}/>\r\n                        <br/>\r\n                        <hr/>\r\n                        <h2>\r\n                        Przesyłka:\r\n                        {\" \" + (parseFloat(order.shippmentPrice)).toFixed(2) + \" zł\"}\r\n                        </h2>\r\n                        <h2>\r\n                        Produkty:\r\n                        {\" \" + (parseFloat(order.productsCost)).toFixed(2) + \" zł\"}\r\n                        </h2>\r\n                        <hr/>\r\n                        <br/>\r\n                        <h2>\r\n                        Suma:\r\n                        {\" \" + (parseFloat(order.productsCost) + parseFloat(order.shippmentPrice)).toFixed(2) + \" zł\"}\r\n                        </h2>\r\n                        <br/>\r\n                        <hr/>\r\n                        </MidContentWrapper>\r\n                    </ContentMid> \r\n                    <ContentRight>\r\n                        <PaymentStatus orderId={id} auth={auth.isAdmin}/>\r\n                    </ContentRight>\r\n                </ContentWrapper>\r\n            </Middlepane>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OrderDetails;","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { AppBar,  \r\n    ProductsInServiceList,\r\n    ProductInServiceForm } from 'components';\r\nimport { Middlepane } from 'styles/Middlepane.css';\r\n\r\nimport { getProductsInService } from 'state/productsService/productsServiceActions';\r\n\r\nconst ServiceManagement = () => {\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect( () => {\r\n        dispatch(getProductsInService());\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <AppBar/> \r\n            <Middlepane>\r\n                <ProductsInServiceList/>\r\n                <ProductInServiceForm/>\r\n            </Middlepane>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ServiceManagement;","import axios from '../../axios-config.js';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { Middlepane } from 'styles/Middlepane.css';\r\nimport { AppBar} from 'components';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Paragraph = styled.p`\r\n    font-size: 3em;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst Box = styled.div`\r\n    padding: 1em;\r\n    position: relative;\r\n\r\n    &:before {\r\n    \tcontent: '';\r\n\t\tposition: absolute;\r\n\t\tbottom: 0; left: 0;\r\n\t\twidth: 0;\r\n    }\r\n\r\n    &:after {\r\n    \tcontent: '';\r\n\t\tposition: absolute;\r\n\t\ttop: 0; right: 0;\r\n\t\twidth: 0;\r\n    }\r\n`;\r\n\r\nconst IncomeBox = styled(Box)`\r\n    background-color: green;\r\n\r\n    &:before {\r\n\t\tborder-bottom: 70px solid rgb(32, 32, 32);\r\n\t\tborder-right: 70px solid green;\r\n    }\r\n\r\n    &:after {\r\n\t\tborder-right: 70px solid rgb(32, 32, 32);\r\n\t\tborder-bottom: 70px solid green;\r\n    }\r\n`;\r\n\r\nconst OutcomeBox = styled(Box)`\r\n    background-color: red;\r\n\r\n    &:before {\r\n\t\tborder-bottom: 70px solid rgb(32, 32, 32);\r\n\t\tborder-right: 70px solid red;\r\n    }\r\n\r\n    &:after {\r\n\t\tborder-right: 70px solid rgb(32, 32, 32);\r\n\t\tborder-bottom: 70px solid red;\r\n    }\r\n`;\r\n\r\nconst BalanceeBox = styled(Box)`\r\n    background-color: rgba(255,255,255,0.2);\r\n\r\n    &:before {\r\n\t\tborder-bottom: 70px solid rgb(32, 32, 32);\r\n\t\tborder-right: 70px solid rgba(255,255,255,0.2);\r\n    }\r\n\r\n    &:after {\r\n\t\tborder-right: 70px solid rgb(32, 32, 32);\r\n\t\tborder-bottom: 70px solid rgba(255,255,255,0.2);\r\n    }\r\n`;\r\n\r\n\r\nconst Finances = () => {\r\n    const [balance, setBalance] = useState({});\r\n\r\n    useEffect( () => {\r\n        axios.get('/orders/shop/balance')\r\n        .then(res => {\r\n            setBalance(res.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <>\r\n            <AppBar></AppBar>\r\n            <Middlepane>\r\n                \r\n                <Paragraph>saldo sklepu</Paragraph>\r\n                <hr/>\r\n                <IncomeBox>\r\n                    <h1>Przychody: {balance.income} zł</h1>\r\n                    <h1>Liczba transakcji: {balance.incomeCount}</h1>\r\n                </IncomeBox>\r\n                <hr/>\r\n                <OutcomeBox>\r\n                    <h1>Wydatki: {balance.outcome} zł</h1>\r\n                    <h1>Liczba transakcji: {balance.outcomeCount}</h1>\r\n                </OutcomeBox>\r\n                <hr/>\r\n                <BalanceeBox>\r\n                    <h1>Saldo: {(parseFloat(balance.income) + parseFloat(balance.outcome)).toFixed(2)} zł</h1>\r\n                    <h1>Wszystkich transakcji: {parseInt(balance.incomeCount) + parseInt(balance.outcomeCount)}</h1>\r\n                </BalanceeBox>\r\n                \r\n            </Middlepane>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Finances;\r\n","import React, { useEffect } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { GlobalStyles } from './global';\nimport { theme } from './theme';\nimport {  Home, \n          Offer,\n          Login,\n          Register,\n          Promo,\n          ProductDetails,\n          Account,\n          Orders,\n          Cart,\n          ProductManagement,\n          PromoManagement,\n          OrderDetails,\n          ServiceManagement,\n          Finances } from './pages';\n\nimport { ProtectedRoute } from './components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getPromos } from './state/promo/promoActions';\nimport { getRecommendedProducts } from './state/products/productActions';\nimport { getAllCategories } from './state/categories/categoriesActions';\nimport './index.css';\n\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nconst App = () => {\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n      dispatch(getPromos());\n      dispatch(getRecommendedProducts());\n      dispatch(getAllCategories());\n  },[dispatch]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/login\" exact component={Login} />\n          <Route path=\"/register\" exact component={Register} />\n          <Route path=\"/offer/:categoryId\" exact component={Offer} />\n          <Route path=\"/promo/:promoId\" exact component={Promo} />\n          <Route path=\"/product/:productId\" exact component={ProductDetails} />\n          \n          <ProtectedRoute \n                          path=\"/cart\" \n                          exact\n                          component={Cart} \n                          auth={auth.isLoggedIn}\n          />\n          <ProtectedRoute \n                          path=\"/account\" \n                          exact\n                          component={Account} \n                          auth={auth.isLoggedIn}\n          />\n          <ProtectedRoute \n                          path=\"/orders\" \n                          exact\n                          component={Orders} \n                          auth={auth.isLoggedIn}\n          />\n          <ProtectedRoute \n                          path=\"/products\" \n                          exact\n                          component={ProductManagement} \n                          auth={auth.isAdmin}\n          />\n          <ProtectedRoute \n                          path=\"/management/promo\" \n                          exact\n                          component={PromoManagement} \n                          auth={auth.isAdmin}\n          />\n          <ProtectedRoute \n                          path=\"/service\" \n                          exact\n                          component={ServiceManagement} \n                          auth={auth.isAdmin}\n          />\n          <ProtectedRoute \n                          path=\"/finaces\" \n                          exact\n                          component={Finances} \n                          auth={auth.isAdmin}\n          />\n          <ProtectedRoute \n                          path=\"/order/details/:id\" \n                          exact\n                          component={OrderDetails} \n                          auth={auth.isLoggedIn}\n          />\n        </Switch>\n      </Router>\n      <GlobalStyles />\n    </ThemeProvider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    GET_ALL_PRODUCTS_SUCCESS,\r\n    GET_PROMO_PRODUCTS_SUCCESS,\r\n    GET_RECOMMENDED_PRODUCTS_SUCCESS,\r\n    GET_PRODUCT_SUCCESS,\r\n    GET_CATEGORY_PRODUCTS_SUCCESS,\r\n    GET_PROMO_PRODUCTS_FAILURE,\r\n    SET_TO_EDIT_PRODUCT,\r\n    CREATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_STORAGE_SUCCESS\r\n} from './productActions'; \r\n\r\n\r\nconst initialState = {\r\n    recommended : [],\r\n    promoProducts : [],\r\n    categoryProducts : [],\r\n    productDetails : {},\r\n    allProducts : [],\r\n    currentlyEdited : {}\r\n}\r\n\r\nconst productReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_STORAGE_SUCCESS : {\r\n            const updatedProduct = action.payload;\r\n            \r\n            state.allProducts.forEach(prod => \r\n                prod.id === updatedProduct.id \r\n                ? prod.quantity += updatedProduct.quantity \r\n                : null\r\n            )\r\n\r\n            return {\r\n                ...state,\r\n                currentlyEdited : {}\r\n            }\r\n        }\r\n        case UPDATE_PRODUCT_SUCCESS : {\r\n            const updatedProduct = action.payload;\r\n            const reducedPromoList = state.allProducts.filter(\r\n                prod => prod.id !== updatedProduct[0].id \r\n            );\r\n            \r\n            return {\r\n                ...state,\r\n                allProducts: [...reducedPromoList, ...updatedProduct],\r\n                currentlyEdited : {}\r\n            }\r\n        }\r\n        case CREATE_PRODUCT_SUCCESS : {\r\n            const product = action.payload;\r\n            return {\r\n                ...state,\r\n                allProducts: [...state.allProducts, ...product],\r\n            }\r\n        }\r\n        case SET_TO_EDIT_PRODUCT: {\r\n            return {\r\n                ...state,\r\n                currentlyEdited : action.payload\r\n            }\r\n        }\r\n        case GET_ALL_PRODUCTS_SUCCESS: {\r\n            const productList = action.payload;\r\n      \r\n            return {\r\n              ...state,\r\n              allProducts: productList,\r\n            }\r\n        }\r\n        case GET_RECOMMENDED_PRODUCTS_SUCCESS: {\r\n            const recommended = action.payload.recommended;\r\n\r\n            return {\r\n              ...state,\r\n              recommended: recommended,\r\n            }\r\n        }\r\n        case GET_PROMO_PRODUCTS_SUCCESS: {\r\n            const promoProducts = action.payload.promoProducts;\r\n\r\n            return {\r\n                ...state,\r\n                promoProducts: promoProducts,\r\n            }\r\n        }\r\n        case GET_PRODUCT_SUCCESS: {\r\n            const productDetails = action.payload.productDetails;\r\n\r\n            return {\r\n                ...state,\r\n                productDetails: productDetails[0],\r\n            }\r\n        }\r\n        case GET_CATEGORY_PRODUCTS_SUCCESS: {\r\n            const categoryProducts = action.payload.categoryProducts;\r\n            \r\n            return {\r\n                ...state,\r\n                categoryProducts : categoryProducts,\r\n            }\r\n        }\r\n        case GET_PROMO_PRODUCTS_FAILURE : {\r\n            return {\r\n                ...state,\r\n                promoProducts : [],\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default productReducer;","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILURE,\r\n    LOGOUT_REQUEST,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAILURE,\r\n    USER_ACCOUNT_UPDATE_SUCCESS,\r\n    CLEAR_NOTIFICATION\r\n} from './authActions';  \r\n\r\nconst initialState = {\r\n    user : JSON.parse(localStorage.getItem('user')) || null,\r\n    isAdmin : localStorage.getItem('isAdmin') === 'true' || false, \r\n    isLoggedIn : localStorage.getItem('isLoggedIn') === 'true' || false,\r\n    notification : null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case CLEAR_NOTIFICATION: {\r\n            return {\r\n                ...state,\r\n                notification: null,\r\n            }\r\n        }\r\n        case REGISTER_SUCCESS: {\r\n            const user = action.payload;\r\n\r\n            // update localStorage\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            localStorage.setItem('isAdmin', false);\r\n            localStorage.setItem('isLoggedIn', true);\r\n\r\n            return {\r\n                ...state,\r\n                user,\r\n                isAdmin : false,\r\n                isLoggedIn : true\r\n            }\r\n        }\r\n        case LOGIN_SUCCESS: {\r\n            const { id, isAdmin, name, surname, phoneNumber } = action.payload;\r\n            const user = { id, name, surname, phoneNumber };\r\n\r\n            // update localStorage\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            localStorage.setItem('isAdmin', isAdmin);\r\n            localStorage.setItem('isLoggedIn', true);\r\n\r\n            return {\r\n                ...state,\r\n                user,\r\n                isAdmin : isAdmin,\r\n                isLoggedIn : true\r\n            }\r\n        }\r\n        case USER_ACCOUNT_UPDATE_SUCCESS: {\r\n            const { id, name, surname, phoneNumber } = action.payload;\r\n            const user = { id, name, surname, phoneNumber };\r\n\r\n            // update localStorage\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            localStorage.setItem('isLoggedIn', true);\r\n\r\n            return {\r\n                ...state,\r\n                user\r\n            }\r\n        }\r\n        case LOGIN_FAILURE:\r\n        case REGISTER_FAILURE:\r\n        case LOGOUT_REQUEST: {\r\n            localStorage.clear();\r\n\r\n            return {\r\n                ...state,\r\n                user : null,\r\n                isAdmin : false,\r\n                isLoggedIn : false,\r\n                notification : action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {\r\n    GET_PROMO_SUCCESS,\r\n    CREATE_PROMO_SUCCESS,\r\n    GET_PROMO_FAILURE,\r\n    SET_TO_EDIT_PROMO,\r\n    EDIT_PROMO_SUCCESS,\r\n    DELETE_PROMO_SUCCESS\r\n} from './promoActions';\r\n\r\nconst initialState = {\r\n    promosList : [],\r\n    currentlyEdited: {}\r\n}\r\n\r\nconst promosReducer = ( state=initialState, action ) => {\r\n    switch(action.type) {\r\n        case DELETE_PROMO_SUCCESS: {\r\n            const promoId = action.payload;\r\n            const reducedPromoList = state.promosList.filter(promo => promo.id !== promoId);\r\n\r\n            return {\r\n                ...state,\r\n                promosList : reducedPromoList,\r\n                currentlyEdited : {}\r\n            }\r\n        }\r\n        case EDIT_PROMO_SUCCESS: {\r\n            const updatedPromo = action.payload;\r\n\r\n            const reducedPromoList = state.promosList.filter(promo => promo.id !== updatedPromo.id);\r\n\r\n            return {\r\n                ...state,\r\n                promosList : [...reducedPromoList, updatedPromo],\r\n                currentlyEdited : {}\r\n            }\r\n        }\r\n        case SET_TO_EDIT_PROMO: {\r\n            return {\r\n                ...state,\r\n                currentlyEdited: action.payload\r\n            }\r\n        }\r\n        case CREATE_PROMO_SUCCESS: {\r\n            const promo = action.payload;\r\n            return {\r\n                ...state,\r\n                promosList: [...state.promosList, ...promo],\r\n            }\r\n        }\r\n        case GET_PROMO_SUCCESS: {\r\n            const promos = action.payload.promos;\r\n            \r\n            return {\r\n                ...state,\r\n                promosList: promos,\r\n            }\r\n        }\r\n        case GET_PROMO_FAILURE: {\r\n            return {\r\n                promosList : []\r\n            }\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default promosReducer;","import {\r\n    ADD_PRODUCT_TO_CART,\r\n    REMOVE_PRODUCT_FROM_CART,\r\n    REDUCE_PRODUCT_QUANTITY_FROM_CART,\r\n    CLEAR_CART,\r\n    ADD_ADDRESS,\r\n    ADD_PAYMENT_METHOD,\r\n    PLACE_ORDER_SUCCESS,\r\n    GET_USER_ADDRESSES_SUCCESS\r\n} from './cartActions'; \r\n\r\n\r\nconst initialState = {\r\n    productList : JSON.parse(localStorage.getItem('cart')) || [],\r\n    value : parseFloat( localStorage.getItem('value') || 0.0 ).toFixed(2),\r\n    address : {\r\n        addressId: null,\r\n        country: null,\r\n        postcode: null, \r\n        city: null, \r\n        street: null, \r\n        building: null, \r\n        apartment: null,\r\n        shippingMethod: null, \r\n        shippingValue: 0,\r\n    },\r\n    userAddresses : [],\r\n    clientComments : '',\r\n    payment : {}\r\n}\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case GET_USER_ADDRESSES_SUCCESS : {\r\n            return {\r\n                ...state,\r\n                userAddresses : action.payload\r\n            }\r\n        }\r\n        case CLEAR_CART :\r\n        case PLACE_ORDER_SUCCESS: {\r\n            localStorage.removeItem('cart');\r\n            localStorage.removeItem('value');\r\n            \r\n            return {\r\n                productList : [],\r\n                value : 0.0,\r\n                address : {\r\n                    addressId: null,\r\n                    country: null,\r\n                    postcode: null, \r\n                    city: null, \r\n                    street: null, \r\n                    building: null, \r\n                    apartment: null,\r\n                    shippingMethod: null, \r\n                    shippingValue: 0,\r\n                },\r\n                userAddresses : [],\r\n                clientComments : '',\r\n                payment : {}\r\n            }\r\n        }\r\n        case ADD_PAYMENT_METHOD: {\r\n            const method = action.payload;\r\n            return {\r\n                ...state,\r\n                payment: method,\r\n            }\r\n        }\r\n        case ADD_ADDRESS: {\r\n            const { addressId, country, postcode, city, street, building, apartment, shippingMethod, shippingValue } = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                address : {\r\n                    addressId: addressId,\r\n                    country: country,\r\n                    postcode: postcode, \r\n                    city: city, \r\n                    street: street, \r\n                    building: building, \r\n                    apartment: apartment,\r\n                    shippingMethod: shippingMethod, \r\n                    shippingValue: shippingValue,\r\n                },\r\n            }\r\n        }\r\n        case ADD_PRODUCT_TO_CART: {\r\n            const {  productId, productName, price } = action.payload;\r\n\r\n            \r\n            let cartProduct = state.productList.filter( \r\n                product => product.id === productId\r\n            );\r\n            \r\n            if(cartProduct.length !== 0){\r\n                cartProduct[0].quantity++;\r\n            }else{                \r\n                cartProduct = [{\r\n                    id: productId,\r\n                    name: productName,\r\n                    price: parseFloat(price).toFixed(2),\r\n                    quantity: 1\r\n                }]\r\n            }\r\n\r\n            const updatedProductList = [...state.productList.filter( \r\n                product => product.id !== productId\r\n            ), cartProduct[0]];\r\n            \r\n            \r\n            const cartValue = updatedProductList.reduce(\r\n                (val, product) => product.price * product.quantity + val, 0.0);\r\n\r\n            // update localStorage\r\n            localStorage.setItem('cart', JSON.stringify(updatedProductList));\r\n            localStorage.setItem('value', parseFloat(cartValue).toFixed(2));\r\n\r\n            return {\r\n                ...state,\r\n                productList: updatedProductList,\r\n                value: parseFloat(cartValue).toFixed(2),\r\n            }\r\n        }\r\n        case REDUCE_PRODUCT_QUANTITY_FROM_CART: {\r\n            const { productId } = action.payload;\r\n            \r\n            let cartProduct = state.productList.filter( \r\n                product => product.id === productId\r\n            );\r\n            \r\n            if(cartProduct.length === 0){\r\n                console.log(\"cannot reduce quantity of not existing product\");\r\n                return state;\r\n            }\r\n\r\n            cartProduct[0].quantity--;\r\n            let updatedProductList = [...state.productList.filter( \r\n                product => product.id !== productId\r\n            )];\r\n\r\n            if(cartProduct[0].quantity !== 0){\r\n                updatedProductList = [...updatedProductList, cartProduct[0]];\r\n            }\r\n\r\n            const cartValue = updatedProductList.reduce(\r\n                (val, product) => product.price * product.quantity + val, 0.0);\r\n\r\n            // update localStorage\r\n            localStorage.setItem('cart', JSON.stringify(updatedProductList));\r\n            localStorage.setItem('value', parseFloat(cartValue).toFixed(2));\r\n\r\n            return {\r\n                ...state,\r\n                productList: updatedProductList,\r\n                value: parseFloat(cartValue).toFixed(2),\r\n            }\r\n        }case REMOVE_PRODUCT_FROM_CART: {\r\n            const { productId } = action.payload;\r\n            \r\n            const updatedProductList = state.productList.filter( \r\n                product => product.id !== productId\r\n            );\r\n            const cartValue = updatedProductList.reduce(\r\n                (val, product) => product.price * product.quantity + val, 0.0);\r\n\r\n            // update localStorage\r\n            localStorage.setItem('cart', JSON.stringify(updatedProductList));\r\n            localStorage.setItem('value', parseFloat(cartValue).toFixed(2));\r\n            \r\n            return {\r\n                ...state,\r\n                productList: updatedProductList,\r\n                value: parseFloat(cartValue).toFixed(2),\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cartReducer;","import {\r\n    CREATE_COMMENT_SUCCES,\r\n    GET_COMMENTS_SUCCES\r\n} from './commentsActions';\r\n\r\n\r\nconst initialState = []\r\n\r\nconst commentsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case GET_COMMENTS_SUCCES : {\r\n            return action.payload;\r\n        }case CREATE_COMMENT_SUCCES : {\r\n            const comment = action.payload;\r\n            return [...state, ...comment];\r\n        }default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default commentsReducer;","import { \r\n    GET_ALL_ORDERS_DETAILS_SUCCES,\r\n    GET_ORDERS_DETAILS_SUCCES,\r\n    UPDATE_PAYMENT_STATUS_SUCCESS,\r\n    UPDATE_ORDER_STATUS_SUCCESS\r\n} from './ordersActions';\r\n\r\nconst initialState = []\r\n\r\nconst ordersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_ORDER_STATUS_SUCCESS: {\r\n            const {status, orderId} = action.payload;\r\n            alert(\"Order status updated successfully!\");\r\n            const currentState = state.filter(order => parseInt(order.order_id) !== parseInt(orderId));\r\n            let updated = state.find(order => parseInt(order.order_id) === parseInt(orderId));\r\n            updated.orderStatus = status;\r\n\r\n            return [...currentState, updated];\r\n        }\r\n        case UPDATE_PAYMENT_STATUS_SUCCESS: {\r\n            const {isPaid, orderId} = action.payload;\r\n            alert(\"Payment status updated successfully!\");\r\n            \r\n            const currentState = state.filter(order => parseInt(order.order_id) !== parseInt(orderId));\r\n            let updated = state.find(order => parseInt(order.order_id) === parseInt(orderId));\r\n            updated.isPaid = isPaid;\r\n\r\n            return [...currentState, updated];\r\n        }\r\n        case GET_ALL_ORDERS_DETAILS_SUCCES :\r\n        case GET_ORDERS_DETAILS_SUCCES : {\r\n            return action.payload\r\n        }default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ordersReducer;","import {\r\n    GET_ALL_CATEGORIES_SUCCESS\r\n} from './categoriesActions';\r\n\r\nconst initialState = {\r\n    categoriesList : []\r\n}\r\n\r\n\r\nconst categoriesReducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case GET_ALL_CATEGORIES_SUCCESS:{\r\n            return {\r\n                ...state,\r\n                categoriesList : action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default categoriesReducer;","import {\r\n    GET_PRODUCTS_IN_SERVICE_SUCCESS,\r\n    ADD_PRODUCT_TO_SERVICE_SUCCESS,\r\n    PRODUCT_IN_SERVICE_STATUS_UPDATE_SUCCESS,\r\n    SET_TO_EDIT_PRODUCT_IN_SERVICE\r\n} from './productsServiceActions';\r\n\r\n\r\nconst initialState = {\r\n    productList : [],\r\n    currentlyEdit : {}\r\n}\r\n\r\nconst productsInServiceReducer = ( state=initialState, action ) => {\r\n    switch(action.type) {\r\n        case SET_TO_EDIT_PRODUCT_IN_SERVICE : {\r\n            return {\r\n                ...state,\r\n                currentlyEdit : action.payload\r\n            }\r\n        }\r\n        case GET_PRODUCTS_IN_SERVICE_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                productList : action.payload\r\n            }\r\n        }        \r\n        case ADD_PRODUCT_TO_SERVICE_SUCCESS: {\r\n            alert(\"Produkt dodany do serwisu. Sprawdź zakładkę 'zarządzaj serwisem'.\")\r\n            const added = action.payload;\r\n            return {\r\n                ...state, \r\n                productList : [...state.productList, ...added]\r\n            };\r\n        }\r\n        case PRODUCT_IN_SERVICE_STATUS_UPDATE_SUCCESS: {\r\n            alert(\"Zmieniono status produktu w serwisie.\")\r\n            const updated = action.payload;\r\n            const reducedState = state.productList.filter(product => product.id !== updated[0].id);\r\n\r\n            return {\r\n                ...state,\r\n                productList : [...reducedState, ...updated]\r\n            };\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default productsInServiceReducer;","import { combineReducers } from 'redux';\r\n\r\nimport productReducer from './products/productReducer';\r\nimport authReducer from './auth/authReducer';\r\nimport promosReducer from './promo/promoReducer';\r\nimport cartReducer from './cart/cartReducer';\r\nimport commentsReducer from  './comments/commentsReducer';\r\nimport ordersReducer from './orders/ordersReducer';\r\nimport categoriesReducer from './categories/categoriesReducer';\r\nimport productsInServiceReducer from './productsService/productsServiceReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    products: productReducer,\r\n    promos: promosReducer,\r\n    auth: authReducer,\r\n    cart: cartReducer,\r\n    comments: commentsReducer,\r\n    orders: ordersReducer,\r\n    categories: categoriesReducer,\r\n    productsInService : productsInServiceReducer\r\n});\r\n\r\nexport default rootReducer;","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","export default __webpack_public_path__ + \"static/media/Cyberpunk.ce09ddf4.ttf\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport store from './state/store';\n\nimport { SnackbarProvider } from 'notistack';\nimport 'font/Cyberpunk.ttf';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        <SnackbarProvider>\n          <App />\n        </SnackbarProvider>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}