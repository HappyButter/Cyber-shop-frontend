{"version":3,"sources":["styles/Middlepane.css.js","axios-config.js","state/cart/cartActions.js","state/products/productActions.js","global.js","theme.js","App.js","serviceWorker.js","state/products/productReducer.js","state/auth/authReducer.js","state/promo/promoReducer.js","state/cart/cartReducer.js","state/comments/commentsReducer.js","state/orders/ordersReducer.js","state/categories/categoriesReducer.js","state/productsService/productsServiceReducer.js","state/rootReducer.js","state/store.js","font/Cyberpunk.ttf","index.js","state/promo/promoActions.js","state/productsService/productsServiceActions.js","components/AppBar/AppBar.js","components/AdsCarousel/adsCarousel.css.js","components/AdsCarousel/AdsCarousel.js","components/ProtectedRoute/ProtectedRoute.js","components/ProductsGrid/productGrid.css.js","components/ProductsGrid/productItem.css.js","components/ProductsGrid/ProductItem.js","components/ProductsGrid/ProductGrid.js","components/Comments/commentItem.css.js","components/Comments/CommentItem.js","components/Comments/CommentForm.js","components/Comments/comments.css.js","components/Comments/Comments.js","components/Cart/ControllQuantity.js","components/Cart/Cart.js","components/ShippingForm/shippingForm.css.js","components/ShippingForm/ShippingForm.js","components/PaymentForm/paymentForm.css.js","components/PaymentForm/PaymentForm.js","components/OrderList/OrderListRow.js","components/OrderList/OrderList.js","components/PromoList/PromoListRow.js","components/PromoList/PromoList.js","components/PromoForm/AddPromoForm.js","components/PromoForm/EditPromoForm.js","components/PromoForm/PromoForm.js","components/ProductList/ProductListRow.js","components/ProductList/ProductList.js","components/ProductForm/AddProductForm.js","components/ProductForm/EditProductDetailsForm.js","components/ProductForm/ReduceStorageForm.js","components/ProductForm/ProductForm.js","components/PaymentStatus/paymentStatus.css.js","components/PaymentStatus/PaymentStatus.js","components/OrderAddressDetails/orderAddressDetails.css.js","components/OrderAddressDetails/OrderAddressDetails.js","components/OrderProductList/OrderProductListRow.js","components/OrderProductList/orderProductList.css.js","components/OrderProductList/OrderProductList.js","components/ProductsInServiceList/ProductsInServiceRow.js","components/ProductsInServiceList/ProductsInServiceList.js","components/ProductInServiceForm/ProductInServiceForm.js","state/auth/authActions.js","state/orders/ordersActions.js","state/comments/commentsActions.js","state/categories/categoriesActions.js"],"names":["Middlepane","styled","div","MiddlepaneOffer","instance","axios","create","baseURL","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_FROM_CART","REDUCE_PRODUCT_QUANTITY_FROM_CART","ADD_ADDRESS","ADD_PAYMENT_METHOD","GET_USER_ADDRESSES_SUCCESS","CLEAR_CART","PLACE_ORDER_SUCCESS","getUserAddresses","userId","dispatch","a","get","then","res","type","payload","data","catch","err","message","placeOrder","cart","clientComments","enqueueSnackbar","body","shippmentMethod","address","shippingMethod","shippmentPrice","shippingValue","addressId","country","postcode","city","street","building","apartment","productsCost","value","paymentMethod","payment","productList","post","variant","addPaymentMethod","addAdress","clearCart","addProductToCart","productId","productName","price","removeProductFromCart","reduceProductQuantityFromCart","CREATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_SUCCESS","UPDATE_STORAGE_SUCCESS","GET_ALL_PRODUCTS_SUCCESS","GET_PRODUCT_SUCCESS","GET_RECOMMENDED_PRODUCTS_SUCCESS","GET_PROMO_PRODUCTS_SUCCESS","GET_PROMO_PRODUCTS_FAILURE","GET_CATEGORY_PRODUCTS_SUCCESS","SET_TO_EDIT_PRODUCT","setToEditProduct","product","updateStorage","updateData","put","title","id","quantity","updateProduct","productData","name","description","profitMargin","producer","warranty","promo_id","category_id","createProduct","getProductDetails","productDetails","console","log","getAllProducts","getPromoProducts","promoId","promoProducts","getRecommendedProducts","recommended","getProductsByCategoryId","categoryId","categoryProducts","GlobalStyles","createGlobalStyle","theme","primaryDark","primaryLight","primaryHover","mobile","Home","lazy","Offer","Login","Register","Promo","ProductDetails","Account","Orders","PlaceOrder","ProductManagement","PromoManagement","OrderDetails","ServiceManagement","Finances","App","auth","useSelector","state","useDispatch","useEffect","getPromos","getAllCategories","Loading","Skeleton","animation","height","basename","process","className","fallback","path","exact","component","isLoggedIn","isAdmin","Boolean","window","location","hostname","match","initialState","allProducts","currentlyEdited","productReducer","action","updatedProduct","forEach","prod","reducedPromoList","filter","user","JSON","parse","localStorage","getItem","authReducer","REGISTER_SUCCESS","setItem","stringify","LOGIN_SUCCESS","surname","phoneNumber","USER_ACCOUNT_UPDATE_SUCCESS","LOGIN_FAILURE","REGISTER_FAILURE","LOGOUT_REQUEST","clear","promosList","promosReducer","DELETE_PROMO_SUCCESS","promo","EDIT_PROMO_SUCCESS","updatedPromo","SET_TO_EDIT_PROMO","CREATE_PROMO_SUCCESS","GET_PROMO_SUCCESS","promos","GET_PROMO_FAILURE","parseFloat","toFixed","userAddresses","cartReducer","removeItem","method","cartProduct","length","updatedProductList","cartValue","reduce","val","commentsReducer","GET_COMMENTS_SUCCES","CREATE_COMMENT_SUCCES","comment","ordersReducer","UPDATE_ORDER_STATUS_SUCCESS","status","orderId","currentState","order","parseInt","order_id","updated","find","orderStatus","UPDATE_PAYMENT_STATUS_SUCCESS","isPaid","GET_ALL_ORDERS_DETAILS_SUCCES","GET_ORDERS_DETAILS_SUCCES","categoriesList","categoriesReducer","GET_ALL_CATEGORIES_SUCCESS","currentlyEdit","productsInServiceReducer","SET_TO_EDIT_PRODUCT_IN_SERVICE","GET_PRODUCTS_IN_SERVICE_SUCCESS","ADD_PRODUCT_TO_SERVICE_SUCCESS","added","PRODUCT_IN_SERVICE_STATUS_UPDATE_SUCCESS","reducedState","rootReducer","combineReducers","products","comments","orders","categories","productsInService","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","anchorOrigin","vertical","horizontal","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","deletePromo","delete","editPromo","discountValue","discount","setToEditionPromo","createPromo","setToEditProductInService","getProductsInService","addProductToService","orderLineId","updateProductStatusInService","serviceId","useStyles","makeStyles","grow","flexGrow","root","background","color","menuButton","marginLeft","spacing","marginRight","fontFamily","fontSize","fontWeight","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","width","breakpoints","up","searchIcon","padding","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","sectionDesktop","maxWidth","flexDirection","categoriesDesktop","categoriesTitle","join","withRouter","props","history","classes","React","useState","anchorEl","setAnchorEl","isMenuOpen","count","useSnackbar","desktop","useMediaQuery","handleProfileMenuClick","e","pageRoute","preventDefault","push","menuId","menuUserLoggedIn","Menu","keepMounted","transformOrigin","open","onClose","style","MenuItem","onClick","logout","handleLogout","menuUserLoggedOut","AppBar","Toolbar","IconButton","edge","Typography","noWrap","aria-label","Badge","badgeContent","aria-controls","aria-haspopup","event","currentTarget","align","Box","CarouselWrapper","CarouselLink","Link","Carousel","items","map","to","onDragStart","animationType","animationDuration","disableButtonsControls","infinite","mouseTracking","autoPlay","autoPlayInterval","ProtectedRoute","Component","rest","GridContainer","GridElement","CustomLink","Btn","ProductItem","productInfo","productIcon","Number","promo_price","mb","borderColor","Rating","rating","readOnly","precision","ProductGrid","productsInfo","item","Span","span","CommentItem","commentData","nick","stars","CommentForm","userName","setNick","commentText","setCommentText","rate","setRate","onSubmit","createCommentToProduct","authorId","htmlFor","placeholder","required","onChange","target","newValue","CommentsWrapper","Comments","getCommentsToProduct","sort","b","commentsList","ControllQuantity","setCount","columns","minWidth","label","container","head","Cart","cartItems","handleCellType","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","colSpan","ShippingWrapper","Container","paper","marginTop","marginBottom","avatar","margin","secondary","main","form","shippingMethods","ShippingForm","handleNext","handleBack","setAddressId","setCountry","setCity","setPostcode","setStreet","setBuilding","setApartment","setShippingMethod","setShippingValue","isCountryValid","setIsCountryValid","isPostcodeValid","setIsPostcodeValid","isCityValid","setIsCityValid","isStreetValid","setIsStreetValid","currentAddressState","validateCountry","test","validatePostCode","validateStreet","validate","alert","Grid","xs","InputLabel","Select","labelId","fullWidth","ad","handleExistingAddressSelect","sm","TextField","autoComplete","onBlur","helperText","record","handleShippingChange","Button","button","PaymentWrapper","PaymentForm","setPaymentMethod","currentPaymentState","useRowStyles","borderBottom","Row","rowData","setOpen","datePlaced","split","Fragment","hover","size","scope","email","address_id","paddingBottom","paddingTop","Collapse","in","timeout","unmountOnExit","gutterBottom","pricePerItem","OrderList","promoData","setEditFormOpen","table","PromoList","AddPromoForm","setTitle","setDescription","setDiscountValue","class","EditPromoForm","promoEdit","handleEdit","handleDelete","PromoForm","editFormOpen","ButtonGroup","disableElevation","setDetailsFromOpen","inStock","category_group","ProductList","AddProductForm","setName","setPrice","setProfitMargin","setProducer","setWarranty","setPromo_id","setCategory_id","cat","category_name","EditProductDetailsForm","productEdit","profit_margin","ReduceStorageForm","setQuantity","ProductForm","detailsFormOpen","EditBtn","PaymentStatusWrapper","orderStatusList","key","PaymentStatus","setIsPaid","setOrderStatus","currentlyWatched","orderStatusKeyToValue","stat","handlePaymentSubmit","updatePaymentStatus","handleStatus","updateOrderStatus","disabled","DetailsWrapper","OrderAddressDetails","orderData","userSurname","postCode","dateFulfillment","fulfilmentDate","ProductListWrapper","OrderProductList","orderTitle","ProductsInServiceList","ProductInServiceForm","setStatus","serviceEdit","submitRegister","password","login","updateAccountData","paymentStatus","getAllOrders","getUserOrders","GET_COMMENTS_FAILURE"],"mappings":"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","file":"static/js/main.9de23cba.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Middlepane = styled.div`\r\n\toverflow-x: hidden;\r\n\twidth: 65vw;\r\n\tbackground-color: rgb(32, 32, 32);\r\n\ttext-align: center;\r\n\talign-items: center;\r\n\tmargin: 0 auto;\r\n\tpadding: 30px;\r\n\r\n\tbox-shadow: 0 20px 50px 0 rgba(2, 216, 243, 0.35);\r\n\tbackdrop-filter: blur( 13.5px );\r\n\t-webkit-backdrop-filter: blur(  10.0px );\r\n\r\n\tfont-family: BlenderProBold,sans-serif;\r\n    font-weight: 700;\r\n\r\n\t@media (max-width: 800px) { \r\n\t\twidth: 100%;\r\n\t\tpadding: 20px;\r\n\t}\r\n`;\r\n\r\nexport const MiddlepaneOffer = styled(Middlepane)`\r\n\tbackground-color: rgb(32, 32, 32);\r\n`","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://cyber-shop-db.herokuapp.com/'\r\n});\r\n\r\nexport default instance;","import axios from '../../axios-config.js';\r\n\r\nexport const ADD_PRODUCT_TO_CART = 'ADD_PRODUCT_TO_CART';\r\nexport const REMOVE_PRODUCT_FROM_CART = 'REMOVE_PRODUCT_FROM_CART';\r\nexport const REDUCE_PRODUCT_QUANTITY_FROM_CART = 'REDUCE_PRODUCT_QUANTITY_FROM_CART';\r\nexport const ADD_ADDRESS = 'ADD_ADDRESS';\r\nexport const ADD_PAYMENT_METHOD = 'ADD_PAYMENT_METHOD';\r\nexport const GET_USER_ADDRESSES_SUCCESS = 'GET_USER_ADDRESSES_SUCCESS';\r\nexport const GET_USER_ADDRESSES_FAILURE = 'GET_USER_ADDRESSES_FAILURE';\r\n\r\n\r\nexport const CLEAR_CART = 'CLEAR_CART';\r\n\r\nexport const PLACE_ORDER_REQUEST = 'PLACE_ORDER_REQUEST';\r\nexport const PLACE_ORDER_SUCCESS = 'PLACE_ORDER_SUCCESS';\r\nexport const PLACE_ORDER_FAILURE = 'PLACE_ORDER_FAILURE';\r\n\r\nexport const getUserAddresses = ({userId}) => async dispatch => {\r\n    axios.get(`/addresses/user/${userId}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_USER_ADDRESSES_SUCCESS,\r\n                payload: res.data\r\n              })\r\n            } \r\n        )\r\n        .catch(err => {\r\n            dispatch({\r\n                type: GET_USER_ADDRESSES_FAILURE,\r\n                payload: err.message\r\n            })\r\n        })\r\n}\r\n\r\n\r\nexport const placeOrder = ({ userId, cart, clientComments, enqueueSnackbar }) => async dispatch => {\r\n    const body = { \r\n        userId,\r\n        shippmentMethod: cart.address.shippingMethod,\r\n        shippmentPrice: cart.address.shippingValue,\r\n        addressId: (cart.address.addressId === -1 \r\n            ? null \r\n            : cart.address.addressId),\r\n        country: cart.address.country,\r\n        postcode: cart.address.postcode, \r\n        city: cart.address.city, \r\n        street: cart.address.street, \r\n        building: cart.address.building, \r\n        apartment: cart.address.apartment,\r\n        productsCost: cart.value, \r\n        clientComments,\r\n        paymentMethod : cart.payment,\r\n        productList: cart.productList,\r\n     }\r\n\r\n    axios.post('/orders', body)\r\n      .then(res => {\r\n        const message='Zamówienie przyjęte do realizacji';  \r\n        enqueueSnackbar(\r\n          message, {\r\n              variant: 'success',\r\n          }\r\n        );\r\n\r\n        dispatch({\r\n          type: PLACE_ORDER_SUCCESS,\r\n          payload: res.data\r\n        })\r\n      })\r\n      .catch(err => {\r\n        const message='Coś podszło nie tak, spróbuj ponownie';  \r\n        enqueueSnackbar(\r\n          message, {\r\n              variant: 'error',\r\n          }\r\n        );\r\n\r\n        dispatch({\r\n          type: PLACE_ORDER_FAILURE,\r\n          payload: err.message\r\n        })\r\n    });\r\n  }\r\n\r\nexport const addPaymentMethod = ({paymentMethod}) => {\r\n    return {\r\n        type: ADD_PAYMENT_METHOD,\r\n        payload: paymentMethod,\r\n    }\r\n}\r\n\r\nexport const addAdress = ({ addressId, country, postcode, city, street, building, apartment, shippingMethod, shippingValue }) => {\r\n    return {\r\n        type: ADD_ADDRESS,\r\n        payload: { \r\n            addressId,\r\n            country,\r\n            postcode, \r\n            city, \r\n            street, \r\n            building, \r\n            apartment,\r\n            shippingMethod, \r\n            shippingValue,\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearCart = () => {\r\n    return {\r\n        type: CLEAR_CART,\r\n    }\r\n}\r\n\r\nexport const addProductToCart = ({ productId, productName, price, enqueueSnackbar }) => {\r\n    const message=productName ? `Dodano ${productName} do koszyka` \r\n                              : 'Dodano do koszyka';  \r\n    enqueueSnackbar(\r\n      message, {\r\n          variant: 'success',\r\n      }\r\n    );\r\n    \r\n    return {\r\n        type: ADD_PRODUCT_TO_CART,\r\n        payload: {\r\n            productId,\r\n            productName,\r\n            price,\r\n        }\r\n      }\r\n}\r\n\r\nexport const removeProductFromCart = ({ productId, enqueueSnackbar }) => {\r\n    const message='Usunięto produkt z koszyka';  \r\n    enqueueSnackbar(\r\n      message, {\r\n          variant: 'warning',\r\n      }\r\n    );\r\n\r\n    return {\r\n        type: REMOVE_PRODUCT_FROM_CART,\r\n        payload: {\r\n            productId,\r\n        }\r\n    }\r\n}\r\n\r\nexport const reduceProductQuantityFromCart = ({ productId, enqueueSnackbar }) => {\r\n    const message='Usunięto 1 produkt z koszyka';  \r\n    enqueueSnackbar(\r\n      message, {\r\n          variant: 'warning',\r\n      }\r\n    );\r\n\r\n    return {\r\n        type: REDUCE_PRODUCT_QUANTITY_FROM_CART,\r\n        payload: {\r\n            productId,\r\n        }\r\n    }\r\n}\r\n","import axios from '../../axios-config.js';\r\n\r\nexport const CREATE_PRODUCT_SUCCESS = 'CREATE_PRODUCT_SUCCESS';\r\nexport const CREATE_PRODUCT_FAILURE = 'CREATE_PRODUCT_FAILURE';\r\n\r\nexport const UPDATE_PRODUCT_SUCCESS = 'UPDATE_PRODUCT_SUCCESS';\r\nexport const UPDATE_PRODUCT_FAILURE = 'UPDATE_PRODUCT_FAILURE';\r\n\r\nexport const UPDATE_STORAGE_SUCCESS = 'UPDATE_STORAGE_SUCCESS';\r\nexport const UPDATE_STORAGE_FAILURE = 'UPDATE_STORAGE_FAILURE';\r\n\r\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\r\n\r\nexport const GET_ALL_PRODUCTS_SUCCESS = 'GET_ALL_PRODUCTS_SUCCESS';\r\nexport const GET_ALL_PRODUCTS_FAILURE = 'GET_ALL_PRODUCTS_FAILURE';\r\n\r\nexport const GET_PRODUCT_SUCCESS = 'GET_PRODUCT_SUCCESS';\r\nexport const GET_PRODUCT_FAILURE = 'GET_PRODUCT_FAILURE';\r\nexport const GET_PRODUCT_REQUEST = 'GET_PRODUCT_REQUEST';\r\n\r\nexport const GET_RECOMMENDED_PRODUCTS_SUCCESS = 'GET_RECOMMENDED_PRODUCTS_SUCCESS';\r\nexport const GET_RECOMMENDED_PRODUCTS_FAILURE = 'GET_RECOMMENDED_PRODUCTS_FAILURE';\r\nexport const GET_RECOMMENDED_PRODUCTS_REQUEST = 'GET_RECOMMENDED_PRODUCTS_REQUEST';\r\n\r\nexport const GET_PROMO_PRODUCTS_SUCCESS = 'GET_PROMO_PRODUCTS_SUCCESS';\r\nexport const GET_PROMO_PRODUCTS_FAILURE = 'GET_PROMO_PRODUCTS_FAILURE';\r\nexport const GET_PROMO_PRODUCTS_REQUEST = 'GET_PROMO_PRODUCTS_REQUEST';\r\n\r\nexport const GET_CATEGORY_PRODUCTS_REQUEST = 'GET_CATEGORY_PRODUCTS_REQUEST';\r\nexport const GET_CATEGORY_PRODUCTS_SUCCESS = 'GET_CATEGORY_PRODUCTS_SUCCESS';\r\nexport const GET_CATEGORY_PRODUCTS_FAILURE = 'GET_CATEGORY_PRODUCTS_FAILURE';\r\n\r\nexport const SET_TO_EDIT_PRODUCT = 'SET_TO_EDIT_PRODUCT'; \r\n\r\n\r\n\r\nexport const setToEditProduct = (product) => {\r\n  return {\r\n    type : SET_TO_EDIT_PRODUCT,\r\n    payload : product,\r\n  }\r\n}\r\n\r\nexport const updateStorage = ( updateData, enqueueSnackbar ) => async dispatch => {\r\n  axios.put('/orders/storage', {\r\n    userId : updateData.userId,\r\n    title : updateData.title,\r\n    productsCost : updateData.productsCost,\r\n    shippmentPrice : updateData.shippmentPrice,\r\n    id : updateData.id,\r\n    quantity : updateData.quantity,\r\n    price : updateData.price,\r\n  })\r\n  .then(res => {\r\n    const message='Zaktualizowano stan magazynowy produktu';  \r\n    enqueueSnackbar(\r\n      message, {\r\n          variant: 'success',\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n        type: UPDATE_STORAGE_SUCCESS,\r\n        payload: {\r\n          quantity: updateData.quantity,\r\n          id : updateData.id,\r\n        }\r\n      })\r\n    })\r\n    .catch(err => {\r\n      const message='Aktualizacja stanu magazynowego nie powiodła się';  \r\n      enqueueSnackbar(\r\n        message, {\r\n            variant: 'error',\r\n        }\r\n      );\r\n\r\n      dispatch ({\r\n        type: UPDATE_STORAGE_FAILURE,\r\n        payload: err.message,\r\n      })\r\n    })\r\n}\r\n\r\nexport const updateProduct = ( productData, enqueueSnackbar ) => async dispatch => {\r\n  axios.post(`/products/update/${productData.id}`, {\r\n    name : productData.name, \r\n    description : productData.description, \r\n    price : productData.price,\r\n    profitMargin : productData.profitMargin,  \r\n    producer : productData.producer, \r\n    warranty : productData.warranty, \r\n    promo_id : productData.promo_id, \r\n    category_id : productData.category_id\r\n  })\r\n  .then(res => {\r\n    const message=`Zaktualizowano szczegóły produktu: ${productData.name}!`;  \r\n    enqueueSnackbar(\r\n      message, {\r\n        variant: 'success',\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n        type: UPDATE_PRODUCT_SUCCESS,\r\n        payload: res.data\r\n      })\r\n    })\r\n    .catch(err => {\r\n      const message='Aktualizacja szczegółów produktu nie powiodła się';  \r\n      enqueueSnackbar(\r\n        message, {\r\n          variant: 'error',\r\n        }\r\n      );\r\n\r\n      dispatch ({\r\n        type: UPDATE_PRODUCT_FAILURE,\r\n        payload: err.message,\r\n      })\r\n    })\r\n}\r\n\r\nexport const createProduct = ( productData, enqueueSnackbar ) => async dispatch => {\r\n  axios.put('/products/create', {\r\n    name : productData.name, \r\n    description : productData.description, \r\n    price : productData.price,\r\n    profitMargin : productData.profitMargin,  \r\n    producer : productData.producer, \r\n    warranty : productData.warranty, \r\n    promo_id : productData.promo_id, \r\n    category_id : productData.category_id\r\n  })\r\n  .then(res => {\r\n    const message=`Dodano nowy produkt: ${productData.name}`;  \r\n    enqueueSnackbar(\r\n      message, {\r\n          variant: 'success',\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n        type: CREATE_PRODUCT_SUCCESS,\r\n        payload: res.data\r\n      })\r\n    })\r\n    .catch(err => {      \r\n      const message='Dodawanie produktu nie powiodło się';  \r\n      enqueueSnackbar(\r\n        message, {\r\n            variant: 'error',\r\n        }\r\n      );\r\n\r\n      dispatch ({\r\n        type: CREATE_PRODUCT_FAILURE,\r\n        payload: err.message,\r\n      })\r\n    })\r\n}\r\n\r\nexport const deleteProduct = (productId) => {\r\n  return {\r\n    type: DELETE_PRODUCT,\r\n    payload: {\r\n      productId,\r\n    }\r\n  }\r\n}\r\n\r\nexport const getProductDetails = (productId) => async dispatch => {\r\n  axios.get(`/products/details/${productId}`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_PRODUCT_SUCCESS,\r\n        payload: {\r\n          productDetails: res.data\r\n        },\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: GET_PRODUCT_FAILURE,\r\n        payload: {\r\n          message: err.message\r\n        },\r\n      })\r\n    });\r\n}\r\n\r\n\r\nexport const getAllProducts = () => async dispatch => {\r\n  axios.get('/products/all')\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_ALL_PRODUCTS_SUCCESS,\r\n        payload: res.data\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: GET_ALL_PRODUCTS_FAILURE,\r\n        payload: {\r\n          message: err.message\r\n        },\r\n      })\r\n    });\r\n}\r\n\r\n\r\nexport const getPromoProducts = (promoId) => async dispatch => {\r\n  dispatch({\r\n    type: GET_PROMO_PRODUCTS_REQUEST,\r\n    payload: {},\r\n  })\r\n\r\n  axios.get(`/products/promo/${promoId}`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_PROMO_PRODUCTS_SUCCESS,\r\n        payload: {\r\n          promoProducts: res.data\r\n        },\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: GET_PROMO_PRODUCTS_FAILURE,\r\n        payload: {\r\n          message: err.message\r\n        },\r\n      })\r\n    });\r\n}\r\n\r\nexport const getRecommendedProducts = () => async dispatch => {\r\n  dispatch({\r\n    type: GET_RECOMMENDED_PRODUCTS_REQUEST,\r\n    payload: {},\r\n  })\r\n\r\n  axios.get('/products/recommended')\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_RECOMMENDED_PRODUCTS_SUCCESS,\r\n        payload: {\r\n          recommended: res.data\r\n        },\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: GET_RECOMMENDED_PRODUCTS_FAILURE,\r\n        payload: {\r\n          message: err.message\r\n        },\r\n      })\r\n    });\r\n}\r\n\r\nexport const getProductsByCategoryId = (categoryId) => async dispatch => {\r\n  dispatch({\r\n    type: GET_CATEGORY_PRODUCTS_REQUEST,\r\n    payload: {},\r\n  })\r\n\r\n  axios.get(`/products/category/${categoryId}`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_CATEGORY_PRODUCTS_SUCCESS,\r\n        payload: {\r\n          categoryProducts: res.data\r\n        },\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: GET_CATEGORY_PRODUCTS_FAILURE,\r\n        payload: {\r\n          message: err.message\r\n        },\r\n      })\r\n    });\r\n}","import { createGlobalStyle } from 'styled-components';\r\n\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  html, body {\r\n    margin: 0;\r\n    padding: 0;\r\n\t  overflow-y: auto;\r\n\t  overflow-x: hidden;\r\n  }\r\n  \r\n  *, *::after, *::before {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    background: ${({ theme }) => theme.primaryDark};\r\n    color: ${({ theme }) => theme.primaryLight};\r\n    scroll-behavior: smooth;\r\n    \r\n    color: rgba(255,255,255,0.75);\r\n    font-family: Lato, sans-serif;\r\n\r\n  }\r\n  \r\n  ::-webkit-scrollbar {\r\n    width: 10px;\r\n  }\r\n\r\n\r\n  /* Track */\r\n  ::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 6px rgba(100,100,100,0.4); \r\n  }\r\n  \r\n  /* Handle */\r\n  ::-webkit-scrollbar-thumb {\r\n    background: rgb(0, 0, 0);\r\n    box-shadow: inset 0 0 6px rgba(2, 216, 243, 0.75); \r\n  }\r\n`","export const theme = {\r\n    primaryDark: 'rgb(0, 0, 9)',\r\n    primaryLight: '#EFFFFA',\r\n    primaryHover: '#343078',\r\n    mobile: '576px',\r\n  }","import React, { useEffect, Suspense, lazy } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route } from \"react-router-dom\";\n\nimport { ThemeProvider } from 'styled-components';\nimport { GlobalStyles } from './global';\nimport { theme } from './theme';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { ProtectedRoute, AppBar } from './components';\nimport { MiddlepaneOffer } from 'styles/Middlepane.css';\nimport { getPromos } from './state/promo/promoActions';\nimport { getRecommendedProducts } from './state/products/productActions';\nimport { getAllCategories } from './state/categories/categoriesActions';\nimport './index.css';\n\nconst Home = lazy(() => import('./pages/Home'));\nconst Offer = lazy(() => import('./pages/Offer'));\nconst Login = lazy(() => import('./pages/Login'));\nconst Register = lazy(() => import('./pages/Register'));\nconst Promo = lazy(() => import('./pages/Promo'));\nconst ProductDetails = lazy(() => import('./pages/ProductDetails'));\nconst Account = lazy(() => import('./pages/Account'));\nconst Orders = lazy(() => import('./pages/Orders'));\nconst PlaceOrder = lazy(() => import('./pages/PlaceOrder'));\nconst ProductManagement = lazy(() => import('./pages/ProductManagement'));\nconst PromoManagement = lazy(() => import('./pages/PromoManagement'));\nconst OrderDetails = lazy(() => import('./pages/OrderDetails'));\nconst ServiceManagement = lazy(() => import('./pages/ServiceManagement'));\nconst Finances = lazy(() => import('./pages/Finances'));\n\n\n\nconst App = () => {\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n      dispatch(getPromos());\n      dispatch(getRecommendedProducts());\n      dispatch(getAllCategories());\n  },[dispatch]);\n\n  const Loading = () => {\n    return( \n      <MiddlepaneOffer>\n        <Skeleton animation=\"wave\" height={500} />\n      </MiddlepaneOffer>\n    );\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"layout\">\n          <AppBar/>\n          <Suspense fallback={<Loading/>}>\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/login\" exact component={Login} />\n              <Route path=\"/register\" exact component={Register} />\n              <Route path=\"/offer/:categoryId\" exact component={Offer} />\n              <Route path=\"/promo/:promoId\" exact component={Promo} />\n              <Route path=\"/product/:productId\" exact component={ProductDetails} />\n              \n              <ProtectedRoute \n                              path=\"/cart\" \n                              exact\n                              component={PlaceOrder} \n                              auth={auth.isLoggedIn}\n              />\n              <ProtectedRoute \n                              path=\"/account\" \n                              exact\n                              component={Account} \n                              auth={auth.isLoggedIn}\n              />\n              <ProtectedRoute \n                              path=\"/orders\" \n                              exact\n                              component={Orders} \n                              auth={auth.isLoggedIn}\n              />\n              <ProtectedRoute \n                              path=\"/products\" \n                              exact\n                              component={ProductManagement} \n                              auth={auth.isAdmin}\n              />\n              <ProtectedRoute \n                              path=\"/management/promo\" \n                              exact\n                              component={PromoManagement} \n                              auth={auth.isAdmin}\n              />\n              <ProtectedRoute \n                              path=\"/service\" \n                              exact\n                              component={ServiceManagement} \n                              auth={auth.isAdmin}\n              />\n              <ProtectedRoute \n                              path=\"/finaces\" \n                              exact\n                              component={Finances} \n                              auth={auth.isAdmin}\n              />\n              <ProtectedRoute \n                              path=\"/order/details/:id\" \n                              exact\n                              component={OrderDetails} \n                              auth={auth.isLoggedIn}\n              />\n            </Switch>\n          </Suspense>\n        </div>\n      </Router>\n      <GlobalStyles />\n    </ThemeProvider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    GET_ALL_PRODUCTS_SUCCESS,\r\n    GET_PROMO_PRODUCTS_SUCCESS,\r\n    GET_RECOMMENDED_PRODUCTS_SUCCESS,\r\n    GET_PRODUCT_SUCCESS,\r\n    GET_CATEGORY_PRODUCTS_SUCCESS,\r\n    GET_PROMO_PRODUCTS_FAILURE,\r\n    SET_TO_EDIT_PRODUCT,\r\n    CREATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_STORAGE_SUCCESS\r\n} from './productActions'; \r\n\r\n\r\nconst initialState = {\r\n    recommended : [],\r\n    promoProducts : [],\r\n    categoryProducts : [],\r\n    productDetails : {},\r\n    allProducts : [],\r\n    currentlyEdited : {}\r\n}\r\n\r\nconst productReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_STORAGE_SUCCESS : {\r\n            const updatedProduct = action.payload;\r\n            \r\n            state.allProducts.forEach(prod => \r\n                prod.id === updatedProduct.id \r\n                ? prod.quantity += updatedProduct.quantity \r\n                : null\r\n            )\r\n\r\n            return {\r\n                ...state,\r\n                currentlyEdited : {}\r\n            }\r\n        }\r\n        case UPDATE_PRODUCT_SUCCESS : {\r\n            const updatedProduct = action.payload;\r\n            const reducedPromoList = state.allProducts.filter(\r\n                prod => prod.id !== updatedProduct[0].id \r\n            );\r\n            \r\n            return {\r\n                ...state,\r\n                allProducts: [...reducedPromoList, ...updatedProduct],\r\n                currentlyEdited : {}\r\n            }\r\n        }\r\n        case CREATE_PRODUCT_SUCCESS : {\r\n            const product = action.payload;\r\n            return {\r\n                ...state,\r\n                allProducts: [...state.allProducts, ...product],\r\n            }\r\n        }\r\n        case SET_TO_EDIT_PRODUCT: {\r\n            return {\r\n                ...state,\r\n                currentlyEdited : action.payload\r\n            }\r\n        }\r\n        case GET_ALL_PRODUCTS_SUCCESS: {\r\n            const productList = action.payload;\r\n      \r\n            return {\r\n              ...state,\r\n              allProducts: productList,\r\n            }\r\n        }\r\n        case GET_RECOMMENDED_PRODUCTS_SUCCESS: {\r\n            const recommended = action.payload.recommended;\r\n\r\n            return {\r\n              ...state,\r\n              recommended: recommended,\r\n            }\r\n        }\r\n        case GET_PROMO_PRODUCTS_SUCCESS: {\r\n            const promoProducts = action.payload.promoProducts;\r\n\r\n            return {\r\n                ...state,\r\n                promoProducts: promoProducts,\r\n            }\r\n        }\r\n        case GET_PRODUCT_SUCCESS: {\r\n            const productDetails = action.payload.productDetails;\r\n\r\n            return {\r\n                ...state,\r\n                productDetails: productDetails[0],\r\n            }\r\n        }\r\n        case GET_CATEGORY_PRODUCTS_SUCCESS: {\r\n            const categoryProducts = action.payload.categoryProducts;\r\n            \r\n            return {\r\n                ...state,\r\n                categoryProducts : categoryProducts,\r\n            }\r\n        }\r\n        case GET_PROMO_PRODUCTS_FAILURE : {\r\n            return {\r\n                ...state,\r\n                promoProducts : [],\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default productReducer;","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILURE,\r\n    LOGOUT_REQUEST,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAILURE,\r\n    USER_ACCOUNT_UPDATE_SUCCESS\r\n} from './authActions';  \r\n\r\nconst initialState = {\r\n    user : JSON.parse(localStorage.getItem('user')) || null,\r\n    isAdmin : localStorage.getItem('isAdmin') === 'true' || false, \r\n    isLoggedIn : localStorage.getItem('isLoggedIn') === 'true' || false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case REGISTER_SUCCESS: {\r\n            const user = action.payload;\r\n\r\n            // update localStorage\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            localStorage.setItem('isAdmin', false);\r\n            localStorage.setItem('isLoggedIn', true);\r\n\r\n            return {\r\n                ...state,\r\n                user,\r\n                isAdmin : false,\r\n                isLoggedIn : true\r\n            }\r\n        }\r\n        case LOGIN_SUCCESS: {\r\n            const { id, isAdmin, name, surname, phoneNumber } = action.payload;\r\n            const user = { id, name, surname, phoneNumber };\r\n\r\n            // update localStorage\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            localStorage.setItem('isAdmin', isAdmin);\r\n            localStorage.setItem('isLoggedIn', true);\r\n\r\n            return {\r\n                ...state,\r\n                user,\r\n                isAdmin : isAdmin,\r\n                isLoggedIn : true\r\n            }\r\n        }\r\n        case USER_ACCOUNT_UPDATE_SUCCESS: {\r\n            const { id, name, surname, phoneNumber } = action.payload;\r\n            const user = { id, name, surname, phoneNumber };\r\n\r\n            // update localStorage\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            localStorage.setItem('isLoggedIn', true);\r\n\r\n            return {\r\n                ...state,\r\n                user\r\n            }\r\n        }\r\n        case LOGIN_FAILURE:\r\n        case REGISTER_FAILURE:\r\n        case LOGOUT_REQUEST: {\r\n            localStorage.clear();\r\n\r\n            return {\r\n                ...state,\r\n                user : null,\r\n                isAdmin : false,\r\n                isLoggedIn : false\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {\r\n    GET_PROMO_SUCCESS,\r\n    CREATE_PROMO_SUCCESS,\r\n    GET_PROMO_FAILURE,\r\n    SET_TO_EDIT_PROMO,\r\n    EDIT_PROMO_SUCCESS,\r\n    DELETE_PROMO_SUCCESS\r\n} from './promoActions';\r\n\r\nconst initialState = {\r\n    promosList : [],\r\n    currentlyEdited: {}\r\n}\r\n\r\nconst promosReducer = ( state=initialState, action ) => {\r\n    switch(action.type) {\r\n        case DELETE_PROMO_SUCCESS: {\r\n            const promoId = action.payload;\r\n            const reducedPromoList = state.promosList.filter(promo => promo.id !== promoId);\r\n\r\n            return {\r\n                ...state,\r\n                promosList : reducedPromoList,\r\n                currentlyEdited : {}\r\n            }\r\n        }\r\n        case EDIT_PROMO_SUCCESS: {\r\n            const updatedPromo = action.payload;\r\n\r\n            const reducedPromoList = state.promosList.filter(promo => promo.id !== updatedPromo.id);\r\n\r\n            return {\r\n                ...state,\r\n                promosList : [...reducedPromoList, updatedPromo],\r\n                currentlyEdited : {}\r\n            }\r\n        }\r\n        case SET_TO_EDIT_PROMO: {\r\n            return {\r\n                ...state,\r\n                currentlyEdited: action.payload\r\n            }\r\n        }\r\n        case CREATE_PROMO_SUCCESS: {\r\n            const promo = action.payload;\r\n            return {\r\n                ...state,\r\n                promosList: [...state.promosList, ...promo],\r\n            }\r\n        }\r\n        case GET_PROMO_SUCCESS: {\r\n            const promos = action.payload.promos;\r\n            \r\n            return {\r\n                ...state,\r\n                promosList: promos,\r\n            }\r\n        }\r\n        case GET_PROMO_FAILURE: {\r\n            return {\r\n                promosList : []\r\n            }\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default promosReducer;","import {\r\n    ADD_PRODUCT_TO_CART,\r\n    REMOVE_PRODUCT_FROM_CART,\r\n    REDUCE_PRODUCT_QUANTITY_FROM_CART,\r\n    CLEAR_CART,\r\n    ADD_ADDRESS,\r\n    ADD_PAYMENT_METHOD,\r\n    PLACE_ORDER_SUCCESS,\r\n    GET_USER_ADDRESSES_SUCCESS\r\n} from './cartActions'; \r\n\r\n\r\nconst initialState = {\r\n    productList : JSON.parse(localStorage.getItem('cart')) || [],\r\n    value : parseFloat( localStorage.getItem('value') || 0.0 ).toFixed(2),\r\n    address : {\r\n        addressId: null,\r\n        country: null,\r\n        postcode: null, \r\n        city: null, \r\n        street: null, \r\n        building: null, \r\n        apartment: null,\r\n        shippingMethod: null, \r\n        shippingValue: 0,\r\n    },\r\n    userAddresses : [],\r\n    clientComments : '',\r\n    payment : {}\r\n}\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case GET_USER_ADDRESSES_SUCCESS : {\r\n            return {\r\n                ...state,\r\n                userAddresses : action.payload\r\n            }\r\n        }\r\n        case CLEAR_CART :\r\n        case PLACE_ORDER_SUCCESS: {\r\n            localStorage.removeItem('cart');\r\n            localStorage.removeItem('value');\r\n            \r\n            return {\r\n                productList : [],\r\n                value : 0.0,\r\n                address : {\r\n                    addressId: null,\r\n                    country: null,\r\n                    postcode: null, \r\n                    city: null, \r\n                    street: null, \r\n                    building: null, \r\n                    apartment: null,\r\n                    shippingMethod: null, \r\n                    shippingValue: 0,\r\n                },\r\n                userAddresses : [],\r\n                clientComments : '',\r\n                payment : {}\r\n            }\r\n        }\r\n        case ADD_PAYMENT_METHOD: {\r\n            const method = action.payload;\r\n            return {\r\n                ...state,\r\n                payment: method,\r\n            }\r\n        }\r\n        case ADD_ADDRESS: {\r\n            const { addressId, country, postcode, city, street, building, apartment, shippingMethod, shippingValue } = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                address : {\r\n                    addressId: addressId,\r\n                    country: country,\r\n                    postcode: postcode, \r\n                    city: city, \r\n                    street: street, \r\n                    building: building, \r\n                    apartment: apartment,\r\n                    shippingMethod: shippingMethod, \r\n                    shippingValue: shippingValue,\r\n                },\r\n            }\r\n        }\r\n        case ADD_PRODUCT_TO_CART: {\r\n            const {  productId, productName, price } = action.payload;\r\n\r\n            \r\n            let cartProduct = state.productList.filter( \r\n                product => product.id === productId\r\n            );\r\n            \r\n            if(cartProduct.length !== 0){\r\n                cartProduct[0].quantity++;\r\n            }else{                \r\n                cartProduct = [{\r\n                    id: productId,\r\n                    name: productName,\r\n                    price: parseFloat(price).toFixed(2),\r\n                    quantity: 1\r\n                }]\r\n            }\r\n\r\n            const updatedProductList = [...state.productList.filter( \r\n                product => product.id !== productId\r\n            ), cartProduct[0]];\r\n            \r\n            \r\n            const cartValue = updatedProductList.reduce(\r\n                (val, product) => product.price * product.quantity + val, 0.0);\r\n\r\n            // update localStorage\r\n            localStorage.setItem('cart', JSON.stringify(updatedProductList));\r\n            localStorage.setItem('value', parseFloat(cartValue).toFixed(2));\r\n\r\n            return {\r\n                ...state,\r\n                productList: updatedProductList,\r\n                value: parseFloat(cartValue).toFixed(2),\r\n            }\r\n        }\r\n        case REDUCE_PRODUCT_QUANTITY_FROM_CART: {\r\n            const { productId } = action.payload;\r\n            \r\n            let cartProduct = state.productList.filter( \r\n                product => product.id === productId\r\n            );\r\n            \r\n            if(cartProduct.length === 0){\r\n                return state;\r\n            }\r\n\r\n            cartProduct[0].quantity--;\r\n            let updatedProductList = [...state.productList.filter( \r\n                product => product.id !== productId\r\n            )];\r\n\r\n            if(cartProduct[0].quantity !== 0){\r\n                updatedProductList = [...updatedProductList, cartProduct[0]];\r\n            }\r\n\r\n            const cartValue = updatedProductList.reduce(\r\n                (val, product) => product.price * product.quantity + val, 0.0);\r\n\r\n            // update localStorage\r\n            localStorage.setItem('cart', JSON.stringify(updatedProductList));\r\n            localStorage.setItem('value', parseFloat(cartValue).toFixed(2));\r\n\r\n            return {\r\n                ...state,\r\n                productList: updatedProductList,\r\n                value: parseFloat(cartValue).toFixed(2),\r\n            }\r\n        }case REMOVE_PRODUCT_FROM_CART: {\r\n            const { productId } = action.payload;\r\n            \r\n            const updatedProductList = state.productList.filter( \r\n                product => product.id !== productId\r\n            );\r\n            const cartValue = updatedProductList.reduce(\r\n                (val, product) => product.price * product.quantity + val, 0.0);\r\n\r\n            // update localStorage\r\n            localStorage.setItem('cart', JSON.stringify(updatedProductList));\r\n            localStorage.setItem('value', parseFloat(cartValue).toFixed(2));\r\n            \r\n            return {\r\n                ...state,\r\n                productList: updatedProductList,\r\n                value: parseFloat(cartValue).toFixed(2),\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cartReducer;","import {\r\n    CREATE_COMMENT_SUCCES,\r\n    GET_COMMENTS_SUCCES\r\n} from './commentsActions';\r\n\r\n\r\nconst initialState = []\r\n\r\nconst commentsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case GET_COMMENTS_SUCCES : {\r\n            return action.payload;\r\n        }case CREATE_COMMENT_SUCCES : {\r\n            const comment = action.payload;\r\n            return [...state, ...comment];\r\n        }default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default commentsReducer;","import { \r\n    GET_ALL_ORDERS_DETAILS_SUCCES,\r\n    GET_ORDERS_DETAILS_SUCCES,\r\n    UPDATE_PAYMENT_STATUS_SUCCESS,\r\n    UPDATE_ORDER_STATUS_SUCCESS\r\n} from './ordersActions';\r\n\r\nconst initialState = []\r\n\r\nconst ordersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_ORDER_STATUS_SUCCESS: {\r\n            const {status, orderId} = action.payload;\r\n            const currentState = state.filter(order => parseInt(order.order_id) !== parseInt(orderId));\r\n            let updated = state.find(order => parseInt(order.order_id) === parseInt(orderId));\r\n            updated.orderStatus = status;\r\n\r\n            return [...currentState, updated];\r\n        }\r\n        case UPDATE_PAYMENT_STATUS_SUCCESS: {\r\n            const {isPaid, orderId} = action.payload;\r\n            \r\n            const currentState = state.filter(order => parseInt(order.order_id) !== parseInt(orderId));\r\n            let updated = state.find(order => parseInt(order.order_id) === parseInt(orderId));\r\n            updated.isPaid = isPaid;\r\n\r\n            return [...currentState, updated];\r\n        }\r\n        case GET_ALL_ORDERS_DETAILS_SUCCES :\r\n        case GET_ORDERS_DETAILS_SUCCES : {\r\n            return action.payload\r\n        }default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ordersReducer;","import {\r\n    GET_ALL_CATEGORIES_SUCCESS\r\n} from './categoriesActions';\r\n\r\nconst initialState = {\r\n    categoriesList : []\r\n}\r\n\r\n\r\nconst categoriesReducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case GET_ALL_CATEGORIES_SUCCESS:{\r\n            return {\r\n                ...state,\r\n                categoriesList : action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default categoriesReducer;","import {\r\n    GET_PRODUCTS_IN_SERVICE_SUCCESS,\r\n    ADD_PRODUCT_TO_SERVICE_SUCCESS,\r\n    PRODUCT_IN_SERVICE_STATUS_UPDATE_SUCCESS,\r\n    SET_TO_EDIT_PRODUCT_IN_SERVICE\r\n} from './productsServiceActions';\r\n\r\n\r\nconst initialState = {\r\n    productList : [],\r\n    currentlyEdit : {}\r\n}\r\n\r\nconst productsInServiceReducer = ( state=initialState, action ) => {\r\n    switch(action.type) {\r\n        case SET_TO_EDIT_PRODUCT_IN_SERVICE : {\r\n            return {\r\n                ...state,\r\n                currentlyEdit : action.payload\r\n            }\r\n        }\r\n        case GET_PRODUCTS_IN_SERVICE_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                productList : action.payload\r\n            }\r\n        }        \r\n        case ADD_PRODUCT_TO_SERVICE_SUCCESS: {\r\n            const added = action.payload;\r\n            return {\r\n                ...state, \r\n                productList : [...state.productList, ...added]\r\n            };\r\n        }\r\n        case PRODUCT_IN_SERVICE_STATUS_UPDATE_SUCCESS: {\r\n            const updated = action.payload;\r\n            const reducedState = state.productList.filter(product => product.id !== updated[0].id);\r\n\r\n            return {\r\n                ...state,\r\n                productList : [...reducedState, ...updated]\r\n            };\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default productsInServiceReducer;","import { combineReducers } from 'redux';\r\n\r\nimport productReducer from './products/productReducer';\r\nimport authReducer from './auth/authReducer';\r\nimport promosReducer from './promo/promoReducer';\r\nimport cartReducer from './cart/cartReducer';\r\nimport commentsReducer from  './comments/commentsReducer';\r\nimport ordersReducer from './orders/ordersReducer';\r\nimport categoriesReducer from './categories/categoriesReducer';\r\nimport productsInServiceReducer from './productsService/productsServiceReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    products: productReducer,\r\n    promos: promosReducer,\r\n    auth: authReducer,\r\n    cart: cartReducer,\r\n    comments: commentsReducer,\r\n    orders: ordersReducer,\r\n    categories: categoriesReducer,\r\n    productsInService : productsInServiceReducer\r\n});\r\n\r\nexport default rootReducer;","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","export default __webpack_public_path__ + \"static/media/Cyberpunk.ce09ddf4.ttf\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport store from './state/store';\n\nimport { SnackbarProvider } from 'notistack';\nimport 'font/Cyberpunk.ttf';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        <SnackbarProvider\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n          }}>\n          <App />\n        </SnackbarProvider>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import axios from '../../axios-config.js';\r\n\r\nexport const GET_PROMO_SUCCESS = 'GET_PROMO_SUCCESS';\r\nexport const GET_PROMO_FAILURE = 'GET_PROMO_FAILURE';\r\nexport const GET_PROMO_REQUEST = 'GET_PROMO_REQUEST';\r\n\r\nexport const CREATE_PROMO_SUCCESS = 'CREATE_PROMO_SUCCESS';\r\nexport const CREATE_PROMO_FAILURE = 'CREATE_PROMO_FAILURE';\r\n\r\nexport const SET_TO_EDIT_PROMO = 'SET_TO_EDIT_PROMO';\r\n\r\nexport const EDIT_PROMO_SUCCESS = 'EDIT_PROMO_SUCCESS';\r\nexport const EDIT_PROMO_FAILURE = 'EDIT_PROMO_FAILURE';\r\n\r\nexport const DELETE_PROMO_SUCCESS = 'DELETE_PROMO_SUCCESS';\r\nexport const DELETE_PROMO_FAILURE = 'DELETE_PROMO_FAILURE';\r\n\r\n\r\nexport const deletePromo = ({id, enqueueSnackbar}) => async dispatch => {\r\n  axios.delete(`/promos/delete/${id}`)\r\n    .then(res => {\r\n      const message='Usunięto promocję';  \r\n      enqueueSnackbar(\r\n        message, {\r\n            variant: 'success',\r\n        }\r\n      );\r\n\r\n      dispatch({\r\n        type: DELETE_PROMO_SUCCESS,\r\n        payload : id,\r\n      })\r\n    })\r\n    .catch(err => {\r\n      const message='Usunięcie promocji przebiegło niepomyślnie. Sprawdź połączenie internetowe i spróbuj ponownie.';  \r\n      enqueueSnackbar(\r\n      message, {\r\n          variant: 'error',\r\n      }\r\n    );\r\n\r\n      dispatch({\r\n        type: DELETE_PROMO_FAILURE,\r\n        payload: {\r\n          message: err.message\r\n        },\r\n      })\r\n    })\r\n} \r\n\r\nexport const editPromo = ({ id, title, description, discountValue, enqueueSnackbar }) => async dispatch => {\r\n  axios.post(`/promos/update/${id}`, { title, description, discount:discountValue })\r\n    .then(res => {\r\n      const message='Szczegóły promocji zostały zaktualizowane';  \r\n      enqueueSnackbar(\r\n        message, {\r\n            variant: 'success',\r\n        }\r\n      );\r\n\r\n      dispatch({\r\n        type : EDIT_PROMO_SUCCESS,\r\n        payload : res.data,\r\n      })\r\n    })\r\n    .catch(err => {\r\n      const message='Aktualizacja promocji nie powiodła się';  \r\n      enqueueSnackbar(\r\n        message, {\r\n            variant: 'error',\r\n        }\r\n      );\r\n\r\n      dispatch({\r\n        type: EDIT_PROMO_FAILURE,\r\n        payload: {\r\n          message: err.message\r\n        },\r\n      })\r\n    });\r\n}\r\n\r\nexport const setToEditionPromo = (promo) => {\r\n  return {\r\n    type : SET_TO_EDIT_PROMO,\r\n    payload : promo\r\n  }\r\n}\r\n\r\nexport const createPromo = ({ title, description, discountValue, enqueueSnackbar }) => async dispatch => {\r\n  axios.put('/promos/create', { title, description, discount:discountValue })\r\n    .then(res => {\r\n      const message='Dodano nową promocję. Przejdź do sekcji \"Zarządzaj produktami\" by dodać produkt do promocji.';  \r\n      enqueueSnackbar(\r\n        message, {\r\n            variant: 'success',\r\n        }\r\n      );\r\n\r\n      dispatch({\r\n        type : CREATE_PROMO_SUCCESS,\r\n        payload : res.data,\r\n      })\r\n    })\r\n    .catch(err => {\r\n      const message='Tworzenie promocji nie powiodło się';  \r\n      enqueueSnackbar(\r\n        message, {\r\n            variant: 'error',\r\n        }\r\n      );\r\n\r\n      dispatch({\r\n        type: CREATE_PROMO_FAILURE,\r\n        payload: {\r\n          message: err.message\r\n        },\r\n      })\r\n    });\r\n}\r\n\r\nexport const getPromos = () => async dispatch => {\r\n    dispatch({\r\n        type: GET_PROMO_REQUEST,\r\n        payload: {},\r\n      })\r\n    \r\n      axios.get('/promos')\r\n        .then(res => {\r\n          dispatch({\r\n            type: GET_PROMO_SUCCESS,\r\n            payload: {\r\n              promos: res.data\r\n            },\r\n          })\r\n        })\r\n        .catch(err => {\r\n          dispatch({\r\n            type: GET_PROMO_FAILURE,\r\n            payload: {\r\n              message: err.message\r\n            },\r\n          })\r\n        });\r\n}","import axios from '../../axios-config.js';\r\n\r\nexport const SET_TO_EDIT_PRODUCT_IN_SERVICE = 'SET_TO_EDIT_PRODUCT_IN_SERVICE'; \r\n\r\nexport const GET_PRODUCTS_IN_SERVICE_SUCCESS = 'GET_PRODUCTS_IN_SERVICE_SUCCESS';\r\nexport const GET_PRODUCTS_IN_SERVICE_FAILURE = 'GET_PRODUCTS_IN_SERVICE_FAILURE';\r\n\r\nexport const ADD_PRODUCT_TO_SERVICE_SUCCESS = 'ADD_PRODUCT_TO_SERVICE_SUCCESS';\r\nexport const ADD_PRODUCT_TO_SERVICE_FAILURE = 'ADD_PRODUCT_TO_SERVICE_FAILURE';\r\n\r\nexport const PRODUCT_IN_SERVICE_STATUS_UPDATE_SUCCESS = 'PRODUCT_IN_SERVICE_STATUS_UPDATE_SUCCESS';\r\nexport const PRODUCT_IN_SERVICE_STATUS_UPDATE_FAILURE = 'PRODUCT_IN_SERVICE_STATUS_UPDATE_FAILURE';\r\n\r\n\r\n\r\nexport const setToEditProductInService = ({product}) => {\r\n    return {\r\n        type : SET_TO_EDIT_PRODUCT_IN_SERVICE,\r\n        payload : product,\r\n    }\r\n}\r\n\r\nexport const getProductsInService = () => async dispatch => {\r\n    axios.get('/service')\r\n    .then(res => {\r\n        dispatch({\r\n            type : GET_PRODUCTS_IN_SERVICE_SUCCESS,\r\n            payload : res.data\r\n        })\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type : GET_PRODUCTS_IN_SERVICE_FAILURE \r\n        })\r\n    })\r\n}\r\n\r\nexport const addProductToService = ({ orderLineId, description, status, enqueueSnackbar }) => async dispatch => {\r\n    axios.put('/service/create', { orderLineId, description, status })\r\n        .then(res => {\r\n            const message='Produkt dodany do serwisu. Sprawdź zakładkę \"zarządzaj serwisem\"';  \r\n            enqueueSnackbar(\r\n                message, {\r\n                    variant: 'success',\r\n                }\r\n            );\r\n\r\n            dispatch({\r\n                type : ADD_PRODUCT_TO_SERVICE_SUCCESS,\r\n                payload : res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            const message='Produkt znajduje się już w serwisie lub jego okres gwarancji wygasł';  \r\n            enqueueSnackbar(\r\n                message, {\r\n                    variant: 'warning',\r\n                }\r\n            );\r\n\r\n            dispatch({\r\n                type : ADD_PRODUCT_TO_SERVICE_FAILURE \r\n            })\r\n        })\r\n}\r\n\r\nexport const updateProductStatusInService = ({ serviceId, description, status, enqueueSnackbar }) => async dispatch => {\r\n    console.log({ serviceId, description, status });\r\n    axios.post(`/service/update/${serviceId}`, { description, status })\r\n        .then(res => {\r\n            const message='Zaktualizowano status produktu w serwisie';  \r\n            enqueueSnackbar(\r\n                message, {\r\n                    variant: 'success',\r\n                }\r\n            );\r\n\r\n            dispatch({\r\n                type : PRODUCT_IN_SERVICE_STATUS_UPDATE_SUCCESS,\r\n                payload : res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            const message='Aktualizacja statusu produktu nie powiodła się';  \r\n            enqueueSnackbar(\r\n                message, {\r\n                    variant: 'error',\r\n                }\r\n            );\r\n\r\n            dispatch({\r\n                type : PRODUCT_IN_SERVICE_STATUS_UPDATE_FAILURE \r\n            })\r\n        })\r\n}\r\n\r\n","import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { logout } from 'state/auth/authActions';\r\nimport { clearCart } from 'state/cart/cartActions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSnackbar } from 'notistack';\r\nimport SmartphoneIcon from '@material-ui/icons/Smartphone';\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\nimport MemoryIcon from '@material-ui/icons/Memory';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  root: {\r\n    background: 'rgb(252, 238, 9)',\r\n    color: 'black',\r\n  },\r\n  menuButton: {\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    fontFamily: 'CyberSans',\r\n    fontSize: 40,\r\n    fontWeight: 100,\r\n    // display: 'none',\r\n    // [theme.breakpoints.up('sm')]: {\r\n    //   display: 'block',\r\n    // },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(10),\r\n      marginRight: theme.spacing(10),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    maxWidth: '1200px',\r\n  },\r\n  categories : {\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n  },\r\n  categoriesDesktop : {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n  },\r\n  categoriesTitle : {\r\n    fontSize: 17,\r\n\t  fontFamily: ['BlenderProBold','sans-serif'].join(','),\r\n  }\r\n}));\r\n\r\n\r\nconst MenuAppBar = (props) => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const isMenuOpen = Boolean(anchorEl);\r\n\r\n  const state = useSelector(state => state); \r\n  const count = state.cart.productList;\r\n  const auth = state.auth;\r\n\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const desktop = useMediaQuery('(min-width:800px)');\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleProfileMenuClick = (e, pageRoute) => {\r\n    e.preventDefault();\r\n    history.push(pageRoute);\r\n  };\r\n\r\n  const handleLogout = (e) => {\r\n    e.preventDefault();\r\n    dispatch(logout({enqueueSnackbar}));\r\n    dispatch(clearCart());\r\n    setAnchorEl(null);\r\n    history.push('/');\r\n  }\r\n  \r\n  const menuId = 'primary-search-account-menu';  \r\n  const menuUserLoggedIn = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={() => setAnchorEl(null)}\r\n      style={{\r\n        color: 'black',}}\r\n    >\r\n      { auth.isAdmin ? <MenuItem onClick={(e) => handleProfileMenuClick(e, '/finaces')}>Finanse</MenuItem> : null }\r\n      { auth.isAdmin ? <MenuItem onClick={(e) => handleProfileMenuClick(e, '/products')}>Zarządzaj produkatami</MenuItem> : null }\r\n      { auth.isAdmin ? <MenuItem onClick={(e) => handleProfileMenuClick(e, '/management/promo')}>Zarządzaj promocjami</MenuItem> : null }\r\n      { auth.isAdmin ? <MenuItem onClick={(e) => handleProfileMenuClick(e, '/service')}>Zarządzaj serwisem</MenuItem> : null }\r\n      <MenuItem onClick={(e) => handleProfileMenuClick(e, '/orders')}>Zamówienia</MenuItem>\r\n      <MenuItem onClick={(e) => handleProfileMenuClick(e, '/account')}>Konto</MenuItem>\r\n      <MenuItem onClick={(e) => handleLogout(e)}>Wyloguj</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const menuUserLoggedOut = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={() => setAnchorEl(null)}\r\n    >\r\n      <MenuItem onClick={(e) => handleProfileMenuClick(e, '/login')}>Zaloguj</MenuItem>\r\n      <MenuItem onClick={(e) => handleProfileMenuClick(e, '/register')}>Zarejestruj się</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\" className={classes.root}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            onClick={(e) => handleProfileMenuClick(e, '/')}\r\n          >\r\n            <Typography className={classes.title} variant=\"h6\" noWrap>\r\n              CyberShop\r\n            </Typography>\r\n          </IconButton>\r\n          \r\n          {/* Search bar has to be posponed */}\r\n          \r\n          {/* <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div> */}\r\n\r\n          <div className={classes.grow} />\r\n          <IconButton aria-label=\"cart\" \r\n                      color=\"inherit\">\r\n            <Badge badgeContent={count.length} color=\"secondary\">\r\n              <ShoppingCartIcon \r\n              onClick={(e) => handleProfileMenuClick(e, '/cart')}/>\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton\r\n            edge=\"end\"\r\n            aria-label=\"account of current user\"\r\n            aria-controls={menuId}\r\n            aria-haspopup=\"true\"\r\n            onClick={handleProfileMenuOpen}\r\n            color=\"inherit\"\r\n            className={classes.menuButton}\r\n          >\r\n            <AccountCircle />\r\n          </IconButton>\r\n        </Toolbar>\r\n\r\n        <Toolbar align=\"center\" className={desktop ? classes.categoriesDesktop : classes.categories }>\r\n          <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={(e) => handleProfileMenuClick(e, '/offer/1')}\r\n          >\r\n              <ComputerIcon/> \r\n              <Typography className={classes.categoriesTitle}>\r\n                Laptopy i komputery\r\n              </Typography> \r\n          </IconButton>\r\n          \r\n          <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={(e) => handleProfileMenuClick(e, '/offer/2')}\r\n            >\r\n              <SmartphoneIcon/>  \r\n              <Typography className={classes.categoriesTitle}>\r\n                Smartfony i smartwatche\r\n              </Typography> \r\n          </IconButton>\r\n          \r\n          <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={(e) => handleProfileMenuClick(e, '/offer/3')}\r\n            >\r\n              <MemoryIcon/> \r\n              <Typography className={classes.categoriesTitle}>\r\n                Podzespoły komputerowe \r\n              </Typography> \r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      { auth.isLoggedIn ? menuUserLoggedIn : menuUserLoggedOut }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(MenuAppBar);","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Box = styled.div`\r\n    height: 300px;\r\n    text-align: center;\r\n    color: black;\r\n    background: rgb(0, 240, 255);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-decoration: none;\r\n            \r\n    &:before {\r\n    \tcontent: '';\r\n\t\tposition: absolute;\r\n\t\tbottom: 0; left: 0;\r\n\t\tborder-bottom: 80px solid rgb(32, 32, 32);\r\n\t\tborder-right: 80px solid rgb(0, 240, 255);\r\n\t\twidth: 0;\r\n    }\r\n\r\n    &:after {\r\n    \tcontent: '';\r\n\t\tposition: absolute;\r\n\t\ttop: 0; right: 0;\r\n\t\tborder-right: 80px solid rgb(32, 32, 32);\r\n\t\tborder-bottom: 80px solid rgb(0, 240, 255);\r\n\t\twidth: 0;\r\n    }\r\n`;\r\n\r\nexport const CarouselWrapper = styled.div`\r\n    width: 100%;\r\n\r\n    font-size: 3em;\r\n    li.alice-carousel__stage-item :not(.__cloned) {\r\n        width: auto !important;\r\n  }\r\n`;\r\n\r\nexport const CarouselLink = styled(Link)`\r\n    text-decoration: none;\r\n`;","import React from 'react';\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport 'react-alice-carousel/lib/alice-carousel.css';\r\n\r\nimport { Box, CarouselWrapper, CarouselLink } from './adsCarousel.css';\r\n\r\nimport {  useSelector } from 'react-redux';\r\n\r\n\r\nconst Carousel = () => {\r\n    const promos = useSelector(state => state.promos.promosList);\r\n    \r\n    const items = promos.map(promo => ( \r\n        <CarouselLink to={`/promo/${promo.id}`} onDragStart={e => e.preventDefault()}>\r\n            <Box key={promo.id}>\r\n                {promo.title}\r\n            </Box>\r\n        </CarouselLink>\r\n    ));\r\n    \r\n    return (\r\n    <CarouselWrapper>\r\n        <AliceCarousel\r\n            animationType=\"fadeout\" \r\n            animationDuration={800}\r\n            disableButtonsControls\r\n            infinite\r\n            items={items}\r\n            mouseTracking\r\n            autoPlay\r\n            autoPlayInterval={4000}\r\n        />\r\n    </CarouselWrapper>\r\n    )\r\n};\r\n\r\nexport default Carousel;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nconst ProtectedRoute = ({component: Component, auth, ...rest}) => {\r\n    return (\r\n        <Route \r\n            {...rest} \r\n            render={props => {\r\n            return auth \r\n                ? <Component {...props} /> \r\n                : <Redirect to='/login' />\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ProtectedRoute;","import styled from 'styled-components';\r\n\r\nexport const GridContainer = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n\tgrid-gap: 50px;\r\n`;\r\n\r\n","import styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const GridElement = styled.div`\r\n\tmin-height: 300px;\r\n\tpadding: 15px 0;\r\n\tbackground-color: rgba( 255, 255, 255, 0.1 );\r\n\tposition: relative;\r\n\r\n\t&:before {\r\n    \tcontent: '';\r\n\t\tposition: absolute;\r\n\t\tbottom: 0; left: 0;\r\n\t\tborder-bottom: 40px solid rgb(32, 32, 32);\r\n\t\tborder-right: 40px solid transparent;\r\n\t\twidth: 0;\r\n    }\r\n`;\r\n\r\nexport const CustomLink = styled(Link)`\r\n    text-decoration: none;\r\n\tcolor: rgba(255,255,255,.75);\r\n\tfont-size: 1.1em;\r\n`;\r\n\r\nexport const Btn = styled.div`\r\n\tbackground-color: #33C333;\r\n\tdisplay:inline-block;\r\n\tfont-size:18px;\r\n\tpadding: 8px 20px;\r\n\ttext-decoration:none;\r\n\tposition: relative;\r\n\tcursor: pointer;   \r\n\t\r\n    &:hover {\r\n        background-color:#269126;\r\n    }\r\n    \r\n    &:active {\r\n        position:relative;\r\n        top:2px;\r\n    }\r\n` ","import { useDispatch } from 'react-redux';\r\nimport { addProductToCart } from '../../state/cart/cartActions';\r\n\r\nimport { GridElement, CustomLink, Btn } from './productItem.css';\r\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport WatchIcon from '@material-ui/icons/Watch';\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\n\r\nimport React from 'react';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\n\r\nconst ProductItem = ({ productInfo, enqueueSnackbar }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const productIcon = [\r\n        <PhoneAndroidIcon style={{ fontSize: 50 }}/>,\r\n        <WatchIcon style={{ fontSize: 50 }}/>,\r\n        <CategoryIcon style={{ fontSize: 50 }}/>,\r\n        <ComputerIcon style={{ fontSize: 50 }}/>\r\n    ]\r\n\r\n    const handleAddToCart = () => {\r\n        dispatch(addProductToCart({\r\n            productId : productInfo.id,\r\n            productName : productInfo.name,\r\n            price : productInfo.promo_id ? productInfo.promo_price : productInfo.price,\r\n            enqueueSnackbar\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <GridElement key={productInfo.id}>\r\n\r\n            <CustomLink to={`/product/${productInfo.id}`}>\r\n                {productIcon[productInfo.category_id-1] || \r\n            <CategoryIcon style={{ fontSize: 50 }} />}\r\n                <br/><br/>\r\n\r\n                {productInfo.name}\r\n                <br/><br/>\r\n                \r\n                {productInfo.promo_id \r\n                ? Number.parseFloat(productInfo.promo_price).toFixed(2) + \" zł\" \r\n                : Number.parseFloat(productInfo.price).toFixed(2) + \" zł\"}\r\n            </CustomLink>\r\n\r\n            <br/><br/>\r\n            \r\n            <Box component=\"fieldset\" mb={1} borderColor=\"transparent\">\r\n                <Rating name=\"read-only\" \r\n                        value={parseFloat(productInfo.rating)}\r\n                        readOnly\r\n                        precision={0.5} />\r\n                <hr/>\r\n            </Box>\r\n\r\n            <Btn onClick={ handleAddToCart }>\r\n                <ShoppingCartIcon/>\r\n            </Btn>\r\n        </GridElement>\r\n        \r\n    );\r\n}\r\n\r\nexport default ProductItem;","import React from 'react';\r\nimport { GridContainer } from './productGrid.css';\r\nimport ProductItem from './ProductItem';\r\n\r\nconst ProductGrid = ({ productsInfo, enqueueSnackbar }) => {\r\n\r\n    const items = productsInfo.map(item => (\r\n        <ProductItem \r\n            productInfo={item}\r\n            enqueueSnackbar={enqueueSnackbar} \r\n        />\r\n    ));\r\n\r\n\r\n    return (\r\n        <GridContainer>\r\n            {items}\r\n        </GridContainer>\r\n    );\r\n}\r\n\r\nexport default ProductGrid;","import styled from 'styled-components';\r\n\r\nexport const Span = styled.span`\r\n    font-size: 150%;\r\n`;","import Rating from '@material-ui/lab/Rating';\r\nimport { Span } from './commentItem.css';\r\n\r\nconst CommentItem = ({commentData}) => {\r\n    \r\n    return (\r\n        <article>            \r\n            <hr/>\r\n            <br/>\r\n            <header>\r\n                <Span>{commentData.nick}</Span>\r\n                <Rating name=\"read-only\" \r\n                        value={parseInt(commentData.stars)}\r\n                        readOnly />\r\n            </header>\r\n            <p>\r\n                {commentData.description}\r\n            </p>\r\n            <br/>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default CommentItem;","import './commentForm.css'\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { createCommentToProduct } from 'state/comments/commentsActions';\r\n\r\n\r\nconst CommentForm = ({ userId, userName, productId }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [nick, setNick] = useState(userName || '');\r\n    const [commentText, setCommentText] = useState('');\r\n    const [rate, setRate] = useState(2);\r\n\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch(createCommentToProduct({\r\n            nick,\r\n            stars: parseInt(rate),\r\n            description: commentText,\r\n            productId,\r\n            authorId:userId \r\n        }));\r\n    } \r\n    \r\n\r\n    return (\r\n        <>\r\n            <form id=\"comment\" className=\"form\" onSubmit={handleSubmit}>\r\n\r\n                <label htmlFor=\"nick\">Nick</label><br/>\r\n                <input type=\"text\" id=\"nick\" name=\"nick\" placeholder=\"Nick\" value={nick} required \r\n                onChange={(event) => setNick(event.target.value)}/>\r\n                \r\n                <Box component=\"fieldset\" width={300}>\r\n                    <Typography component=\"legend\">Twoja ocena</Typography>\r\n                    <Rating\r\n                        name=\"rating\"\r\n                        value={rate}\r\n                        onChange={(event, newValue) => {\r\n                        setRate(newValue);\r\n                    }}\r\n                    />\r\n                </Box>\r\n                <br/>\r\n\r\n                <textarea name=\"commentText\" id=\"commentText\" placeholder=\"Twój komentarz\"\r\n                onChange={(event) => setCommentText(event.target.value)}></textarea>\r\n                <br/>\r\n                \r\n                <button type=\"submit\" id=\"addCommBtn\">Dodaj komentarz</button>\r\n                <br/><br/>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CommentForm;","import styled from 'styled-components';\r\n\r\nexport const CommentsWrapper = styled.div`\r\n    text-align: left;\r\n`;\r\n","import CommentItem from './CommentItem';\r\nimport CommentForm from './CommentForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport React, { useEffect } from 'react';\r\nimport { getCommentsToProduct } from 'state/comments/commentsActions';\r\nimport { CommentsWrapper } from './comments.css';\r\n\r\n\r\nconst Comments = ({ productId }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect( () => {\r\n        dispatch(getCommentsToProduct(productId));\r\n    }, [dispatch, productId]);\r\n\r\n    const comments = useSelector(status => status.comments);\r\n    const auth = useSelector(status => status.auth);\r\n\r\n    comments.sort((a, b) => b.id - a.id);\r\n    const commentsList = comments.map( \r\n        comment => <CommentItem commentData={comment}/>\r\n    );\r\n    \r\n    return (\r\n        <CommentsWrapper>\r\n            {auth.isLoggedIn \r\n            ? <CommentForm userId={auth.user.id}\r\n                            userName={auth.user.name}\r\n                            productId={productId}/> \r\n            : null}\r\n            {commentsList}\r\n        </CommentsWrapper>\r\n    );\r\n}\r\n\r\n\r\nexport default Comments;","import { useState } from 'react';\r\nimport { addProductToCart,\r\n         reduceProductQuantityFromCart} from 'state/cart/cartActions';\r\n    \r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst ControllQuantity = ({productId, quantity, enqueueSnackbar}) => {\r\n    const dispatch = useDispatch();\r\n    const [count, setCount] = useState(quantity);\r\n\r\n    return (\r\n          <>\r\n                <IconButton aria-label=\"info\" \r\n                            onClick={ () => {\r\n                                            dispatch(reduceProductQuantityFromCart({\r\n                                                productId,\r\n                                                enqueueSnackbar\r\n                                            }));\r\n                                            setCount(count-1);\r\n                            }}\r\n                >\r\n                    <RemoveIcon style={{color: 'darkgray', fontSize: 20}} />\r\n                </IconButton>  \r\n\r\n                {count}\r\n                \r\n                <IconButton aria-label=\"info\"                                         \r\n                            onClick={ () => {\r\n                                dispatch(addProductToCart({\r\n                                    productId,\r\n                                    enqueueSnackbar\r\n                                }));\r\n                                setCount(count+1);\r\n                            }}\r\n                >\r\n                    <AddIcon style={{color: 'darkgray', fontSize: 20}} />\r\n                </IconButton> \r\n          </>\r\n      )\r\n}\r\n\r\nexport default ControllQuantity;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport { removeProductFromCart } from 'state/cart/cartActions';\r\nimport ControllQuantity from './ControllQuantity';\r\n\r\nconst columns = [\r\n  {\r\n    id: 'spanLeft',\r\n    minWidth: 30\r\n  },\r\n  {\r\n    id: 'name',\r\n    label: 'Produkt',\r\n    minWidth: 300\r\n  },\r\n  {\r\n    id: 'price',\r\n    label: 'Cena',\r\n    minWidth: 100,\r\n    align: 'right',\r\n  },\r\n  {\r\n    id: 'quantity',\r\n    label: 'Ilość',\r\n    minWidth: 70,\r\n    align: 'center',\r\n  },\r\n  {\r\n    id: 'delete',\r\n    minWidth: 70,\r\n    align: 'right',\r\n  },\r\n  {\r\n    id: 'spanRight',\r\n    minWidth: 30\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    backgroundColor: 'gray',\r\n  },\r\n  head: {\r\n    backgroundColor: 'gray',\r\n  },\r\n});\r\n\r\nconst Cart = ({ enqueueSnackbar }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const cartItems = useSelector(state => state.cart.productList);\r\n  const cartValue = useSelector(state => state.cart.value);\r\n  cartItems.sort((a, b) => a.id - b.id);\r\n\r\n\r\n  const handleCellType = (type, product) => {\r\n    switch (type) {\r\n      case 'quantity': {\r\n        return <ControllQuantity\r\n                  productId={product.id}\r\n                  quantity={product.quantity}\r\n                  enqueueSnackbar={enqueueSnackbar}\r\n                />\r\n      } case 'delete': {\r\n        return <IconButton aria-label=\"info\"                                         \r\n                           onClick={ () => dispatch(removeProductFromCart({\r\n                      productId: product.id,\r\n                      enqueueSnackbar\r\n                    }))}\r\n                >\r\n                    <DeleteIcon style={{color: 'darkgray', fontSize: 20}} />\r\n                </IconButton> \r\n      } case 'price': {\r\n        return product.price + \" zł\";\r\n      }\r\n      default:\r\n        return product[type];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Paper>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader >\r\n          <TableHead  className={classes.head}>\r\n            <TableRow key=\"main\">\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  <h4>{column.label}</h4>\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {cartItems.map((product) => {\r\n              return (\r\n                <TableRow key={product.id}>\r\n                  {columns.map((column) => {\r\n                    return (\r\n                      <TableCell align={column.align}>\r\n                        {handleCellType(column.id, product)}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n            <TableRow key=\"summary\">\r\n              <TableCell colSpan={4} align={'right'}>\r\n                Suma\r\n                </TableCell>\r\n              <TableCell align={'center'}\r\n                colSpan={2}>\r\n                {parseFloat(cartValue).toFixed(2) + \" zł\"}\r\n              </TableCell>\r\n            </TableRow>\r\n\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Cart;","import styled from 'styled-components';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nexport const ShippingWrapper = styled(Container)`\r\n    background-color: rgba(255,255,255, 0.35);\r\n    color: rgb(239, 255, 250, 0.8);\r\n    font-size: 180%;\r\n    border-radius: 15px;\r\n    padding: 10px;\r\n`","import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Select from '@material-ui/core/Select';\r\nimport { ShippingWrapper } from './shippingForm.css';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addAdress, getUserAddresses } from 'state/cart/cartActions';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nconst shippingMethods = [\r\n  {\r\n    price : 5,\r\n    name : 'Gołąb [5 zł]'\r\n  },\r\n  {\r\n    price : 10,\r\n    name : 'Sowa [10 zł]'\r\n  },  \r\n  {\r\n    price : 15,\r\n    name : 'Jastrząb ekspres [15 zł]'\r\n  }\r\n]\r\n\r\n\r\nconst ShippingForm = ({handleNext, handleBack}) => {\r\n    const [addressId, setAddressId] = useState(-1);\r\n    const [country, setCountry] = useState('');\r\n    const [city, setCity] = useState('');\r\n    const [postcode, setPostcode] = useState('');\r\n    const [street, setStreet] = useState('');\r\n    const [building, setBuilding] = useState('');\r\n    const [apartment, setApartment] = useState('');\r\n    const [shippingMethod, setShippingMethod] = useState(shippingMethods[0].name);\r\n    const [shippingValue, setShippingValue] = useState(shippingMethods[0].price);\r\n\r\n    const [isCountryValid, setIsCountryValid] = useState(true);\r\n    const [isPostcodeValid, setIsPostcodeValid] = useState(true);\r\n    const [isCityValid, setIsCityValid] = useState(true);\r\n    const [isStreetValid, setIsStreetValid] = useState(true);\r\n\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n  \r\n    const userId = useSelector(state => state.auth.user.id);\r\n    const currentAddressState = useSelector(state => state.cart.address);\r\n    const userAddresses = useSelector(state => state.cart.userAddresses);\r\n\r\n    useEffect( () => {\r\n        dispatch(getUserAddresses({userId}));\r\n        setAddressId(currentAddressState.addressId || -1);\r\n        setCountry(currentAddressState.country || '');\r\n        setCity(currentAddressState.city || '');\r\n        setPostcode(currentAddressState.postcode || '');\r\n        setStreet(currentAddressState.street || '');\r\n        setBuilding(currentAddressState.building || '');\r\n        setApartment(currentAddressState.apartment || '');\r\n        setShippingMethod(currentAddressState.shippingMethod || shippingMethods[0].name);\r\n        setShippingValue(currentAddressState.shippingValue || shippingMethods[0].price);\r\n    },[currentAddressState, dispatch, userId]);\r\n\r\n\r\n    const validateCountry = () => {\r\n      const regName = /[0-9]+/g;\r\n      return ( !regName.test(country) && country.length > 2 )\r\n    }\r\n\r\n    const validatePostCode = () => {\r\n      const regPhoneNumber = /[0-9]{2}-[0-9]{3}/;\r\n      return (regPhoneNumber.test(postcode) && postcode.length === 6);\r\n    }\r\n\r\n    const validateCity = () => {\r\n      const regName = /[0-9]+/g;\r\n      return ( !regName.test(city) && city.length > 2 )\r\n    }\r\n\r\n    const validateStreet = () => {\r\n      const regName = /[0-9]+/g;\r\n      return ( !regName.test(street) && street.length > 2 )\r\n    }\r\n\r\n    const validate = () => {\r\n      let isValid = validateCountry()\r\n              && validatePostCode()\r\n              && validateCity()\r\n              && validateStreet();\r\n\r\n      return isValid;\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      if(validate()){\r\n        dispatch(addAdress({ \r\n          addressId, \r\n          country, \r\n          postcode, \r\n          city, \r\n          street, \r\n          building, \r\n          apartment, \r\n          shippingMethod, \r\n          shippingValue }));\r\n        handleNext();\r\n      }else{\r\n        alert(\"wpisz poprawny adres\");\r\n      }\r\n    } \r\n\r\n    const handleExistingAddressSelect = ({addressId}) => {\r\n      setAddressId(addressId);\r\n      if(addressId !== -1){\r\n        const address = userAddresses.filter(ad => ad.id === addressId)[0];\r\n        setCountry(address.country || '');\r\n        setCity(address.city || '');\r\n        setPostcode(address.postcode || '');\r\n        setStreet(address.street || '');\r\n        setBuilding(address.building || '');\r\n        setApartment(address.apartment || '');\r\n      }else{\r\n        setCountry('');\r\n        setCity('');\r\n        setPostcode('');\r\n        setStreet('');\r\n        setBuilding('');\r\n        setApartment('');\r\n      }\r\n    } \r\n\r\n    const handleShippingChange = ({value}) => {\r\n      const method = shippingMethods.filter(record => record.price === value);\r\n      setShippingValue(value);\r\n      setShippingMethod(method[0].name);\r\n    }\r\n  \r\n    return (\r\n      <ShippingWrapper component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n            <LocalShippingIcon fontSize=\"large\"/>\r\n          <form \r\n            className={classes.form} \r\n            onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                  <hr/>\r\n                  <InputLabel id=\"shipping-label\">Twoje adresy:</InputLabel>\r\n                  <Select\r\n                  labelId=\"shipping-label\"\r\n                  id=\"shipping\"\r\n                  fullWidth\r\n                  value={addressId}\r\n                  onChange={e => {\r\n                    handleExistingAddressSelect({addressId:e.target.value});\r\n                  }}\r\n                  >\r\n                    <MenuItem value={-1} key={-1}>{\"Nowy Adres\"}</MenuItem>\r\n                    {userAddresses.map(address => (\r\n                      <MenuItem value={address.id} key={address.id}>{address.city + \", \" + address.street}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                  <hr/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                    value={country}\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    variant=\"filled\"\r\n                    id=\"country\"\r\n                    label=\"Państwo\"\r\n                    name=\"country\"\r\n                    autoComplete=\"country\"\r\n                    onBlur={() => setIsCountryValid(validateCountry())}\r\n                    helperText={isCountryValid ? null : \"Państwo musi mieć co najmnije 3 znaki i nie powinno zawierać cyfr\"}\r\n                    error={!isCountryValid}\r\n                    onChange={(event) => setCountry(event.target.value)}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                    value={postcode}\r\n                    variant=\"filled\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"postcode\"\r\n                    label=\"Kod pocztowy\"\r\n                    id=\"postcode\"\r\n                    autoComplete=\"postcode\"\r\n                    onBlur={ () => setIsPostcodeValid(validatePostCode())}\r\n                    helperText={ isPostcodeValid ? null :\"format: 12-123\"}\r\n                    error={!isPostcodeValid}\r\n                    onChange={(event) => setPostcode(event.target.value)}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                    value={city}\r\n                    variant=\"filled\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"post_town\"\r\n                    label=\"Miasto\"\r\n                    id=\"post_town\"\r\n                    autoComplete=\"post_town\"\r\n                    onBlur={() => setIsCityValid(validateCountry())}\r\n                    helperText={isCityValid ? null : \"Miasto musi mieć co najmnije 3 znaki i nie powinno zawierać cyfr\"}\r\n                    error={!isCityValid}\r\n                    onChange={(event) => setCity(event.target.value)}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                    value={street}\r\n                    variant=\"filled\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"street\"\r\n                    label=\"Ulica\"\r\n                    id=\"street\"\r\n                    autoComplete=\"street\"\r\n                    onBlur={() => setIsStreetValid(validateStreet())}\r\n                    helperText={isStreetValid ? null : \"Ulica musi mieć co najmnije 3 znaki i nie powinno zawierać cyfr\"}\r\n                    error={!isStreetValid}\r\n                    onChange={(event) => setStreet(event.target.value)}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                    value={building}\r\n                    variant=\"filled\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"building\"\r\n                    label=\"Nr budynku\"\r\n                    name=\"building\"\r\n                    autoComplete=\"building\"\r\n                    onChange={(event) => setBuilding(event.target.value)}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                    value={apartment}\r\n                    variant=\"filled\"                    \r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    name=\"apartment\"\r\n                    label=\"Nr mieszkania\"\r\n                    id=\"apartment\"\r\n                    autoComplete=\"apartment\"\r\n                    onChange={(event) => setApartment(event.target.value)}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <hr/>\r\n                    <InputLabel id=\"shipping-label\">Metoda dostawy</InputLabel>\r\n                    <Select\r\n                    labelId=\"shipping-label\"\r\n                    id=\"shipping\"\r\n                    fullWidth\r\n                    value={shippingValue}\r\n                    onChange={e => handleShippingChange({value:e.target.value})}\r\n                    >\r\n                      {shippingMethods.map(method => (\r\n                        <MenuItem value={method.price}>{method.name}</MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                    <hr/>\r\n                </Grid>\r\n            </Grid>\r\n          <div>\r\n              <br/>\r\n            <Button onClick={handleBack} \r\n                    className={classes.button}>\r\n                Back\r\n            </Button>\r\n\r\n            <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n            >\r\n                {'Next'}\r\n            </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </ShippingWrapper>\r\n    );\r\n}\r\n\r\nexport default ShippingForm;","import styled from 'styled-components';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nexport const PaymentWrapper = styled(Container)`\r\n    background-color: rgba(255,255,255, 0.35);\r\n    color: rgb(239, 255, 250, 0.8);\r\n    font-size: 180%;\r\n    border-radius: 15px;\r\n    padding: 10px;\r\n`","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PaymentWrapper } from './paymentForm.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { addPaymentMethod } from 'state/cart/cartActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(2),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\nconst PaymentForm = ({handleNext, handleBack}) => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState(\"Blik\");\r\n\r\n    const currentPaymentState = useSelector(state => state.cart.payment);\r\n\r\n    useEffect( () => {\r\n        setPaymentMethod(currentPaymentState ? \"Blik\" : currentPaymentState);\r\n    },[currentPaymentState]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addPaymentMethod({ paymentMethod }));\r\n        handleNext();\r\n    } \r\n\r\n    return (\r\n        <PaymentWrapper component=\"main\" maxWidth=\"xs\">\r\n          <div className={classes.paper}>\r\n              <MonetizationOnIcon fontSize=\"large\"/>\r\n            <form \r\n              className={classes.form} \r\n              onSubmit={handleSubmit}>\r\n              <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                      <hr/>\r\n                      <InputLabel id=\"payment-label\">Metoda płatności</InputLabel>\r\n                      <Select\r\n                      labelId=\"payment-label\"\r\n                      id=\"payment\"\r\n                      fullWidth\r\n                      value={paymentMethod}\r\n                      onChange={e => setPaymentMethod(e.target.value)}\r\n                      >\r\n                      <MenuItem value={\"Karta\"}>Karta</MenuItem>\r\n                      <MenuItem value={\"Gotówka przy odbiorze\"}>Gotówka przy odbiorze</MenuItem>\r\n                      <MenuItem value={\"Blik\"}>Blik</MenuItem>\r\n                      </Select>\r\n                      <hr/>\r\n                  </Grid>\r\n              </Grid>\r\n            <div>\r\n                <br/>\r\n              <Button onClick={handleBack} \r\n                      className={classes.button}>\r\n                  Back\r\n              </Button>\r\n  \r\n              <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n              >\r\n                  {'Next'}\r\n              </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </PaymentWrapper>\r\n      );\r\n}\r\n\r\nexport default PaymentForm;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport InfoRoundedIcon from '@material-ui/icons/InfoRounded';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n        '& > *': {\r\n            borderBottom: 'unset',\r\n        },\r\n    },\r\n});\r\n\r\nconst Row = ({ rowData }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useRowStyles();\r\n    const datePlaced = rowData.datePlaced.split('T')[0];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow  className={classes.root} hover>\r\n                <TableCell>\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    {rowData.title}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{datePlaced}</TableCell>\r\n                <TableCell align=\"right\">{rowData.email}</TableCell>\r\n                <TableCell align=\"right\">{rowData.productsCost + \" zł\"}</TableCell>\r\n                \r\n                {rowData.address_id !== null \r\n                    ? <>\r\n                        <TableCell align=\"right\">\r\n                            { rowData.isPaid\r\n                                ? <CheckCircleOutlineIcon style={{color: '#22AB2B'}}/>\r\n                                : <HighlightOffIcon style={{color: '#F02416'}}/>\r\n                            }\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{rowData.orderStatus}</TableCell>\r\n\r\n                        <TableCell align=\"right\">\r\n                            <IconButton aria-label=\"info\">\r\n                                <Link to={`/order/details/${rowData.order_id}`}>               \r\n                                    <InfoRoundedIcon style={{color: '#3f51b5'}}/>\r\n                                </Link>         \r\n                            </IconButton>    \r\n                        </TableCell>\r\n                        </>\r\n                    : <><TableCell/><TableCell/><TableCell/></>\r\n                }\r\n\r\n            </TableRow>\r\n\r\n            <TableRow >\r\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={8}>\r\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                        <Box margin={1}>\r\n                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                Zamówione produkty\r\n                            </Typography>\r\n                            <Table size=\"small\" aria-label=\"purchases\">\r\n                                <TableHead>\r\n                                    <TableRow >\r\n                                        <TableCell>Nazwa</TableCell>\r\n                                        <TableCell>Cena</TableCell>\r\n                                        <TableCell align=\"right\">Ilość</TableCell>\r\n                                        <TableCell align=\"right\">Suma</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {rowData.productList.map((product) => (\r\n                                        <TableRow >\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {product.name}\r\n                                            </TableCell>\r\n                                            <TableCell>{product.pricePerItem + \" zł\"}</TableCell>\r\n                                            <TableCell align=\"right\">{product.quantity}</TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {parseFloat(product.quantity * product.pricePerItem).toFixed(2) + \" zł\"}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Box>\r\n                        <br/>\r\n                        <br/>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Row;","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport Row from './OrderListRow';\r\n\r\nconst OrderList = () => {\r\n    const orders = useSelector(state => state.orders); \r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table aria-label=\"collapsible table\">\r\n                <TableHead>\r\n                    <TableRow key=\"title\">\r\n                        <TableCell />\r\n                        <TableCell>Tytuł</TableCell>\r\n                        <TableCell align=\"right\">Data złożenia</TableCell>\r\n                        <TableCell align=\"right\">Email</TableCell>\r\n                        <TableCell align=\"right\">Wartość</TableCell>\r\n                        <TableCell align=\"right\">Opłacone</TableCell>\r\n                        <TableCell align=\"right\">Status</TableCell>\r\n                        <TableCell >Szczegóły</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {orders.map((order) => (\r\n                        <Row rowData={order} />\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nexport default OrderList;","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport InfoRoundedIcon from '@material-ui/icons/InfoRounded';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { setToEditionPromo } from 'state/promo/promoActions';\r\n\r\nconst Row = ({ promoData, setEditFormOpen }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleInfoBtn = () => {\r\n        dispatch(setToEditionPromo(promoData));\r\n        setEditFormOpen(true);\r\n    }\r\n\r\n    return (\r\n        <TableRow hover key={promoData.title}>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n            {promoData.title}\r\n            </TableCell>\r\n            <TableCell align=\"right\">{parseFloat(promoData.discount * 100) + \"%\"}</TableCell>\r\n            <TableCell align=\"right\">\r\n                <IconButton aria-label=\"info\"\r\n                            onClick={handleInfoBtn}>\r\n                    <InfoRoundedIcon style={{color: '#3f51b5'}}/>\r\n                </IconButton>    \r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n}\r\n\r\nexport default Row;\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Row from './PromoListRow';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\n\r\nconst PromoList = ({ setEditFormOpen }) => {\r\n    const classes = useStyles();\r\n    const promos = useSelector(state => state.promos.promosList)\r\n    promos.sort((a, b) => a.id - b.id);\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Nazwa promocji</TableCell>\r\n                        <TableCell align=\"right\">Wartość zniżki</TableCell>\r\n                        <TableCell align=\"right\">Kliknij by edytować</TableCell>\r\n                        \r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    { promos.map(promo => \r\n                        <Row \r\n                            promoData={promo}\r\n                            setEditFormOpen={setEditFormOpen}\r\n                        />)}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nexport default PromoList;","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { createPromo } from 'state/promo/promoActions';\r\nimport './addPromoForm.css';\r\n\r\nconst AddPromoForm = ({ enqueueSnackbar }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [discountValue, setDiscountValue] = useState(1);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch(createPromo({\r\n            title,\r\n            description,\r\n            discountValue : parseFloat(discountValue / 100),\r\n            enqueueSnackbar\r\n        }));\r\n    } \r\n    \r\n\r\n    return (\r\n        <>\r\n            <br/>\r\n            <form id=\"addPromo\" class=\"addPromoForm\" onSubmit={handleSubmit}>\r\n\r\n                <input type=\"text\" name=\"title\" id=\"title\" placeholder=\"Nazwa promocji\" required \r\n                onChange={(event) => setTitle(event.target.value)}/>\r\n                {\"Wartość zniżki: \"}\r\n                <input type=\"number\" name=\"discountValue\" id=\"discountValue\" placeholder={1} required \r\n                onChange={(event) => setDiscountValue(event.target.value)}/> {\"(%)\"} <br/><br/>\r\n\r\n                <textarea name=\"description\" id=\"description\" placeholder=\"Opis\"\r\n                onChange={(event) => setDescription(event.target.value)}></textarea>\r\n\r\n                <button type=\"submit\" id=\"addPromoBtn\">Dodaj Promocję</button>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddPromoForm;","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { editPromo, deletePromo } from 'state/promo/promoActions';\r\nimport './addPromoForm.css';\r\n\r\nconst EditPromoForm = ({ enqueueSnackbar }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [discountValue, setDiscountValue] = useState(1);\r\n\r\n    const promoEdit = useSelector(state => state.promos.currentlyEdited);\r\n\r\n    useEffect(() => {\r\n        setTitle(promoEdit.title || '');\r\n        setDescription(promoEdit.description || '');\r\n        setDiscountValue(parseFloat(promoEdit.discount * 100) || 1);\r\n    },[promoEdit]);\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch(editPromo({\r\n            id : promoEdit.id,\r\n            title,\r\n            description,\r\n            discountValue : parseFloat(discountValue / 100),\r\n            enqueueSnackbar\r\n        }));\r\n    } \r\n\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch(deletePromo({\r\n            id : promoEdit.id,\r\n            enqueueSnackbar\r\n        }));\r\n    } \r\n    \r\n    const showBtns = () => {\r\n        return (\r\n            <> \r\n                <button id=\"updatePromoBtn\" onClick={handleEdit}>Edytuj</button>\r\n                {\" \"}\r\n                <button id=\"deletePromoBtn\" onClick={handleDelete}>Usuń</button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div id=\"addPromo\">\r\n            <br/>\r\n\r\n            <input type=\"text\" name=\"title\" id=\"title\" value={title} required \r\n            onChange={(event) => setTitle(event.target.value)}/>\r\n            \r\n            {\"Wartość zniżki: \"}\r\n\r\n            <input type=\"number\" name=\"discountValue\" id=\"discountValue\" value={discountValue} required \r\n            onChange={(event) => setDiscountValue(event.target.value)}/> {\"(%)\"}<br/><br/>\r\n\r\n            <textarea name=\"description\" id=\"description\" value={description}\r\n            onChange={(event) => setDescription(event.target.value)}></textarea>\r\n\r\n            {promoEdit.id ? showBtns() : null}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditPromoForm;","import { useSnackbar } from 'notistack';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddPromoForm from './AddPromoForm';\r\nimport EditPromoForm from './EditPromoForm';\r\n\r\nconst PromoForm = ({ editFormOpen, setEditFormOpen }) => {\r\n    \r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    return (\r\n        <>\r\n            <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\r\n                <Button style={editFormOpen ? {background:'rgb(60, 78, 177)'} : {background:'rgba(60, 78, 177, 0.3)'}}\r\n                        onClick={() => setEditFormOpen(false)}>\r\n                            Dodaj nową promocję\r\n                </Button>\r\n                <Button style={!editFormOpen ? {background:'rgb(60, 78, 177)'} : {background:'rgba(60, 78, 177, 0.3)'}}\r\n                        onClick={() => setEditFormOpen(true)}\r\n                        >\r\n                            Edytuj istniejącą\r\n                </Button>\r\n            </ButtonGroup>\r\n\r\n            <hr/>\r\n            {\r\n                editFormOpen \r\n                ? <EditPromoForm enqueueSnackbar={enqueueSnackbar}/> \r\n                : <AddPromoForm enqueueSnackbar={enqueueSnackbar}/>\r\n            }\r\n            <hr/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PromoForm;","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport InfoRoundedIcon from '@material-ui/icons/InfoRounded';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { setToEditProduct } from 'state/products/productActions';\r\n\r\nconst Row = ({productData, setDetailsFromOpen}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleInfoBtn = () => {\r\n        dispatch(setToEditProduct(productData));\r\n        setDetailsFromOpen(true);\r\n    }\r\n\r\n    return (\r\n        <TableRow hover key={productData.id}>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n            {productData.id}\r\n            </TableCell>\r\n            <TableCell align=\"left\">{productData.name}</TableCell>\r\n            <TableCell align=\"right\">{productData.promo_id}</TableCell>\r\n            <TableCell align=\"right\">{productData.inStock}</TableCell>\r\n            <TableCell align=\"right\">{productData.category_group}</TableCell>\r\n            <TableCell align=\"right\">\r\n                <IconButton aria-label=\"info\"\r\n                            onClick={handleInfoBtn}>\r\n                    <InfoRoundedIcon style={{color: '#3f51b5'}}/>\r\n                </IconButton>    \r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n}\r\n\r\nexport default Row;\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Row from './ProductListRow';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\n\r\nconst ProductList = ({ setDetailsFromOpen }) => {\r\n    const classes = useStyles();\r\n    const products = useSelector(state => state.products.allProducts);\r\n\r\n    products.sort((a, b) => a.id - b.id);\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell align=\"left\">Nazwa</TableCell>\r\n                        <TableCell align=\"right\">ID promocji</TableCell>\r\n                        <TableCell align=\"right\">Stan magazynowy</TableCell>\r\n                        <TableCell align=\"center\">Typ</TableCell>\r\n                        <TableCell align=\"right\">Kliknij by edytować</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    { products.map(product => \r\n                        <Row productData={product}\r\n                             setDetailsFromOpen={setDetailsFromOpen}\r\n                    />)}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nexport default ProductList;","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { createProduct } from 'state/products/productActions';\r\nimport './addProductForm.css';\r\n\r\nconst AddProductForm = ({ enqueueSnackbar }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [price, setPrice] = useState(0.0);\r\n    const [profitMargin, setProfitMargin] = useState(1)\r\n    const [producer, setProducer] = useState('');\r\n    const [warranty, setWarranty] = useState(1);\r\n    const [promo_id, setPromo_id] = useState(-1);\r\n    const [category_id, setCategory_id] = useState(1);\r\n\r\n    const categories = useSelector(state => state.categories.categoriesList);\r\n    const promos = useSelector(state => state.promos.promosList);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch(createProduct({\r\n            name,\r\n            description, \r\n            price,\r\n            profitMargin :  parseFloat(profitMargin / 100),  \r\n            producer, \r\n            warranty, \r\n            promo_id : (promo_id === -1 ? null : promo_id), \r\n            category_id\r\n        }, enqueueSnackbar\r\n        ));\r\n    } \r\n\r\n    return (\r\n        <>\r\n            <br/>\r\n            <h2><span className=\"productFormSpan\">Szczegóły nowego produktu:</span></h2>\r\n            <form id=\"addProductForm\" className=\"addProductForm\" onSubmit={handleSubmit}>\r\n\r\n                <input type=\"text\" name=\"name-form\" id=\"name-form\" placeholder=\"Nazwa produktu\" required \r\n                onChange={(event) => setName(event.target.value)}/>\r\n                \r\n                <input type=\"text\" name=\"producer\" id=\"producer\" placeholder=\"Producent\" required \r\n                onChange={(event) => setProducer(event.target.value)}/>\r\n\r\n                <span className=\"productFormSpan\">Cena:</span>\r\n                <input type=\"text\" name=\"price\" id=\"price\" placeholder={1} required \r\n                onChange={(event) => setPrice(event.target.value)}/> \r\n                <span className=\"productFormSpan\">[zł]</span><br/>\r\n\r\n                <span className=\"productFormSpan\">Marża:</span>\r\n                <input type=\"number\" name=\"profitMargin\" id=\"profitMargin\" placeholder={1} required \r\n                onChange={(event) => setProfitMargin(event.target.value)}/> \r\n                <span className=\"productFormSpan\">[%]</span>\r\n\r\n                <textarea name=\"description\" id=\"description\" placeholder=\"Opis\"\r\n                onChange={(event) => setDescription(event.target.value)}></textarea>\r\n\r\n                <span className=\"productFormSpan\">Długość gwarancji:</span>\r\n                <input type=\"number\" name=\"warranty\" id=\"warranty\" placeholder={1} required \r\n                onChange={(event) => setWarranty(event.target.value)}/>\r\n                <span className=\"productFormSpan\">[w miesiącach]</span> \r\n\r\n\r\n                <br/><br/>\r\n                Promocja:\r\n                <Grid container id=\"promoId\">\r\n                    <Grid item xs={12}>\r\n                        <Select\r\n                        style={{background:'rgb(60, 78, 177)'}}\r\n                        labelId=\"promoId-label\"\r\n                        fullWidth\r\n                        value={promo_id}\r\n                        onChange={e => setPromo_id(e.target.value)}\r\n                        >\r\n                            <MenuItem value={-1}>Brak</MenuItem>\r\n                            {promos.map(promo => <MenuItem value={promo.id}>{promo.title}</MenuItem>)}\r\n                        </Select>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                <br/>\r\n                Kategoria:\r\n                <Grid container id=\"categoryId\">\r\n                    <Grid item xs={12}>\r\n                        <Select\r\n                        style={{background:'rgb(60, 78, 177)'}}\r\n                        labelId=\"categoryId-label\"\r\n                        fullWidth\r\n                        value={category_id}\r\n                        onChange={e => setCategory_id(e.target.value)}\r\n                        >\r\n                            {categories.map(cat => <MenuItem value={cat.id}>{cat.category_name + \", \" + cat.category_group}</MenuItem>)}\r\n                        </Select>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <button type=\"submit\" id=\"addProductBtn\">Dodaj Produkt</button>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddProductForm;","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { updateProduct } from 'state/products/productActions';\r\nimport './addProductForm.css';\r\n\r\nconst EditProductDetailsForm = ({ enqueueSnackbar }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [price, setPrice] = useState(0.0);\r\n    const [profitMargin, setProfitMargin] = useState(1)\r\n    const [producer, setProducer] = useState('');\r\n    const [warranty, setWarranty] = useState(1);\r\n    const [promo_id, setPromo_id] = useState(-1);\r\n    const [category_id, setCategory_id] = useState(1);\r\n\r\n    \r\n    const productEdit = useSelector(state => state.products.currentlyEdited)\r\n    const categories = useSelector(state => state.categories.categoriesList);\r\n    const promos = useSelector(state => state.promos.promosList);\r\n\r\n\r\n    useEffect(() => {\r\n        setName(productEdit.name || '');\r\n        setDescription(productEdit.description || '');\r\n        setPrice(productEdit.price || 1);\r\n        setProfitMargin(parseFloat(productEdit.profit_margin * 100) || 1);\r\n        setProducer(productEdit.producer || '');\r\n        setWarranty(productEdit.warranty || 1);\r\n        setPromo_id(productEdit.promo_id || -1);\r\n        setCategory_id(productEdit.category_id || 1);\r\n    },[productEdit]);\r\n\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch(updateProduct({\r\n            id : productEdit.id,\r\n            name,\r\n            description, \r\n            price,\r\n            profitMargin :  parseFloat(profitMargin / 100),  \r\n            producer, \r\n            warranty, \r\n            promo_id : (promo_id === -1 ? null : promo_id), \r\n            category_id\r\n        }, enqueueSnackbar\r\n        ));\r\n    } \r\n\r\n    return (\r\n        <>\r\n            <br/>\r\n            <h2><span class=\"productFormSpan\">Aktualizacja danych produktu:</span></h2>\r\n            <form id=\"addProductForm\" class=\"addProductForm\" onSubmit={handleSubmit}>\r\n                \r\n                <h4 id=\"productName\"><span class=\"productFormSpan\">{name}</span></h4>\r\n                <h4 id=\"productName\"><span class=\"productFormSpan\">{producer}</span></h4>\r\n                \r\n\r\n                <span class=\"productFormSpan\">Cena:</span>\r\n                <input type=\"text\" name=\"price\" id=\"price\" value={price} required \r\n                onChange={(event) => setPrice(event.target.value)}/> \r\n                <span class=\"productFormSpan\">[zł]</span>\r\n\r\n                <br/>\r\n                <span class=\"productFormSpan\">Marża:</span>\r\n                <input type=\"number\" name=\"profitMargin\" id=\"profitMargin\" value={profitMargin} required \r\n                onChange={(event) => setProfitMargin(event.target.value)}/> \r\n                <span class=\"productFormSpan\">[%]</span>\r\n\r\n                <textarea name=\"description\" id=\"description\" value={description}\r\n                onChange={(event) => setDescription(event.target.value)}></textarea>\r\n\r\n                <span class=\"productFormSpan\">Długość gwarancji:</span>\r\n                <input type=\"number\" name=\"warranty\" id=\"warranty\" value={warranty} required \r\n                onChange={(event) => setWarranty(event.target.value)}/>\r\n                <span class=\"productFormSpan\">[w miesiącach]</span> \r\n\r\n                <br/><br/>\r\n                Promocja:\r\n                <Grid container id=\"promoId\">\r\n                    <Grid item xs={12}>\r\n                        <Select\r\n                        style={{background:'rgb(60, 78, 177)'}}\r\n                        labelId=\"promoId-label\"\r\n                        fullWidth\r\n                        value={promo_id}\r\n                        onChange={e => setPromo_id(e.target.value)}\r\n                        >\r\n                            <MenuItem value={-1}>Brak</MenuItem>\r\n                            {promos.map(promo => <MenuItem value={promo.id}>{promo.title}</MenuItem>)}\r\n                        </Select>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                <br/>\r\n                Kategoria:\r\n                <Grid container id=\"categoryId\">\r\n                    <Grid item xs={12}>\r\n                        <Select\r\n                        style={{background:'rgb(60, 78, 177)'}}\r\n                        labelId=\"categoryId-label\"\r\n                        fullWidth\r\n                        value={category_id}\r\n                        onChange={e => setCategory_id(e.target.value)}\r\n                        >\r\n                            {categories.map(cat => <MenuItem value={cat.id}>{cat.category_name + \", \" + cat.category_group}</MenuItem>)}\r\n                        </Select>\r\n                    </Grid>\r\n                </Grid>\r\n                <br/>\r\n                {productEdit.id ? <button type=\"submit\" id=\"updateProductBtn\">Edytuj</button> : null}\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EditProductDetailsForm;","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { updateStorage, getAllProducts } from 'state/products/productActions';\r\nimport './addProductForm.css';\r\n\r\nconst ReduceStorageForm = ({ enqueueSnackbar }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0.0);\r\n    const [quantity, setQuantity] = useState(0);\r\n    \r\n    const productEdit = useSelector(state => state.products.currentlyEdited);\r\n    const auth = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        setName(productEdit.name || '');\r\n        setPrice(productEdit.price || 1);\r\n    },[productEdit]);\r\n\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const title = quantity > 0 \r\n                      ? `Kupno produktu: ${name}`\r\n                      : `Sprzedaż produktu: ${name}`\r\n\r\n        const productsCost = -quantity * price;\r\n\r\n        dispatch(updateStorage({\r\n            id : productEdit.id,\r\n            userId : auth.user.id,\r\n            title,\r\n            price,\r\n            productsCost,\r\n            shippmentPrice : 0,\r\n            quantity : -quantity            \r\n        }, enqueueSnackbar\r\n        ));\r\n        \r\n        dispatch(getAllProducts());\r\n    } \r\n\r\n    return (\r\n        <>\r\n            <br/>\r\n            <h2><span class=\"productFormSpan\">Aktualizacja stanu magazynowego produktu:</span></h2><br/>\r\n            <form id=\"reduceStorageForm\" class=\"reduceStorageForm\" onSubmit={handleSubmit}>\r\n\r\n                <h4 id=\"productName\"><span class=\"productFormSpan\">{name}</span></h4>\r\n            \r\n                <span class=\"productFormSpan\">Dodaj/usuń z magazynu:</span>\r\n                <input type=\"number\" class=\"quantity\" id=\"quantity\" value={quantity} required onChange={(e) => setQuantity(e.target.value)}/>\r\n\r\n                <br/>\r\n                <span class=\"productFormSpan\">Po cenie:</span>\r\n                <input type=\"text\" name=\"price\" id=\"price\" value={price} required \r\n                onChange={(event) => setPrice(event.target.value)}/> \r\n                <span class=\"productFormSpan\">[zł]</span>\r\n                <br/>\r\n                <br/>\r\n                {productEdit.id ? <button type=\"submit\" id=\"updateStorageBtn\">Aktualizuj</button> : null}\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ReduceStorageForm;","import ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddProductForm from './AddProductForm';\r\nimport EditProductDetailsForm from './EditProductDetailsForm';\r\nimport ReduceStorageForm from './ReduceStorageForm';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nconst ProductForm = ({ detailsFormOpen, setDetailsFromOpen }) => {\r\n    \r\n    const { enqueueSnackbar } = useSnackbar();\r\n    \r\n    return (\r\n        <>\r\n            <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\r\n            \r\n                <Button style={detailsFormOpen ? {background:'rgb(60, 78, 177)'} : {background:'rgba(60, 78, 177, 0.3)'}}\r\n                        onClick={() => setDetailsFromOpen(false)}>\r\n                            Dodaj nowy produkt\r\n                </Button>\r\n                <Button style={!detailsFormOpen ? {background:'rgb(60, 78, 177)'} : {background:'rgba(60, 78, 177, 0.3)'}}\r\n                        onClick={() => setDetailsFromOpen(true)}\r\n                        >Edytuj produkt\r\n                </Button>\r\n            \r\n            </ButtonGroup>\r\n\r\n            \r\n            <hr/>\r\n            {\r\n                detailsFormOpen ? \r\n                    <>\r\n                        <EditProductDetailsForm enqueueSnackbar={enqueueSnackbar}/>\r\n                        <hr/>\r\n                        <ReduceStorageForm enqueueSnackbar={enqueueSnackbar}/>\r\n                    </> \r\n                    : <AddProductForm enqueueSnackbar={enqueueSnackbar}/>\r\n            }\r\n            <hr/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductForm;","import styled from 'styled-components';\r\n\r\nexport const EditBtn = styled.button`\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    padding: 12px 20px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const PaymentStatusWrapper = styled.div`\r\n    padding: 10px;\r\n    background-color: rgba(255,255,255,0.2);\r\n`;","import { useState, useEffect } from 'react'; \r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport { updatePaymentStatus, updateOrderStatus } from 'state/orders/ordersActions';\r\nimport { EditBtn, PaymentStatusWrapper } from './paymentStatus.css';\r\n\r\n\r\n\r\n\r\nconst orderStatusList = [\r\n    {\r\n        key : 1,\r\n        value : \"nowe\"\r\n    },\r\n    {\r\n        key : 2,\r\n        value : \"przyjete\"\r\n    },\r\n    {\r\n        key : 3,\r\n        value : \"pakowane\"\r\n    },\r\n    {\r\n        key : 4,\r\n        value : \"wyslane\"\r\n    },\r\n    {\r\n        key : 5,\r\n        value : \"zrealizowane\"\r\n    },\r\n    {\r\n        key : 6,\r\n        value : \"anulowane\"\r\n    }\r\n]\r\n\r\nconst PaymentStatus = ({orderId, auth, enqueueSnackbar}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [isPaid, setIsPaid] = useState(false);\r\n    const [paymentMethod, setPaymentMethod] = useState('');\r\n    const [orderStatus, setOrderStatus] = useState(orderStatusList[0].key);\r\n\r\n    const currentlyWatched = useSelector(state => \r\n        state.orders.find(order => \r\n            parseInt(order.order_id) === parseInt(orderId)\r\n        )\r\n    ); \r\n\r\n\r\n    const orderStatusKeyToValue = (key) => {\r\n        const res = orderStatusList.find(stat => stat.key === key);\r\n        return res.value;\r\n    }\r\n\r\n    const orderStatusValueToKey = (value) => {\r\n        const res = orderStatusList.find(stat => stat.value === value);\r\n        return res.key;\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setIsPaid(currentlyWatched.isPaid || false);\r\n        setPaymentMethod(currentlyWatched.paymentMethod || '');\r\n        setOrderStatus( orderStatusValueToKey(currentlyWatched.orderStatus) || orderStatusList[0].key)\r\n    }, [currentlyWatched]);\r\n\r\n    const handlePaymentSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(currentlyWatched.isPaid !== isPaid){\r\n            dispatch(updatePaymentStatus({isPaid, orderId, enqueueSnackbar}));\r\n        }\r\n    } \r\n\r\n    const handleStatus = (e) => {\r\n        e.preventDefault();\r\n\r\n        const status = orderStatusKeyToValue(orderStatus);\r\n\r\n        if(currentlyWatched.orderStatus !== status){\r\n            dispatch(updateOrderStatus({status, orderId, enqueueSnackbar}));\r\n        }\r\n    } \r\n\r\n    // admin features\r\n    const handlePayment = () => {\r\n        return (\r\n        <>\r\n            <br/>\r\n            <hr/>\r\n            <h4>Czy zapłacone:</h4>\r\n            <form onSubmit={handlePaymentSubmit}>\r\n                <Select\r\n                labelId=\"payment-label\"\r\n                id=\"payment\"\r\n                fullWidth\r\n                value={isPaid}\r\n                onChange={e => setIsPaid(e.target.value)}\r\n                >\r\n                <MenuItem value={true}>Zapłacono</MenuItem>\r\n                <MenuItem value={false}>Nie zapłacono</MenuItem>\r\n                </Select>\r\n                <br/><br/>\r\n                <EditBtn type=\"submit\">\r\n                    Zmień\r\n                </EditBtn>\r\n            </form>\r\n        </>)\r\n    }\r\n\r\n    const handleOrderStatus = () => {\r\n        return (\r\n        <>\r\n            <br/>\r\n            <hr/>\r\n            <h4>Status zamówienia:</h4>\r\n            <form onSubmit={handleStatus}>\r\n                <Select\r\n                labelId=\"orderStatus-label\"\r\n                id=\"orderStatus\"\r\n                fullWidth\r\n                value={orderStatus}\r\n                onChange={e => setOrderStatus(e.target.value)}\r\n                >\r\n                    {orderStatusList.map(status => <MenuItem value={status.key}>{status.value}</MenuItem>)}\r\n                </Select>\r\n                <br/><br/>\r\n                <EditBtn type=\"submit\">\r\n                    Zmień\r\n                </EditBtn>\r\n            </form>\r\n        </>)\r\n    }\r\n\r\n\r\n    // normal user features\r\n    const basicUserPayment = () => {\r\n        return ( \r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                <br/>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"isPaid\"\r\n                        label=\"Czy zapłacone?\"\r\n                        id=\"isPaid\"\r\n                        variant=\"outlined\"\r\n                        value={isPaid ? 'zapłacone' : 'nie zapłacone'}\r\n                    />\r\n                </Grid> \r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    const basicUserOrderStatus = () => {\r\n        return ( \r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                <br/>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"orderStatus\"\r\n                        label=\"Status zamówienia\"\r\n                        id=\"orderStatus\"\r\n                        variant=\"outlined\"\r\n                        value={orderStatusKeyToValue(orderStatus)}\r\n                    />\r\n                </Grid> \r\n            </Grid>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <PaymentStatusWrapper>\r\n            <h3>Status płatności</h3>\r\n            <hr/>\r\n            <br/>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"paymentMethod\"\r\n                        label=\"Metoda płatności\"\r\n                        id=\"paymentMethod\"\r\n                        variant=\"outlined\"\r\n                        value={paymentMethod}\r\n                    />\r\n                </Grid> \r\n            </Grid>\r\n            <br/>\r\n            {basicUserPayment()}\r\n            {basicUserOrderStatus()}\r\n            <br/>\r\n            <hr/>\r\n            <br/>\r\n            {auth ? <h3>Zarządzaj zamówieniem:</h3> : null}\r\n            {auth ? handlePayment() : null}\r\n            {auth ? handleOrderStatus() : null}\r\n\r\n        </PaymentStatusWrapper>\r\n    )\r\n}\r\n\r\nexport default PaymentStatus;","import styled from 'styled-components';\r\n\r\nexport const DetailsWrapper = styled.div`\r\n    padding: 10px;\r\n    background-color: rgba(255,255,255,0.2);\r\n`","import TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { DetailsWrapper } from './orderAddressDetails.css';\r\n\r\n\r\nconst OrderAddressDetails = ({orderData}) => {\r\n\r\n    return (\r\n        <DetailsWrapper>\r\n            <h3>Szczegóły</h3>\r\n            <hr/>\r\n            <br/>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        disabled\r\n                        name=\"name\"\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        label=\"Imię\"\r\n                        variant=\"outlined\"\r\n                        value={orderData.userName}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        id=\"lastName\"\r\n                        label=\"Nazwisko\"\r\n                        name=\"lastName\"\r\n                        variant=\"outlined\"\r\n                        value={orderData.userSurname}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        id=\"email\"\r\n                        variant=\"outlined\"\r\n                        value={orderData.email}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"phoneNumber\"\r\n                        label=\"Numer telefonu\"\r\n                        id=\"phoneNumber\"\r\n                        variant=\"outlined\"\r\n                        value={orderData.phoneNumber}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <br/>    \r\n            <hr/>\r\n            <br/>\r\n\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}  sm={6}>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"country\"\r\n                        label=\"Państwo\"\r\n                        id=\"country\"\r\n                        variant=\"outlined\"\r\n                        value={orderData.country}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}  sm={6}>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"postcode\"\r\n                        label=\"Kod pocztowy\"\r\n                        id=\"postcode\"\r\n                        variant=\"outlined\"\r\n                        value={orderData.postCode}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"city\"\r\n                        label=\"Miejscowość\"\r\n                        id=\"city\"\r\n                        variant=\"outlined\"\r\n                        value={orderData.city}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"street\"\r\n                        label=\"Ulica\"\r\n                        id=\"street\"\r\n                        variant=\"outlined\"\r\n                        value={orderData.street}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}  sm={6}>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"building\"\r\n                        label=\"Nr budynku\"\r\n                        id=\"building\"\r\n                        variant=\"outlined\"\r\n                        value={orderData.building}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}  sm={6}>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"apartment\"\r\n                        label=\"Nr lokalu\"\r\n                        id=\"apartment\"\r\n                        variant=\"outlined\"\r\n                        value={orderData.apartment}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <br/>    \r\n            <hr/>\r\n            <br/>\r\n\r\n            <Grid container spacing={2}>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        disabled\r\n                        fullWidth\r\n                        name=\"datePlaced\"\r\n                        label=\"Data złożenia\"\r\n                        id=\"datePlaced\"\r\n                        variant=\"outlined\"\r\n                        value={orderData.datePlaced.split('T')[0]}\r\n                    />\r\n                </Grid>\r\n\r\n                {\r\n                    orderData.dateFulfillment \r\n                    ? <Grid item xs={12}>\r\n                        <TextField\r\n                            disabled\r\n                            fullWidth\r\n                            name=\"dateFulfillment\"\r\n                            label=\"Data zrealizowania\"\r\n                            id=\"dateFulfillment\"\r\n                            variant=\"outlined\"\r\n                            value={orderData.dateFulfillment.split('T')[0]}\r\n                        />\r\n                    </Grid> \r\n                    : null\r\n                }\r\n\r\n            </Grid>\r\n            <br/>    \r\n            <hr/>\r\n            <br/>\r\n            <h3>Komentarz do zamówienia:</h3>\r\n            <h4>{orderData.clientComments}</h4>\r\n        </DetailsWrapper>\r\n    );\r\n}\r\n\r\nexport default OrderAddressDetails;","import { useDispatch } from 'react-redux';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport OfflineBoltIcon from '@material-ui/icons/OfflineBolt';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { addProductToService } from 'state/productsService/productsServiceActions';\r\n\r\nconst Row = ({ productData, auth, fulfilmentDate=null, enqueueSnackbar }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleBtnService = (e) => {\r\n        e.preventDefault();\r\n        if(fulfilmentDate){\r\n            dispatch(addProductToService({ \r\n                orderLineId : productData.orderLineId,\r\n                description : '',\r\n                status : 'nowe',\r\n                enqueueSnackbar }))\r\n        } else { \r\n            enqueueSnackbar('Zamówienie musi być zrealizowane by dodać produkt do serwisu', {variant: 'warning'})\r\n        }    \r\n    } \r\n\r\n    return (\r\n        <TableRow key={productData.id}>\r\n            {\r\n                auth \r\n                ? <TableCell align=\"center\">\r\n                        <IconButton onClick={handleBtnService}>\r\n                            <OfflineBoltIcon style={{color: '#F02416'}}/>\r\n                        </IconButton>\r\n                  </TableCell>\r\n                : null\r\n            }\r\n                \r\n            <TableCell component=\"th\" scope=\"row\">\r\n                {productData.name}\r\n            </TableCell>\r\n            <TableCell align=\"right\">{productData.pricePerItem + \" zł\"}</TableCell>\r\n            <TableCell align=\"center\">{productData.quantity}</TableCell>\r\n            <TableCell align=\"right\">\r\n                {parseFloat(productData.quantity * productData.pricePerItem).toFixed(2) + \" zł\"}\r\n            </TableCell>\r\n        </TableRow>\r\n    )\r\n} \r\n\r\nexport default Row;","import styled from 'styled-components';\r\n\r\nexport const ProductListWrapper = styled.div`\r\n    padding: 0 10px 0 10px;\r\n`;\r\n\r\nexport const Btn = styled.button`\r\n    background-color: Transparent;\r\n    background-repeat:no-repeat;\r\n    border: none;\r\n    cursor:pointer;\r\n    overflow: hidden;\r\n    outline:none;\r\n    color: darkgray;\r\n    font-size: large;\r\n\r\n    &:hover{\r\n        background-color: red;\r\n    }\r\n`","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport Row from './OrderProductListRow';\r\nimport { ProductListWrapper } from './orderProductList.css';\r\n\r\nconst OrderProductList = ({productList, auth, fulfilmentDate=null}) => {\r\n    \r\n    const { enqueueSnackbar } = useSnackbar();    \r\n\r\n    productList.sort((a, b) => a.id - b.id);\r\n\r\n    return (\r\n        <ProductListWrapper>\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow key=\"head\">\r\n                            {\r\n                                auth \r\n                                ? <TableCell>Dodaj produkt do serwisu</TableCell>\r\n                                : null\r\n                            }\r\n                            <TableCell align=\"left\">Nazwa</TableCell>\r\n                            <TableCell align=\"right\">Cena za sztuke</TableCell>\r\n                            <TableCell align=\"center\">Ilość</TableCell>\r\n                            <TableCell align=\"right\">Suma</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        { productList.map(product => <Row \r\n                            productData={product} \r\n                            auth={auth} \r\n                            fulfilmentDate={fulfilmentDate}\r\n                            enqueueSnackbar={enqueueSnackbar} />)}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </ProductListWrapper>\r\n    );\r\n}\r\n\r\nexport default OrderProductList;","import { useDispatch } from 'react-redux';\r\nimport { setToEditProductInService } from 'state/productsService/productsServiceActions';\r\n\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst Row = ({ productData }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleInfo = (e) => {\r\n        e.preventDefault();\r\n        dispatch(setToEditProductInService({product:productData}));\r\n    } \r\n\r\n    return (    \r\n        <TableRow key={productData.id}>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n            {productData.orderTitle}\r\n            </TableCell>\r\n            <TableCell align=\"left\">{productData.productName}</TableCell>\r\n            <TableCell align=\"center\">{productData.producer}</TableCell>\r\n            <TableCell align=\"center\">{productData.inStock}</TableCell>\r\n            <TableCell align=\"right\">{productData.status}</TableCell>\r\n            <TableCell align=\"right\">\r\n                <IconButton aria-label=\"info\"\r\n                            onClick={handleInfo}>\r\n                    <EditIcon style={{color:'#F08E02'}}/> \r\n                </IconButton>\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n}\r\n\r\nexport default Row;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Row from './ProductsInServiceRow';\r\n\r\nconst ProductsInServiceList = () => {\r\n    const products = useSelector(state => state.productsInService.productList);\r\n    \r\n    products.sort((a, b) => a.id - b.id);\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow key=\"head\">\r\n                            <TableCell>Zamówienie</TableCell>\r\n                            <TableCell align=\"left\">Nazwa produktu</TableCell>\r\n                            <TableCell align=\"center\">Producent</TableCell>\r\n                            <TableCell align=\"center\">Stan magazynowy produktu</TableCell>\r\n                            <TableCell align=\"right\">Status</TableCell>\r\n                            <TableCell align=\"right\">Edytuj</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        { products.map(product => \r\n                            <Row productData={product} />)}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default ProductsInServiceList;","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport { updateProductStatusInService } from 'state/productsService/productsServiceActions';\r\nimport './productsInServiceForm.css';\r\n\r\n\r\nconst ProductInServiceForm = () => {\r\n    const dispatch = useDispatch();\r\n    const { enqueueSnackbar } = useSnackbar();    \r\n\r\n    const [status, setStatus] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const serviceEdit = useSelector(state => state.productsInService.currentlyEdit);\r\n\r\n    useEffect(() => {\r\n        setStatus(serviceEdit.status || '');\r\n        setDescription(serviceEdit.description || '');\r\n    },[serviceEdit]);\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch(updateProductStatusInService({ \r\n            serviceId : serviceEdit.id,\r\n            description,\r\n            status, \r\n            enqueueSnackbar \r\n        }));\r\n    } \r\n    \r\n    const showBtns = () => {\r\n        return (\r\n            <> \r\n                <button id=\"updateServiceBtn\" onClick={handleEdit}>Aktualizuj</button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div id=\"updateService\">\r\n            <br/>\r\n            <h4>Status: </h4>\r\n            <input type=\"text\" name=\"serviceStatus\" id=\"serviceStatus\" value={status} required \r\n            onChange={(event) => setStatus(event.target.value)}/>\r\n            \r\n            <h4>Opis usterki:</h4>\r\n            <textarea name=\"serviceDescription\" id=\"serviceDescription\" value={description}\r\n            onChange={(event) => setDescription(event.target.value)}></textarea>\r\n\r\n            {serviceEdit.id ? showBtns() : null}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductInServiceForm;","import axios from '../../axios-config.js';\r\n\r\n\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\n\r\nexport const USER_ACCOUNT_UPDATE_SUCCESS = 'USER_ACCOUNT_UPDATE_SUCCESS';\r\nexport const USER_ACCOUNT_UPDATE_FAILURE = 'USER_ACCOUNT_UPDATE_FAILURE';\r\n\r\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\r\n\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAILURE = 'REGISTER_FAILURE';\r\n\r\n\r\n\r\nexport const submitRegister = ( { name, surname, phoneNumber, email, password, enqueueSnackbar } ) => async dispatch => {\r\n  axios.post('/auth/register', { name, surname, phoneNumber, email, password })\r\n    .then(res => {\r\n      const message=`Witaj w serwisie ${name}!`;  \r\n      enqueueSnackbar(\r\n        message, {\r\n            variant: 'success',\r\n        }\r\n      );\r\n      \r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data\r\n      })\r\n    })\r\n    .catch(err => {\r\n      const message='Użytkownik o podanym adresie już istnieje';  \r\n      enqueueSnackbar(\r\n        message, {\r\n          variant: 'error',\r\n        }\r\n      );\r\n\r\n      dispatch({\r\n        type: REGISTER_FAILURE,\r\n        payload: err.message\r\n      })\r\n  });\r\n}\r\n\r\nexport const login = ( { email, password, enqueueSnackbar } ) => async dispatch => {\r\n    axios.post('/auth/login', {email, password})\r\n      .then(res => {\r\n        const message='Witaj ponownie!';  \r\n        enqueueSnackbar(\r\n          message, {\r\n              variant: 'success',\r\n          }\r\n        );\r\n        \r\n        dispatch({\r\n          type: LOGIN_SUCCESS,\r\n          payload: res.data\r\n        })\r\n      })\r\n      .catch(err => {      \r\n        const message='Wpisz poprawne dane';  \r\n          enqueueSnackbar(\r\n          message, {\r\n              variant: 'warning',\r\n          }\r\n        );\r\n        \r\n        dispatch({\r\n          type: LOGIN_FAILURE,\r\n          payload: err.message\r\n        })\r\n    });\r\n}\r\n\r\nexport const updateAccountData = ( { name, surname, phoneNumber, userId, enqueueSnackbar } ) => async dispatch => {\r\n  axios.post(`/users/update/${userId}`, { name, surname, phoneNumber })\r\n    .then(res => {\r\n      const message='Zaktualizowano pomyślnie';  \r\n      enqueueSnackbar(\r\n        message, {\r\n            variant: 'success',\r\n        }\r\n      );\r\n\r\n      dispatch({\r\n        type: USER_ACCOUNT_UPDATE_SUCCESS,\r\n        payload: { id:userId, name, surname, phoneNumber }\r\n      })\r\n    })\r\n    .catch(err => {\r\n      const message='Niepoprawne dane';  \r\n      enqueueSnackbar(\r\n        message, {\r\n            variant: 'error',\r\n        }\r\n      );\r\n\r\n      dispatch({\r\n        type: USER_ACCOUNT_UPDATE_FAILURE,\r\n        payload: err.message\r\n      })\r\n  });\r\n}\r\n\r\nexport const logout = ({ enqueueSnackbar }) => {\r\n  const message='Okazje czekają ;) Wróć jak najszybciej!';  \r\n  enqueueSnackbar(\r\n    message, {\r\n        variant: 'info',\r\n    }\r\n  );\r\n  return {\r\n    type: LOGOUT_REQUEST\r\n  }\r\n}","import axios from '../../axios-config.js';\r\n\r\n\r\nexport const GET_ORDERS_DETAILS_SUCCES = 'GET_ORDERS_DETAILS_SUCCES';\r\nexport const GET_ORDERS_DETAILS_FAILURE = 'GET_ORDERS_DETAILS_FAILURE';\r\n\r\nexport const GET_ALL_ORDERS_DETAILS_SUCCES = 'GET_ALL_ORDERS_DETAILS_SUCCES';\r\nexport const GET_ALL_ORDERS_DETAILS_FAILURE = 'GET_ALL_ORDERS_DETAILS_FAILURE';\r\n\r\nexport const UPDATE_PAYMENT_STATUS_SUCCESS = 'UPDATE_PAYMENT_STATUS_SUCCESS';\r\nexport const UPDATE_PAYMENT_STATUS_FAILURE = 'UPDATE_PAYMENT_STATUS_FAILURE'; \r\n\r\nexport const UPDATE_ORDER_STATUS_SUCCESS = 'UPDATE_ORDER_STATUS_SUCCESS';\r\nexport const UPDATE_ORDER_STATUS_FAILURE = 'UPDATE_ORDER_STATUS_FAILURE'; \r\n\r\n\r\nexport const updateOrderStatus = ({status, orderId, enqueueSnackbar}) =>  async dispatch => {\r\n    axios.put(`/orders/status/${orderId}`, { status })\r\n        .then(res => {\r\n            const message=`Zmieniono status zamówienia nr ${orderId} na: ${status}!`;  \r\n            enqueueSnackbar(\r\n              message, {\r\n                  variant: 'success',\r\n              }\r\n            );\r\n\r\n            dispatch({\r\n                type: UPDATE_ORDER_STATUS_SUCCESS,\r\n                payload: {status, orderId},\r\n            })\r\n        })\r\n        .catch(err => {\r\n            const message='Nie można zmienić statusu zamówienia. Spróbuj ponownie.';  \r\n            enqueueSnackbar(\r\n              message, {\r\n                  variant: 'error',\r\n              }\r\n            );\r\n\r\n            dispatch({\r\n                type: UPDATE_ORDER_STATUS_FAILURE, \r\n            })\r\n        })\r\n}\r\n\r\nexport const updatePaymentStatus = ({isPaid, orderId, enqueueSnackbar}) => async dispatch => {\r\n    axios.put(`/orders/payment/${orderId}`, { isPaid })\r\n        .then(res => {\r\n\r\n            const paymentStatus = isPaid ? 'zapłacono' : 'nie zapłacono'; \r\n            const message=`Zmieniono status płatności zamówienia nr ${orderId} na: ${paymentStatus}`;  \r\n\r\n            enqueueSnackbar(\r\n              message, {\r\n                  variant: 'success',\r\n              }\r\n            );\r\n\r\n            dispatch({\r\n                type: UPDATE_PAYMENT_STATUS_SUCCESS,\r\n                payload: {isPaid, orderId},\r\n            })\r\n        })\r\n        .catch(err => {\r\n            const message='Nie zmieniono statusu płatności. Spróbuj ponownie.';  \r\n            enqueueSnackbar(\r\n              message, {\r\n                  variant: 'error',\r\n              }\r\n            );\r\n\r\n            dispatch({\r\n                type: UPDATE_PAYMENT_STATUS_FAILURE, \r\n            })\r\n        })\r\n}\r\n\r\n\r\nexport const getAllOrders = () => async dispatch => {\r\n    axios.get(\"/orders\")\r\n        .then(res => {\r\n            dispatch({\r\n                type : GET_ALL_ORDERS_DETAILS_SUCCES,\r\n                payload: res.data,\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            dispatch({\r\n                type : GET_ALL_ORDERS_DETAILS_FAILURE,\r\n                message: err.message\r\n            })\r\n        });\r\n}\r\n\r\nexport const getUserOrders = ({userId}) => async dispatch => {\r\n    axios.get(`/orders/${userId}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type : GET_ORDERS_DETAILS_SUCCES,\r\n                payload: res.data,\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            dispatch({\r\n                type : GET_ORDERS_DETAILS_FAILURE,\r\n                message: err.message\r\n            })\r\n        });\r\n}","import axios from '../../axios-config.js';\r\n\r\nexport const CREATE_COMMENT_SUCCES = 'CREATE_COMMENT_SUCCES';\r\nexport const CREATE_COMMENT_FAILURE = 'CREATE_COMMENT_FAILURE';\r\n\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\n\r\nexport const GET_COMMENTS_SUCCES = 'GET_COMMENTS_SUCCES';\r\nexport const GET_COMMENTS_FAILURE = 'GET_COMMENTS_FAILURE';\r\n\r\nexport const getCommentsToProduct = (productId) => async dispatch => {\r\n    if(productId){\r\n      axios.get(`/comments/${productId}`)\r\n        .then(res => {\r\n          dispatch({\r\n            type: GET_COMMENTS_SUCCES,\r\n            payload: res.data,\r\n          })\r\n        })\r\n        .catch(err => {\r\n          dispatch({\r\n            type: GET_COMMENTS_FAILURE,\r\n            payload: {\r\n              message: err.message\r\n            },\r\n          })\r\n        });\r\n      }\r\n}\r\n\r\nexport const createCommentToProduct = ({ nick, stars, description, productId, authorId }) => async dispatch => {\r\n  axios.put(\"/comments/create\", { nick, stars, description, productId, authorId })\r\n    .then(res => {\r\n      dispatch({\r\n        type: CREATE_COMMENT_SUCCES,\r\n        payload: res.data,\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: GET_COMMENTS_FAILURE,\r\n        payload: {\r\n          message: err.message\r\n        },\r\n      })\r\n    });\r\n}","import axios from '../../axios-config.js';\r\n\r\nexport const GET_ALL_CATEGORIES_SUCCESS = 'GET_ALL_CATEGORIES_SUCCESS';\r\nexport const GET_ALL_CATEGORIES_FAILURE = 'GET_ALL_CATEGORIES_FAILURE';\r\n\r\nexport const getAllCategories = () => async dispatch => {\r\n    axios.get('/categories')\r\n        .then(res => {\r\n            dispatch({\r\n                type : GET_ALL_CATEGORIES_SUCCESS,\r\n                payload : res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : GET_ALL_CATEGORIES_FAILURE,\r\n                payload : err.message\r\n            })\r\n        })\r\n}"],"sourceRoot":""}