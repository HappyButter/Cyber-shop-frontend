{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","../node_modules/@material-ui/icons/PersonAddRounded.js","styles/AccountManagement.css.js","pages/Register/Register.js"],"names":["createSvgIcon","React","d","Avatar","props","ref","alt","childrenProp","children","classes","className","_props$component","component","Component","imgProps","sizes","src","srcSet","_props$variant","variant","other","_objectWithoutProperties","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","_extends","img","Person","fallback","clsx","root","system","colorDefault","withStyles","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","color","palette","background","default","backgroundColor","type","grey","circle","circular","rounded","shape","square","textAlign","objectFit","textIndent","name","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","_default","createElement","RedirectLink","styled","Link","AccountManagementWrapper","Container","useStyles","makeStyles","paper","marginTop","spacing","flexDirection","marginBottom","avatar","margin","secondary","main","form","submit","Register","useState","setName","surname","setSurname","email","setEmail","phoneNumber","setPhoneNumber","password","setPassword","isNameValid","setIsNameValid","isSurnameValid","setIsSurnameValid","isEmailValid","setIsEmailValid","isPhoneNumberValid","setIsPhoneNumberValid","isPasswordValid","setIsPasswordValid","enqueueSnackbar","useSnackbar","validateName","test","length","validateSurname","validateEmail","validatePhoneNumber","validatePassword","auth","useSelector","state","dispatch","useDispatch","maxWidth","Typography","onSubmit","e","preventDefault","submitRegister","Grid","container","item","xs","sm","TextField","autoComplete","required","fullWidth","id","label","onBlur","helperText","error","onChange","event","target","placeholder","Button","to","isLoggedIn"],"mappings":"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","file":"static/js/7.a9ba1f7f.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"circular\"`. */\n    circular: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    var classes = props.classes;\n\n    if (classes == null) {\n      return null;\n    }\n\n    if (classes.circle != null && // 2 classnames? one from withStyles the other must be custom\n    classes.circle.split(' ').length > 1) {\n      throw new Error(\"Material-UI: The `circle` class was deprecated. Use `circular` instead.\");\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['circle', 'circular', 'rounded', 'square']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'circle') {\n      throw new Error('Material-UI: `variant=\"circle\"` was deprecated. Use `variant=\"circular\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm-9-2V8c0-.55-.45-1-1-1s-1 .45-1 1v2H2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1H6zm9 4c-2.67 0-8 1.34-8 4v1c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-1c0-2.66-5.33-4-8-4z\"\n}), 'PersonAddRounded');\n\nexports.default = _default;","import styled from 'styled-components';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const RedirectLink = styled(Link)`\r\n    font-size: 0.6em;\r\n    text-decoration: none;\r\n    color: #3f51b5;\r\n`;\r\n\r\nexport const AccountManagementWrapper = styled(Container)`\r\n    background-color: rgba(255,255,255, 0.5);\r\n    color: rgb(239, 255, 250, 0.8);\r\n    font-size: 180%;\r\n    border-radius: 1em;\r\n    padding-top: 1px;\r\n    padding-bottom: 11px;\r\n    margin-top: 1em;\r\n`","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PersonAddRoundedIcon from '@material-ui/icons/PersonAddRounded';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AccountManagementWrapper, RedirectLink } from 'styles/AccountManagement.css'\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { submitRegister } from 'state/auth/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(3),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        height: 60,\r\n        margin: theme.spacing(3, 0, 2),\r\n    },    \r\n}));\r\n\r\n\r\nconst Register = () => {\r\n    const classes = useStyles();\r\n    \r\n    const [name, setName] = useState('');\r\n    const [surname, setSurname] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [isNameValid, setIsNameValid] = useState(true);\r\n    const [isSurnameValid, setIsSurnameValid] = useState(true);\r\n    const [isEmailValid, setIsEmailValid] = useState(true);\r\n    const [isPhoneNumberValid, setIsPhoneNumberValid] = useState(true);\r\n    const [isPasswordValid, setIsPasswordValid] = useState(true);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const validateName = () => {\r\n        const regName = /[0-9]+/g;\r\n        return ( !regName.test(name) && name.length > 2 )\r\n    }\r\n\r\n    const validateSurname = () => {\r\n        const regName = /[0-9]+/g;\r\n        return ( !regName.test(surname) && surname.length > 2 )\r\n    }\r\n  \r\n    const validateEmail = () => {\r\n        const regEmail = /^(([^<>()\\\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return (regEmail.test(email) && email.length > 1);\r\n    }\r\n\r\n    const validatePhoneNumber = () => {\r\n        const regPhoneNumber = /[0-9]{3}-[0-9]{3}-[0-9]{3}/;\r\n        return (regPhoneNumber.test(phoneNumber) && phoneNumber.length === 11);\r\n    }\r\n\r\n    const validatePassword = () => {\r\n        return password.length > 4 && password.length < 30;\r\n    }\r\n    \r\n    const validate = () => {\r\n        let isValid = validateName()\r\n                        && validateSurname()\r\n                        && validateEmail()\r\n                        && validatePhoneNumber()\r\n                        && validatePassword();\r\n        return isValid; \r\n    }\r\n\r\n\r\n    const auth = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmitRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        validate() \r\n        ? dispatch(submitRegister({ name, surname, phoneNumber, email, password, enqueueSnackbar }))\r\n        : enqueueSnackbar(\"Popraw dane i spróbuj ponownie\")\r\n    }\r\n\r\n    return (\r\n        <AccountManagementWrapper component=\"main\" maxWidth=\"xs\">\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <PersonAddRoundedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Rejestracja\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={handleSubmitRegister}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"given-name\"\r\n                                name=\"name\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"name\"\r\n                                label=\"Imię\"\r\n                                onBlur={() => setIsNameValid(validateName())}\r\n                                helperText={isNameValid ? null : \"Imię powinno być dłuższe niż 2 znaki i nie powinno zawierać cyfr\"}\r\n                                error={!isNameValid}\r\n                                onChange={(event) => setName(event.target.value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"family-name\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"lastName\"\r\n                                label=\"Nazwisko\"\r\n                                name=\"lastName\"\r\n                                onBlur={() => setIsSurnameValid(validateSurname())}\r\n                                helperText={isSurnameValid ? null : \"Nazwisko powinno być dłuższe niż 2 znaki i nie powinno zawierać cyfr\"}\r\n                                error={!isSurnameValid}\r\n                                onChange={(event) => setSurname(event.target.value)}\r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                onBlur={() => setIsEmailValid(validateEmail())}\r\n                                helperText={isEmailValid ? null : \"Wpisz poprawny email\"}\r\n                                error={!isEmailValid}\r\n                                onChange={(event) => setEmail(event.target.value)}\r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                type=\"tel\"\r\n                                name=\"phoneNumber\"\r\n                                label=\"Numer telefonu\"\r\n                                placeholder=\"format: 123-123-123\"\r\n                                onBlur={() => setIsPhoneNumberValid(validatePhoneNumber())}\r\n                                helperText={isPhoneNumberValid ? null :\"format: 123-123-123\"}\r\n                                error={!isPhoneNumberValid}\r\n                                id=\"phoneNumber\"\r\n                                autoComplete=\"tel-national\"\r\n                                onChange={(event) => setPhoneNumber(event.target.value)}\r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Hasło\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onBlur={() => setIsPasswordValid(validatePassword())}\r\n                                helperText={isPasswordValid ? null :\"Hasło powinno zawierać co najmniej 4 znaki\"}\r\n                                error={!isPasswordValid}\r\n                                onChange={(event) => setPassword(event.target.value)}\r\n                            />\r\n                        </Grid>\r\n                    </Grid> \r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Zarejestruj\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <RedirectLink to=\"/login\" >\r\n                                Masz już konto? Zaloguj się!\r\n                            </RedirectLink>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            { auth.isLoggedIn === true ? <Redirect to=\"/\" /> : null }\r\n\r\n        </AccountManagementWrapper>\r\n    );\r\n}\r\n\r\nexport default Register;"],"sourceRoot":""}